{
    "pipes": [
        {
            "name": "TranslatePipe",
            "id": "pipe-TranslatePipe-0cd98c65bb2b1f290f002c4b846b190a",
            "file": "src/app/memorial/pipe/translate.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "items",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "translate",
            "sourceCode": "import {Pipe, PipeTransform} from '@angular/core';\r\nimport {TranslocoService} from '@ngneat/transloco';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Pipe({name: 'translate'})\r\nexport class TranslatePipe implements PipeTransform {\r\n\r\n  constructor(private translateService: TranslocoService) {\r\n  }\r\n\r\n  transform(items: any): any {\r\n\r\n    return new Observable(observer => {\r\n      this.translateService.selectTranslate(items).subscribe(result => {\r\n        observer.next(result);\r\n      });\r\n\r\n      this.translateService.langChanges$.subscribe(event => {\r\n        this.translateService.selectTranslate(items).subscribe(result => {\r\n          observer.next(result);\r\n        });\r\n      });\r\n    });\r\n  }\r\n}\r\n"
        }
    ],
    "interfaces": [
        {
            "name": "AdminSearchTypeModel",
            "id": "interface-AdminSearchTypeModel-357223a8847a8e7b0a1c2994793154a9",
            "file": "src/app/customization-admin/models/admin-search-type.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AdminSearchTypeModel {\r\n  name: string;\r\n  isAvailable: boolean;\r\n  isDefault: boolean;\r\n  label?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "isAvailable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "isDefault",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "AuthStorageModel",
            "id": "interface-AuthStorageModel-e5971f1fa71a9eea34657e362608032d",
            "file": "src/app/core/models/auth-storage-model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AuthStorageModel {\r\n  token: string;\r\n  rememberMe: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "rememberMe",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Filter",
            "id": "interface-Filter-3cbbdfd34a4fb9abcaa7662daf939614",
            "file": "src/app/memorial/models/sort.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Sort {\r\n  label: string;\r\n  param: string;\r\n  value: string;\r\n  key: string;\r\n}\r\n\r\nexport interface Filter {\r\n  label: string;\r\n  param: string;\r\n  value: string;\r\n  key: string;\r\n}\r\n\r\nexport const sortItems: Array<Sort> = [\r\n  {label: 'Sort by', param: null, value: null, key: 'sortBy'},\r\n  {label: 'Date of birth', param: 'birth_date', value: 'desc', key: 'dateOfBirth'},\r\n  {label: 'Date of death', param: 'death_date', value: 'desc', key: 'dateOfDeath'},\r\n];\r\n\r\nexport const filterItems: Array<Filter> = [\r\n  {label: 'Filter by', param: null, value: null, key: 'filterBy'},\r\n  {label: 'Memorial page', param: 'memorial_page', value: 'desc', key: 'memorialPage'},\r\n  {label: 'Have donations', param: 'having_donation', value: 'true', key: 'haveDonation'},\r\n  {label: 'Has death notice', param: 'having_death_notice', value: 'true', key: 'hasDeathNotice'},\r\n  {label: 'Has flower shop', param: 'having_flower_shop', value: 'Home', key: 'hasFlowerShop'},\r\n];\r\n",
            "properties": [
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "param",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "FuneralHomeSetting",
            "id": "interface-FuneralHomeSetting-0362f7b448ad0ed59eeeccd13dbd7063",
            "file": "src/app/memorial/models/funeralhome.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface FuneralHomeSetting {\r\n  id: number;\r\n  adminName: string;\r\n  name: string;\r\n  themeId: number;\r\n  mainColor: string;\r\n  bannerURL: string;\r\n  logoURL: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "adminName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "bannerURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "logoURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "mainColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "themeId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "HttpError",
            "id": "interface-HttpError-b5837f970bb14aa0a74f8e66454c6ba4",
            "file": "src/app/core/models/http-error.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface HttpError {\r\n  ok?: boolean;\r\n  type?: string;\r\n  message: string;\r\n  status: number;\r\n  statusText: string;\r\n  errorCode?: string;\r\n  codes?: any;\r\n}\r\n",
            "properties": [
                {
                    "name": "codes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "errorCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "ok",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "statusText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "SearchParam",
            "id": "interface-SearchParam-903725416504c8b834942183545e9912",
            "file": "src/app/memorial/models/search-param.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SearchParam {\r\n  firstname: string;\r\n  lastname: string;\r\n  regionId: string;\r\n  cityId: string;\r\n  'birthDate.dateFrom': Date;\r\n  'birthDate.dateTo': Date;\r\n  'deathDate.dateFrom': Date;\r\n  'deathDate.dateTo': Date;\r\n}\r\n",
            "properties": [
                {
                    "name": "birthDate.dateFrom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "birthDate.dateTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "cityId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "deathDate.dateFrom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "deathDate.dateTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "firstname",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "lastname",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "regionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Sort",
            "id": "interface-Sort-3cbbdfd34a4fb9abcaa7662daf939614",
            "file": "src/app/memorial/models/sort.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Sort {\r\n  label: string;\r\n  param: string;\r\n  value: string;\r\n  key: string;\r\n}\r\n\r\nexport interface Filter {\r\n  label: string;\r\n  param: string;\r\n  value: string;\r\n  key: string;\r\n}\r\n\r\nexport const sortItems: Array<Sort> = [\r\n  {label: 'Sort by', param: null, value: null, key: 'sortBy'},\r\n  {label: 'Date of birth', param: 'birth_date', value: 'desc', key: 'dateOfBirth'},\r\n  {label: 'Date of death', param: 'death_date', value: 'desc', key: 'dateOfDeath'},\r\n];\r\n\r\nexport const filterItems: Array<Filter> = [\r\n  {label: 'Filter by', param: null, value: null, key: 'filterBy'},\r\n  {label: 'Memorial page', param: 'memorial_page', value: 'desc', key: 'memorialPage'},\r\n  {label: 'Have donations', param: 'having_donation', value: 'true', key: 'haveDonation'},\r\n  {label: 'Has death notice', param: 'having_death_notice', value: 'true', key: 'hasDeathNotice'},\r\n  {label: 'Has flower shop', param: 'having_flower_shop', value: 'Home', key: 'hasFlowerShop'},\r\n];\r\n",
            "properties": [
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "param",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-f9eeb58d8564e33df8090795b754fd78",
            "file": "src/app/memorial/models/user.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\r\n  birthDate: string;\r\n  deathDate: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  photoUrl: string;\r\n  deathCity: string;\r\n  memorialPageCreated: boolean;\r\n  flowerShopActivated: boolean;\r\n  donationActivated: boolean;\r\n  publishOnWebDate: string;\r\n  hideDeathDate: boolean;\r\n  memorialPage: {\r\n    visible: boolean,\r\n    url: string\r\n  },\r\n  donation: {\r\n    visible: boolean,\r\n    url: string\r\n  },\r\n  flowerShop: {\r\n    visible: boolean,\r\n    url: string\r\n  },\r\n  deathNotice: {\r\n    visible: boolean,\r\n    url: string\r\n  },\r\n}\r\n",
            "properties": [
                {
                    "name": "birthDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "deathCity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "deathDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "deathNotice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "donation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "donationActivated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "firstName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "flowerShop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "flowerShopActivated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "hideDeathDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "lastName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "memorialPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "memorialPageCreated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "photoUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "publishOnWebDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AdminState",
            "id": "injectable-AdminState-6d2205a0ac7cba77d66779fe77f2878f",
            "file": "src/app/admin/store/admin.state.ts",
            "properties": [],
            "methods": [
                {
                    "name": "errorCode",
                    "args": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "funeralHomeSetting",
                    "args": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getConfig",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "AdminActions.GetConfig"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getConfigFail",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "AdminActions.GetConfigFail",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 125,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "AdminActions.GetConfigFail"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "AdminActions.GetConfigFail",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFuneralHomeSettings",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "AdminActions.GetFuneralHomeSettings",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "AdminActions.GetFuneralHomeSettings"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "AdminActions.GetFuneralHomeSettings",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "saveConfig",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "AdminActions.SaveConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "AdminActions.SaveConfig"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "AdminActions.SaveConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nimport {Observable} from 'rxjs';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {catchError, map} from 'rxjs/operators';\r\nimport {Action, Selector, State, StateContext, Store} from '@ngxs/store';\r\n\r\nimport {environment} from '@app/env';\r\nimport {AdminActions} from './admin.action';\r\n\r\n@State({\r\n  name: 'admin',\r\n  defaults: {\r\n    funeralHomeSetting: {\r\n      themeId: 0,\r\n      mainColor: '#17313B',\r\n      bannerURL: '',\r\n      logoUrl: undefined\r\n    },\r\n    user: {\r\n      email: undefined,\r\n      emailVerified: undefined,\r\n      firstName: undefined,\r\n      lastName: undefined,\r\n      username: undefined,\r\n      roles: []\r\n    },\r\n    error: {\r\n      code: undefined,\r\n      message: undefined\r\n    }\r\n  }\r\n})\r\n@Injectable()\r\nexport class AdminState {\r\n\r\n  @Selector()\r\n  static errorCode(state): any {\r\n    return state.error.code;\r\n  }\r\n\r\n  @Selector()\r\n  static funeralHomeSetting(state): any {\r\n    return state.funeralHomeSetting;\r\n  }\r\n\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private store: Store,\r\n    private toastr: ToastrService\r\n  ) {\r\n  }\r\n\r\n  @Action(AdminActions.SaveConfig)\r\n  saveConfig(ctx: StateContext<any>, action: AdminActions.SaveConfig): void {\r\n    const state = ctx.getState();\r\n    ctx.setState({\r\n      ...state,\r\n      ...action\r\n    });\r\n\r\n    this.http.patch(`/funeralhomes/${action.config.userId}`, {\r\n      themeId: action.config.themeId,\r\n      mainColor: action.config.mainColor,\r\n      bannerURL: action.config.bannerURL\r\n    }).subscribe(res => {\r\n      if (res) {\r\n        this.toastr.success('Update success');\r\n      }\r\n    });\r\n  }\r\n\r\n  @Action(AdminActions.GetFuneralHomeSettings)\r\n  getFuneralHomeSettings(\r\n    ctx: StateContext<any>,\r\n    action: AdminActions.GetFuneralHomeSettings\r\n  ): Observable<any> {\r\n    return this.http.get(`${environment.fakeUrl}/funeralhomes/${action.id}`)\r\n      .pipe(\r\n        map((setting: any) => {\r\n          if (setting) {\r\n            return ctx.patchState({\r\n              funeralHomeSetting: {\r\n                themeId: setting.themeId,\r\n                mainColor: setting.mainColor,\r\n                bannerURL: setting.bannerURL,\r\n                logoUrl: setting.logoUrl\r\n              }\r\n            });\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  @Action(AdminActions.GetConfig)\r\n  getConfig(ctx: StateContext<any>): Observable<any> {\r\n    const state = ctx.getState();\r\n\r\n    return this.http.get(`${environment.fakeUrl}/settings`)\r\n      .pipe(\r\n        map(data => {\r\n          ctx.setState({\r\n            ...state,\r\n            ...data\r\n          });\r\n        }),\r\n        catchError((error: any) => {\r\n\r\n          if (error) {\r\n            return this.store.dispatch(\r\n              new AdminActions.GetConfigFail(error.errorCode, error.message)\r\n            );\r\n          }\r\n\r\n          return this.store.dispatch(\r\n            new AdminActions.GetConfigFail('Unknow', 'Unknow')\r\n          );\r\n        })\r\n      );\r\n  }\r\n\r\n  @Action(AdminActions.GetConfigFail)\r\n  getConfigFail(ctx: StateContext<any>, action: AdminActions.GetConfigFail): void {\r\n    ctx.patchState({\r\n      error: {\r\n        code: action.code,\r\n        message: action.message\r\n      }\r\n    });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "toastr",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 46,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "toastr",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "AuthGuard",
            "id": "injectable-AuthGuard-cd23dd156148d0fb5e0b3dcbe3427a3d",
            "file": "src/app/auth/auth.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "isAccessAllowed",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\r\n\r\nimport {KeycloakAuthGuard, KeycloakService} from 'keycloak-angular';\r\nimport {Store} from \"@ngxs/store\";\r\nimport {from} from \"rxjs\";\r\nimport {AuthStorageService} from \"@app/core/services\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard extends KeycloakAuthGuard {\r\n  constructor(\r\n    protected readonly router: Router,\r\n    protected readonly keycloak: KeycloakService,\r\n    private authService: AuthStorageService\r\n  ) {\r\n    super(router, keycloak);\r\n  }\r\n\r\n  async isAccessAllowed(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Promise<any> {\r\n\r\n\r\n    // Force the user to log in if currently unauthenticated.\r\n    if (!this.authenticated) {\r\n      await this.keycloak.login({\r\n        redirectUri: window.location.origin + state.url,\r\n      });\r\n    }\r\n\r\n    // Get the roles required from the route.\r\n    const requiredRoles = route.data.roles;\r\n\r\n    // Allow the user to to proceed if no additional roles are required to access the route.\r\n    if (!(requiredRoles instanceof Array) || requiredRoles.length === 0) {\r\n      return true;\r\n    }\r\n\r\n    // Allow the user to proceed if all the required roles are present.\r\n    return requiredRoles.every((role) => this.roles.includes(role));\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "keycloak",
                        "type": "KeycloakService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthStorageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "keycloak",
                        "type": "KeycloakService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthStorageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "KeycloakAuthGuard",
            "type": "injectable"
        },
        {
            "name": "AuthStorageService",
            "id": "injectable-AuthStorageService-fa52489a3ecdde617f2f938a7204eb97",
            "file": "src/app/core/services/auth-storage.service.ts",
            "properties": [
                {
                    "name": "authEnum",
                    "defaultValue": "'auth'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "isLoggedIn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methods": [
                {
                    "name": "getFromStorage",
                    "args": [],
                    "optional": false,
                    "returnType": "AuthStorageModel",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getLoggedInUser",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<KeycloakProfile>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getLoggedInUserPromise",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<KeycloakProfile>",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getToken",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTokenFromKeyCloak",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isAuthenticated",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isAuthenticatedPromise",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<boolean>",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeAuthInformation",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "saveAuthInformation",
                    "args": [
                        {
                            "name": "authInfo",
                            "type": "AuthStorageModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "authInfo",
                            "type": "AuthStorageModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "saveToStorage",
                    "args": [
                        {
                            "name": "authInfo",
                            "type": "AuthStorageModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "authInfo",
                            "type": "AuthStorageModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateToken",
                    "args": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable} from '@angular/core';\r\nimport {AuthStorageModel} from '@app/core/models/auth-storage-model';\r\nimport {KeycloakService} from 'keycloak-angular';\r\nimport {from, Observable, of} from 'rxjs';\r\nimport {KeycloakProfile} from 'keycloak-js';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthStorageService {\r\n\r\n  authEnum = 'auth';\r\n  isLoggedIn: boolean;\r\n\r\n  constructor(\r\n    private readonly keycloak: KeycloakService\r\n  ) {\r\n    this.getTokenFromKeyCloak();\r\n\r\n    this.isAuthenticated()\r\n      .pipe()\r\n      .subscribe((isLoggedIn: boolean) => {\r\n        this.isLoggedIn = isLoggedIn;\r\n      });\r\n  }\r\n\r\n  private saveToStorage(authInfo: AuthStorageModel): void {\r\n    window.localStorage[this.authEnum] = JSON.stringify(authInfo);\r\n  }\r\n\r\n  isAuthenticated(): Observable<boolean> {\r\n    return from(this.keycloak.isLoggedIn());\r\n  }\r\n\r\n  isAuthenticatedPromise(): Promise<boolean> {\r\n    return this.keycloak.isLoggedIn();\r\n  }\r\n\r\n  getLoggedInUserPromise(): Promise<KeycloakProfile> {\r\n    return this.keycloak.loadUserProfile();\r\n  }\r\n\r\n  getLoggedInUser(): Observable<KeycloakProfile> {\r\n    return from(this.keycloak.loadUserProfile());\r\n  }\r\n\r\n  getFromStorage(): AuthStorageModel {\r\n    const authInfo = window.localStorage[this.authEnum];\r\n\r\n    return authInfo ? JSON.parse(authInfo) as AuthStorageModel : undefined;\r\n  }\r\n\r\n  saveAuthInformation(authInfo: AuthStorageModel): void {\r\n    this.saveToStorage(authInfo);\r\n  }\r\n\r\n  removeAuthInformation(): void {\r\n    window.localStorage.removeItem('auth');\r\n  }\r\n\r\n  getToken(): string {\r\n    const authInfo = this.getFromStorage();\r\n\r\n    return authInfo ? authInfo.token : '';\r\n  }\r\n\r\n  updateToken(token: string): void {\r\n    const authInfo = this.getFromStorage();\r\n    this.saveToStorage({...authInfo, token});\r\n  }\r\n\r\n  getTokenFromKeyCloak(): Observable<any> {\r\n    if (this.isLoggedIn) {\r\n\r\n      this.keycloak.updateToken();\r\n\r\n      const isTokenExpired = this.keycloak.isTokenExpired(0);\r\n\r\n\r\n      if (!isTokenExpired) {\r\n        from(this.keycloak.updateToken(50)).subscribe(updatedToken => {\r\n          if (updatedToken) {\r\n            return from(this.keycloak.getToken()).subscribe(newToken => {\r\n              console.log('new token', newToken);\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      return from(this.keycloak.getToken());\r\n    }\r\n\r\n    return of(null);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "keycloak",
                        "type": "KeycloakService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "keycloak",
                        "type": "KeycloakService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "DateHelperService",
            "id": "injectable-DateHelperService-1047be22ed6a48a42fcd3ecc426e8ea9",
            "file": "src/app/memorial/services/date-helper.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getDateRangeFromString",
                    "args": [
                        {
                            "name": "dateString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Array<Date>",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dateString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getStringFromDate",
                    "args": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isValidDate",
                    "args": [
                        {
                            "name": "dateInput",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "monthInput",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "yearInput",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dateInput",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "monthInput",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "yearInput",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "newDate",
                    "args": [
                        {
                            "name": "dayString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "monthString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "yearString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Date",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dayString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "monthString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "yearString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DateHelperService {\r\n  getStringFromDate(date: Date): string {\r\n    if (date) {\r\n      let day = date.getUTCDate().toString();\r\n      let month = (date.getMonth() + 1).toString();\r\n      const year = date.getFullYear().toString();\r\n\r\n      if (day.length < 2) {\r\n        day = 0 + day;\r\n      }\r\n\r\n      if (month.length < 2) {\r\n        month = 0 + month;\r\n      }\r\n\r\n      return `${day}/${month}/${year}`;\r\n    }\r\n  }\r\n\r\n  getDateRangeFromString(dateString: string): Array<Date> {\r\n\r\n    if (!dateString) {\r\n      return null;\r\n    }\r\n\r\n    const rangeDateArray = dateString\r\n      .replace(/\\s/g, '')\r\n      .split('-');\r\n\r\n    const fromArray = rangeDateArray[0];\r\n    const toArray = rangeDateArray[1];\r\n\r\n    const fromDate = fromArray.split('/')[0];\r\n    const fromMonth = fromArray.split('/')[1];\r\n    const fromYear = fromArray.split('/')[2];\r\n\r\n    const toDate = toArray.split('/')[0];\r\n    const toMonth = toArray.split('/')[1];\r\n    const toYear = toArray.split('/')[2];\r\n\r\n    const checkValidDateFrom = this.isValidDate(fromDate, fromMonth, fromYear);\r\n    const checkValidDateTo = this.isValidDate(toDate, toMonth, toYear);\r\n\r\n    if (!checkValidDateFrom || !checkValidDateTo) {\r\n      return null;\r\n    }\r\n\r\n    const from = new Date(\r\n      parseInt(fromYear, 0),\r\n      parseInt(fromMonth, 0) - 1,\r\n      parseInt(fromDate, 0)\r\n    );\r\n\r\n    const to = new Date(\r\n      parseInt(toYear, 0),\r\n      parseInt(toMonth, 0) - 1,\r\n      parseInt(toDate, 0)\r\n    );\r\n\r\n    const today = new Date();\r\n\r\n    if (+from > +to || +to > +today) {\r\n      return null;\r\n    }\r\n\r\n    return [from, to];\r\n  }\r\n\r\n  newDate(dayString: string, monthString: string, yearString: string): Date {\r\n    return new Date(\r\n      parseInt(yearString, 0),\r\n      parseInt(monthString, 0) - 1,\r\n      parseInt(dayString, 0));\r\n  }\r\n\r\n\r\n  isValidDate(dateInput: string, monthInput: string, yearInput: string): boolean {\r\n    const day = parseInt(dateInput, 10);\r\n    const month = parseInt(monthInput, 10);\r\n    const year = parseInt(yearInput, 10);\r\n\r\n    // Check the ranges of month and year\r\n    if (year < 1000 || year > 3000 || month === 0 || month > 12) {\r\n      return false;\r\n    }\r\n\r\n    const monthLength = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n    // Adjust for leap years\r\n    if (year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0)) {\r\n      monthLength[1] = 29;\r\n    }\r\n\r\n    // Check the range of the day\r\n    return day > 0 && day <= monthLength[month - 1];\r\n  }\r\n}\r\n",
            "type": "injectable"
        },
        {
            "name": "DestroyableComponent",
            "id": "injectable-DestroyableComponent-01eac5a635dc1a134ec6347e6e342ac5",
            "file": "src/app/core/destroyable/destroyable.component.ts",
            "properties": [
                {
                    "name": "componentDestroyed$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<any>",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        113
                    ]
                }
            ],
            "methods": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { OnDestroy, Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class DestroyableComponent implements OnDestroy {\r\n\r\n  protected componentDestroyed$: Subject<any>;\r\n\r\n  constructor() {\r\n    this.componentDestroyed$ = new Subject();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.componentDestroyed$.next(null);\r\n    this.componentDestroyed$.complete();\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "type": "injectable"
        },
        {
            "name": "JwtService",
            "id": "injectable-JwtService-b77beb731eff34ad19246b46f85a9eb3",
            "file": "src/app/core/services/jwt.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "parseJwt",
                    "args": [
                        {
                            "name": "token",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class JwtService {\r\n  constructor() {\r\n  }\r\n\r\n  parseJwt(token: any): string {\r\n    const base64Url = token.split('.')[1];\r\n    const base64 = decodeURIComponent(atob(base64Url).split('').map((c: any) => {\r\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n    }).join(''));\r\n\r\n    return JSON.parse(base64);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        },
        {
            "name": "LocalStorageService",
            "id": "injectable-LocalStorageService-9e0b514106d3725a7f651ff5b7db1230",
            "file": "src/app/core/web-storage/local-storage.service.ts",
            "properties": [
                {
                    "name": "storage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Storage",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "exists",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFromUser",
                    "args": [
                        {
                            "name": "user",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getItem",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeItem",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "saveToUser",
                    "args": [
                        {
                            "name": "user",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setItem",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class LocalStorageService {\r\n  private storage: Storage;\r\n\r\n  constructor() {\r\n    if (!window.localStorage) {\r\n      throw new Error('Current browser does not support Local Storage');\r\n    }\r\n    this.storage = localStorage;\r\n  }\r\n\r\n  exists(key: string): boolean {\r\n    return !!this.storage.getItem(`${key}`);\r\n  }\r\n\r\n  getItem(key: string): any {\r\n    const result = this.storage.getItem(`${key}`);\r\n    if (result === undefined || result == null) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      return JSON.parse(result);\r\n    } catch (e) {\r\n      return result;\r\n    }\r\n  }\r\n\r\n  setItem(key: string, value: any) {\r\n    this.storage.setItem(`${key}`, JSON.stringify(value));\r\n  }\r\n\r\n  removeItem(key: string) {\r\n    return this.storage.removeItem(`${key}`);\r\n  }\r\n\r\n  clear() {\r\n    return this.storage.clear();\r\n  }\r\n\r\n  saveToUser(user: any, data: any) {\r\n    const localData = this.getItem(user?.id.toString());\r\n    this.setItem(user?.id.toString(), {\r\n      ...localData,\r\n      ...data\r\n    });\r\n  }\r\n\r\n  getFromUser(user: any, key?: string) {\r\n    const localData = this.getItem(user?.id.toString());\r\n    if (key) {\r\n      return key && localData && localData[key];\r\n    }\r\n\r\n    return localData;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 5
            },
            "type": "injectable"
        },
        {
            "name": "MemorialState",
            "id": "injectable-MemorialState-4ca953a560af15252b3f4c193c56c1fc",
            "file": "src/app/memorial/store/memorial.state.ts",
            "properties": [
                {
                    "name": "searchPortalUrl",
                    "defaultValue": "'/portal/search'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methods": [
                {
                    "name": "filterMemorialPage",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.FilterMemorialPage",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 176,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "MemorialActions.FilterMemorialPage"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.FilterMemorialPage",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCityAndRegion",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "MemorialActions.GetCityAndRegion"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDomain",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 247,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getFuneralHomeSettings",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.GetFuneralHomeSettings",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 152,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "MemorialActions.GetFuneralHomeSettings"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.GetFuneralHomeSettings",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getUsers",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.GetUsers",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "MemorialActions.GetUsers"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.GetUsers",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getUsersFailed",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.GetUsersFailed",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "MemorialActions.GetUsersFailed"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.GetUsersFailed",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "makeSearchPortalRequest",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "HttpParams",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 191,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "HttpParams",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mapUserData",
                    "args": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Array<User>",
                    "typeParameters": [],
                    "line": 214,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "refreshSubscription",
                    "args": [
                        {
                            "name": "userId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "userId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "searchBox",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.SearchBox",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 184,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "MemorialActions.SearchBox"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.SearchBox",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "searchLocally",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.SearchLocally",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "MemorialActions.SearchLocally"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.SearchLocally",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sortMemorialPage",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.SortMemorialPage",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 168,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "MemorialActions.SortMemorialPage"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.SortMemorialPage",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { DatePipe } from '@angular/common';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { from, Observable, of, Subscription, timer } from 'rxjs';\r\nimport { Action, State, StateContext, Store } from '@ngxs/store';\r\n\r\nimport { User } from '../models/user.model';\r\nimport { MemorialActions } from './memorial.actions';\r\nimport { environment } from \"@app/env\";\r\n\r\n@State({\r\n  name: 'memorial',\r\n  defaults: {\r\n    users: undefined,\r\n    citiesRegions: undefined,\r\n    funeralHomeSetting: {\r\n      id: undefined,\r\n      adminName: undefined,\r\n      name: undefined,\r\n      themeId: undefined,\r\n      mainColor: undefined,\r\n      bannerURL: undefined,\r\n      photoUrl: undefined\r\n    },\r\n    isLoading: false,\r\n    isLoadingRegion: false,\r\n    error: {\r\n      code: undefined,\r\n      message: undefined\r\n    }\r\n  }\r\n})\r\n@Injectable()\r\nexport class MemorialState {\r\n\r\n  subscription: Subscription;\r\n  searchPortalUrl = '/portal/search';\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private store: Store,\r\n    private router: Router\r\n  ) {\r\n  }\r\n\r\n  refreshSubscription(userId: number): any {\r\n    this.subscription = timer(5000).subscribe(() => {\r\n      this.store.dispatch(new MemorialActions.GetFuneralHomeSettings(userId))\r\n        .pipe()\r\n        .subscribe(() => {\r\n          if (!this.router.url.includes('memorial')) {\r\n            return this.subscription.unsubscribe();\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  @Action(MemorialActions.GetUsers)\r\n  getUsers(ctx: StateContext<any>, action: MemorialActions.GetUsers): Observable<any> {\r\n    let params = new HttpParams();\r\n    params = params.append('size', action.size.toString());\r\n    params = params.append('domain', 'vareminnesider.no');\r\n    params = params.append('orderBy', 'memorial_page,desc');\r\n\r\n    return from(import(`src/assets/data.json`))\r\n    // return this.http.get(this.searchPortalUrl, { params })\r\n      .pipe(\r\n        tap(ctx.patchState({ isLoading: true })),\r\n        tap(() => {\r\n\r\n        }),\r\n        map((response: any) => {\r\n          if (response) {\r\n            const userMap = this.mapUserData(response.content);\r\n            ctx.patchState({ isLoading: false, users: userMap });\r\n          }\r\n        }),\r\n        catchError((error) => {\r\n          if (error) {\r\n            return this.store.dispatch(new MemorialActions.GetUsersFailed(\r\n              error.errorCode,\r\n              error.message\r\n            ));\r\n          }\r\n\r\n          return this.store.dispatch(new MemorialActions.GetUsersFailed(\r\n            'Unknow', 'Unknow'\r\n          ));\r\n        })\r\n      );\r\n  }\r\n\r\n  @Action(MemorialActions.GetUsersFailed)\r\n  getUsersFailed(ctx: StateContext<any>, action: MemorialActions.GetUsersFailed): void {\r\n    ctx.patchState({\r\n      users: [],\r\n      isLoading: false,\r\n      error: { code: action.errorCode, message: action.message }\r\n    });\r\n  }\r\n\r\n  @Action(MemorialActions.SearchLocally)\r\n  searchLocally(ctx: StateContext<any>, action: MemorialActions.SearchLocally): Observable<any> {\r\n    let params = new HttpParams();\r\n    params = params.append('orderBy', 'memorial_page,desc');\r\n\r\n    Object.entries(action.searchParams).forEach(([key, value]) => {\r\n      if (value instanceof Date) {\r\n        value = new DatePipe('en-US').transform(value, 'yyyy-MM-dd');\r\n      }\r\n\r\n      if (value) {\r\n        params = params.append(key, value);\r\n      }\r\n    });\r\n\r\n    return this.makeSearchPortalRequest(ctx, params);\r\n  }\r\n\r\n  @Action(MemorialActions.GetCityAndRegion)\r\n  getCityAndRegion(ctx: StateContext<any>): Observable<any> {\r\n    const url = '/portal/regions';\r\n    let params = new HttpParams();\r\n    params = params.append('domain', this.getDomain());\r\n\r\n    return this.http.get(url, { params })\r\n      .pipe(\r\n        tap(ctx.patchState({ isLoadingRegion: true })),\r\n        map((response: any) => {\r\n          if (response) {\r\n            ctx.patchState({\r\n              isLoadingRegion: false,\r\n              citiesRegions: [\r\n                { id: 0, name: 'All countries', cities: [] },\r\n                ...response\r\n              ]\r\n            });\r\n          }\r\n        }),\r\n        catchError(error => {\r\n          ctx.patchState({ isLoadingRegion: false });\r\n          return of(error);\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n  @Action(MemorialActions.GetFuneralHomeSettings)\r\n  getFuneralHomeSettings(ctx: StateContext<any>, action: MemorialActions.GetFuneralHomeSettings): Observable<any> {\r\n\r\n    return this.http.get(`${environment.fakeUrl}/funeralhomes/${action.id}`).pipe(\r\n      tap(() => this.refreshSubscription(action.id)),\r\n      map((response) => {\r\n        if (response) {\r\n          ctx.patchState({\r\n            funeralHomeSetting: response,\r\n            isLoading: false\r\n          });\r\n        }\r\n      }),\r\n    );\r\n  }\r\n\r\n  @Action(MemorialActions.SortMemorialPage)\r\n  sortMemorialPage(ctx: StateContext<any>, action: MemorialActions.SortMemorialPage): Observable<any> {\r\n    let params = new HttpParams();\r\n    params = params.append('orderBy', `${action.sortValue.param},${action.sortValue.value}`);\r\n\r\n    return this.makeSearchPortalRequest(ctx, params);\r\n  }\r\n\r\n  @Action(MemorialActions.FilterMemorialPage)\r\n  filterMemorialPage(ctx: StateContext<any>, action: MemorialActions.FilterMemorialPage): Observable<any> {\r\n    let params = new HttpParams();\r\n    params = params.append('filterBy', action.filterValue.param);\r\n\r\n    return this.makeSearchPortalRequest(ctx, params);\r\n  }\r\n\r\n  @Action(MemorialActions.SearchBox)\r\n  searchBox(ctx: StateContext<any>, action: MemorialActions.SearchBox): Observable<any> {\r\n    const encodedSearchTerm = encodeURI(action.searchString);\r\n    let params = new HttpParams().append('searchTerm', encodedSearchTerm);\r\n\r\n    return this.makeSearchPortalRequest(ctx, params);\r\n  }\r\n\r\n  makeSearchPortalRequest(ctx: StateContext<any>, params: HttpParams): Observable<any> {\r\n    // params = params.append('domain', 'vareminnesider.no');\r\n    params = params.append('domain', this.getDomain());\r\n\r\n    return this.http.get(this.searchPortalUrl, { params })\r\n      .pipe(\r\n        tap(ctx.patchState({\r\n          isLoading: true,\r\n          error: { code: null, message: null }\r\n        })),\r\n        map((response: any) => {\r\n          if (response) {\r\n            const userMap = this.mapUserData(response.content);\r\n            ctx.patchState({ users: userMap, isLoading: false });\r\n          }\r\n        }),\r\n        catchError(error => {\r\n          this.store.dispatch(new MemorialActions.GetUsersFailed(error.errorCode, error.message));\r\n          return of(error);\r\n        })\r\n      );\r\n  }\r\n\r\n  mapUserData(data: any): Array<User> {\r\n    return data.map(user => {\r\n      return {\r\n        birthdate: user.birthdate,\r\n        deathdate: user.deathdate,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        photoUrl: user.photoUrl ? user.photoUrl : '',\r\n        deathCity: user.deathCity,\r\n        memorialPageCreated: user.memorialPageCreated,\r\n        flowerShopActivated: user.flowerShopActivated,\r\n        donationActivated: user.donationActivated,\r\n        publishOnWebDate: user.publishOnWebDate,\r\n        memorialPage: {\r\n          visible: user.memorialPage.visible,\r\n          url: user.memorialPage.url\r\n        },\r\n        donation: {\r\n          visible: user.donation.visible,\r\n          url: user.donation.url,\r\n        },\r\n        flowerShop: {\r\n          visible: user.flowerShop.visible,\r\n          url: user.flowerShop.url,\r\n        },\r\n        deathNotice: {\r\n          visible: user.deathNotice.visible,\r\n          url: user.deathNotice.url,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  getDomain(): string {\r\n    return location.origin.replace(/(^\\w+:|^)\\/\\//, '');\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 40,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "SessionStorageService",
            "id": "injectable-SessionStorageService-d610862740b150cc4b7a19e07e5533d5",
            "file": "src/app/core/web-storage/session-storage.service.ts",
            "properties": [
                {
                    "name": "storage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Storage",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "exists",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getItem",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeItem",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setItem",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable} from '@angular/core';\r\n\r\nconst APP_PREFIX = 'APP__';\r\n\r\n@Injectable()\r\nexport class SessionStorageService {\r\n  private storage: Storage;\r\n\r\n  constructor() {\r\n    if (!window.sessionStorage) {\r\n      throw new Error('Current browser does not support sessionStorage');\r\n    }\r\n    this.storage = localStorage;\r\n  }\r\n\r\n  exists(key: string): boolean {\r\n    return !!this.storage.getItem(`${APP_PREFIX}${key}`);\r\n  }\r\n\r\n  getItem(key: string): string {\r\n    const result = this.storage.getItem(`${APP_PREFIX}${key}`);\r\n\r\n    if (result === undefined || result == null) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      return JSON.parse(result);\r\n    } catch (e) {\r\n      return result;\r\n    }\r\n  }\r\n\r\n  setItem(key: string, value: any): void {\r\n    this.storage.setItem(`${APP_PREFIX}${key}`, JSON.stringify(value));\r\n  }\r\n\r\n  removeItem(key: string): void {\r\n    return this.storage.removeItem(`${APP_PREFIX}${key}`);\r\n  }\r\n\r\n  clear(): void {\r\n    return this.storage.clear();\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "type": "injectable"
        },
        {
            "name": "TranslocoHttpLoader",
            "id": "injectable-TranslocoHttpLoader-e3f21952c782b94b2bcaf4c61fd878ad",
            "file": "src/app/transloco/transloco.loader.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getTranslation",
                    "args": [
                        {
                            "name": "langPath",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Translation>",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "langPath",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable} from '@angular/core';\r\n\r\nimport {from, Observable} from 'rxjs';\r\nimport {TRANSLOCO_LOADER, Translation, TranslocoLoader} from '@ngneat/transloco';\r\n\r\n@Injectable()\r\nexport class TranslocoHttpLoader implements TranslocoLoader {\r\n\r\n  constructor() {}\r\n\r\n  getTranslation(langPath: string): Observable<Translation> {\r\n    return from(import(`src/assets/i18n/${langPath}.json`));\r\n  }\r\n}\r\n\r\nexport const translocoLoader = {\r\n  provide: TRANSLOCO_LOADER,\r\n  useClass: TranslocoHttpLoader\r\n};\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [
        {
            "name": "ApiPrefixInterceptor",
            "id": "injectable-ApiPrefixInterceptor-fa8f81138b8dc919d021dc55f2950bcf",
            "file": "src/app/core/interceptors/api-prefix.interceptor.ts",
            "properties": [],
            "methods": [
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "request",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<any>>",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable} from '@angular/core';\r\nimport {HttpEvent, HttpInterceptor, HttpHandler, HttpRequest} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\n\r\nimport {environment} from '@app/env';\r\n\r\n@Injectable()\r\nexport class ApiPrefixInterceptor implements HttpInterceptor {\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    const hasBaseURL = /^(http|https):/i.test(request.url);\r\n\r\n    if (!hasBaseURL\r\n      && request.url.indexOf('assets/locale') < 0\r\n      && request.url.indexOf('assets/images') < 0\r\n    ) {\r\n      const url = environment.production\r\n        ? `${environment.apiBaseURL}${request.url}`\r\n        : `${environment.apiBaseURL}${request.url}`;\r\n\r\n      request = request.clone({url});\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n",
            "type": "interceptor"
        },
        {
            "name": "ErrorHandlerInterceptor",
            "id": "injectable-ErrorHandlerInterceptor-3915b5cd30ee302bfc29b5f374a32b50",
            "file": "src/app/core/interceptors/error-handler.interceptor.ts",
            "properties": [],
            "methods": [
                {
                    "name": "errorHandler",
                    "args": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<never>",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "request",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<any>>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable} from '@angular/core';\r\nimport {HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse} from '@angular/common/http';\r\n\r\nimport {Observable, throwError} from 'rxjs';\r\nimport {catchError} from 'rxjs/operators';\r\n\r\nimport {HttpError} from '../models/http-error';\r\n\r\n@Injectable()\r\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\r\n\r\n  constructor() {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(\r\n      catchError((error) => {\r\n        return this.errorHandler(error);\r\n      })\r\n    );\r\n  }\r\n\r\n  private errorHandler(error: HttpErrorResponse): Observable<never> {\r\n    let err = error.error;\r\n    if (typeof error.error === 'string') {\r\n      err = JSON.parse(error.error);\r\n    }\r\n\r\n    const responseError: HttpError = {\r\n      message: error.message,\r\n      status: error.status,\r\n      statusText: error.statusText,\r\n      errorCode: err.errorCode\r\n    };\r\n\r\n    if (error.status === 0) {\r\n      responseError.errorCode = 'Unknown Error';\r\n    }\r\n\r\n    return throwError(responseError);\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "type": "interceptor"
        },
        {
            "name": "HttpDeviceInterceptor",
            "id": "injectable-HttpDeviceInterceptor-0599dd78dc9ecf92c405ad28fd2e845b",
            "file": "src/app/core/interceptors/http-device.interceptor.ts",
            "properties": [],
            "methods": [
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<any>>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpEvent, HttpRequest } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { LocalStorageService } from '../web-storage';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HttpDeviceInterceptor implements HttpInterceptor {\r\n  constructor(private localStorageService: LocalStorageService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let tokenReq: any;\r\n    const deviceId = this.localStorageService.getItem('deviceId');\r\n\r\n    if (deviceId) {\r\n      tokenReq = req.clone({\r\n        headers: req.headers.set('Device-id', deviceId)\r\n      });\r\n    } else {\r\n      return next.handle(req);\r\n    }\r\n\r\n    return next.handle(tokenReq);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "localStorageService",
                        "type": "LocalStorageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "localStorageService",
                        "type": "LocalStorageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "interceptor"
        },
        {
            "name": "HttpTokenInterceptor",
            "id": "injectable-HttpTokenInterceptor-65f7f1d9b1a4d67238aa817f1f069591",
            "file": "src/app/core/interceptors/http-token.interceptor.ts",
            "properties": [],
            "methods": [
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<any>>",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable} from '@angular/core';\r\nimport {HttpInterceptor, HttpHandler, HttpEvent, HttpRequest} from '@angular/common/http';\r\n\r\nimport {Observable} from 'rxjs';\r\nimport {switchMap} from 'rxjs/operators';\r\n\r\nimport {AuthStorageService} from '../services';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HttpTokenInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private authStorageService: AuthStorageService) {\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    let tokenRequest: any;\r\n\r\n    return this.authStorageService.getTokenFromKeyCloak()\r\n      .pipe(\r\n        switchMap((token: any) => {\r\n          if (token) {\r\n            tokenRequest = req.clone({\r\n              headers: req.headers.set('Authorization-token', token)\r\n            });\r\n          } else {\r\n            return next.handle(req);\r\n          }\r\n\r\n          return next.handle(tokenRequest);\r\n        }),\r\n      );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authStorageService",
                        "type": "AuthStorageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "authStorageService",
                        "type": "AuthStorageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "interceptor"
        },
        {
            "name": "SuccessHandlerInterceptor",
            "id": "injectable-SuccessHandlerInterceptor-70539c454ae5338687e9e8f7d9295fb4",
            "file": "src/app/core/interceptors/success-handler.interceptor.ts",
            "properties": [],
            "methods": [
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "request",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<any>>",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable} from '@angular/core';\r\nimport {HttpInterceptor, HttpRequest, HttpHandler, HttpEvent} from '@angular/common/http';\r\n\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class SuccessHandlerInterceptor implements HttpInterceptor {\r\n\r\n  constructor() {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(\r\n      map((response: any) => {\r\n        if (\r\n          request.method === 'GET' &&\r\n          response.type === 4 &&\r\n          response.status === 200\r\n        ) {\r\n          const body = response.body;\r\n          if (body.content && body.pageable) {\r\n\r\n            return response.clone({\r\n              body: {\r\n                content: body.content,\r\n                pageable: {\r\n                  totalPages: body.totalPages,\r\n                  totalItems: body.totalElements,\r\n                  pageSize: body.pageable.pageSize,\r\n                  pageNumber: body.pageable.pageNumber\r\n                }\r\n              }\r\n            });\r\n          }\r\n        }\r\n\r\n        return response;\r\n      })\r\n    );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "type": "interceptor"
        },
        {
            "name": "UnauthorizedInterceptor",
            "id": "injectable-UnauthorizedInterceptor-0f032bcee49d5358982de140de9ee282",
            "file": "src/app/core/interceptors/unauthorized.interceptor.ts",
            "properties": [],
            "methods": [
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<any>>",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable} from '@angular/core';\r\nimport {HttpInterceptor, HttpHandler, HttpEvent, HttpRequest} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\n\r\nimport {Store} from '@ngxs/store';\r\nimport {Observable} from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UnauthorizedInterceptor implements HttpInterceptor {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private store: Store\r\n  ) {\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      tap(() => {\r\n        },\r\n        (err) => {\r\n          if (err.status === 401) {\r\n            if (!this.router.url.includes('signin')) {\r\n              return null;\r\n              // return this.store.dispatch(new Logout());\r\n            }\r\n          }\r\n        }),\r\n    );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "interceptor"
        }
    ],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-a0db91bfa3b9914e9048612074084ee6",
            "file": "e2e/src/app.po.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl) as Promise<unknown>;\n  }\n\n  getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CustomHandler",
            "id": "class-CustomHandler-efa7eb6cd3b45e0227730439db3bbd3a",
            "file": "src/app/transloco/transloco.missing-handler.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {TRANSLOCO_MISSING_HANDLER, TranslocoConfig, TranslocoMissingHandler} from '@ngneat/transloco';\r\n\r\nexport class CustomHandler implements TranslocoMissingHandler {\r\n  handle(key: string, config: TranslocoConfig): string {\r\n    return '...';\r\n  }\r\n}\r\n\r\nexport const customMissingHandler = {\r\n  provide: TRANSLOCO_MISSING_HANDLER,\r\n  useClass: CustomHandler\r\n};\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "handle",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "config",
                            "type": "TranslocoConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "config",
                            "type": "TranslocoConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "TranslocoMissingHandler"
            ]
        },
        {
            "name": "FilterMemorialPage",
            "id": "class-FilterMemorialPage-9a26e1a1b861a1bb5358b68e817de8bb",
            "file": "src/app/memorial/store/memorial.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {Filter, Sort} from '../models/sort.model';\r\nimport {SearchParam} from \"../models/search-param.model\";\r\n\r\nexport namespace MemorialActions {\r\n  export class GetUsers {\r\n    static readonly type = '[Memorial] Get Users';\r\n\r\n    constructor(\r\n      public size = 20,\r\n      public page = 0\r\n    ) {}\r\n  }\r\n\r\n  export class SearchLocally {\r\n    static readonly type = '[Memorial] Search Users Locally';\r\n\r\n    constructor(public searchParams: SearchParam) {}\r\n  }\r\n\r\n  \r\n  export class SearchBox {\r\n    static readonly type = '[Memorial] Search Box';\r\n\r\n    constructor(public searchString: string) {}\r\n  }\r\n\r\n  export class SortMemorialPage {\r\n    static readonly type = '[Memorial] Sort User List';\r\n    constructor(public sortValue: Sort) {}\r\n  }\r\n\r\n  export class FilterMemorialPage {\r\n    static readonly type = '[Memorial] Filter User List';\r\n    constructor(public filterValue: Filter) {}\r\n  }\r\n\r\n  export class GetCityAndRegion {\r\n    static readonly type = '[Memorial] Get Cities and Regions';\r\n  }\r\n\r\n  export class GetFuneralHomeSettings {\r\n    static readonly type = '[Memorial] Get Funeral Home Settings';\r\n    constructor(public id: number) {}\r\n  }\r\n\r\n  export class GetUsersFailed {\r\n    static readonly type = '[Memorial] Get Users Failed';\r\n    constructor(public errorCode: string, public message: string) {}\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "filterValue",
                        "type": "Filter",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "filterValue",
                        "type": "Filter",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "filterValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Filter",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Memorial] Filter User List'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "GetCityAndRegion",
            "id": "class-GetCityAndRegion-9a26e1a1b861a1bb5358b68e817de8bb",
            "file": "src/app/memorial/store/memorial.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {Filter, Sort} from '../models/sort.model';\r\nimport {SearchParam} from \"../models/search-param.model\";\r\n\r\nexport namespace MemorialActions {\r\n  export class GetUsers {\r\n    static readonly type = '[Memorial] Get Users';\r\n\r\n    constructor(\r\n      public size = 20,\r\n      public page = 0\r\n    ) {}\r\n  }\r\n\r\n  export class SearchLocally {\r\n    static readonly type = '[Memorial] Search Users Locally';\r\n\r\n    constructor(public searchParams: SearchParam) {}\r\n  }\r\n\r\n  \r\n  export class SearchBox {\r\n    static readonly type = '[Memorial] Search Box';\r\n\r\n    constructor(public searchString: string) {}\r\n  }\r\n\r\n  export class SortMemorialPage {\r\n    static readonly type = '[Memorial] Sort User List';\r\n    constructor(public sortValue: Sort) {}\r\n  }\r\n\r\n  export class FilterMemorialPage {\r\n    static readonly type = '[Memorial] Filter User List';\r\n    constructor(public filterValue: Filter) {}\r\n  }\r\n\r\n  export class GetCityAndRegion {\r\n    static readonly type = '[Memorial] Get Cities and Regions';\r\n  }\r\n\r\n  export class GetFuneralHomeSettings {\r\n    static readonly type = '[Memorial] Get Funeral Home Settings';\r\n    constructor(public id: number) {}\r\n  }\r\n\r\n  export class GetUsersFailed {\r\n    static readonly type = '[Memorial] Get Users Failed';\r\n    constructor(public errorCode: string, public message: string) {}\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "'[Memorial] Get Cities and Regions'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "GetConfig",
            "id": "class-GetConfig-fc3a96d16a9b218d8d06eaa0b2298cd8",
            "file": "src/app/admin/store/admin.action.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export namespace AdminActions {\r\n\r\n  export class GetConfig {\r\n    static readonly type = '[Settings] Get Config';\r\n  }\r\n\r\n  export class GetFuneralHomeSettings {\r\n    static readonly type = '[Settings] Get Funeral Home Settings';\r\n\r\n    constructor(public id: number) {}\r\n  }\r\n\r\n  export class GetConfigFail {\r\n    static readonly type = '[Settings] Get Config Fail';\r\n\r\n    constructor(public code: string, public message: string) {\r\n    }\r\n  }\r\n\r\n  export class SaveConfig {\r\n    static readonly type = '[Settings] Save Config';\r\n\r\n    constructor(public config: {\r\n      userId: number;\r\n      mainColor: string;\r\n      themeId: number;\r\n      bannerURL: string;\r\n    }) {\r\n    }\r\n  }\r\n\r\n  export class UpdateUserRole {\r\n    static readonly type = '[Settings] Update User Role';\r\n\r\n    constructor(public config: {\r\n      userId: string,\r\n      roles: Array<string>\r\n    }) {\r\n    }\r\n  }\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "'[Settings] Get Config'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "GetConfigFail",
            "id": "class-GetConfigFail-fc3a96d16a9b218d8d06eaa0b2298cd8",
            "file": "src/app/admin/store/admin.action.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export namespace AdminActions {\r\n\r\n  export class GetConfig {\r\n    static readonly type = '[Settings] Get Config';\r\n  }\r\n\r\n  export class GetFuneralHomeSettings {\r\n    static readonly type = '[Settings] Get Funeral Home Settings';\r\n\r\n    constructor(public id: number) {}\r\n  }\r\n\r\n  export class GetConfigFail {\r\n    static readonly type = '[Settings] Get Config Fail';\r\n\r\n    constructor(public code: string, public message: string) {\r\n    }\r\n  }\r\n\r\n  export class SaveConfig {\r\n    static readonly type = '[Settings] Save Config';\r\n\r\n    constructor(public config: {\r\n      userId: number;\r\n      mainColor: string;\r\n      themeId: number;\r\n      bannerURL: string;\r\n    }) {\r\n    }\r\n  }\r\n\r\n  export class UpdateUserRole {\r\n    static readonly type = '[Settings] Update User Role';\r\n\r\n    constructor(public config: {\r\n      userId: string,\r\n      roles: Array<string>\r\n    }) {\r\n    }\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "code",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "message",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "code",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "message",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Settings] Get Config Fail'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "GetFuneralHomeSettings",
            "id": "class-GetFuneralHomeSettings-fc3a96d16a9b218d8d06eaa0b2298cd8",
            "file": "src/app/admin/store/admin.action.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export namespace AdminActions {\r\n\r\n  export class GetConfig {\r\n    static readonly type = '[Settings] Get Config';\r\n  }\r\n\r\n  export class GetFuneralHomeSettings {\r\n    static readonly type = '[Settings] Get Funeral Home Settings';\r\n\r\n    constructor(public id: number) {}\r\n  }\r\n\r\n  export class GetConfigFail {\r\n    static readonly type = '[Settings] Get Config Fail';\r\n\r\n    constructor(public code: string, public message: string) {\r\n    }\r\n  }\r\n\r\n  export class SaveConfig {\r\n    static readonly type = '[Settings] Save Config';\r\n\r\n    constructor(public config: {\r\n      userId: number;\r\n      mainColor: string;\r\n      themeId: number;\r\n      bannerURL: string;\r\n    }) {\r\n    }\r\n  }\r\n\r\n  export class UpdateUserRole {\r\n    static readonly type = '[Settings] Update User Role';\r\n\r\n    constructor(public config: {\r\n      userId: string,\r\n      roles: Array<string>\r\n    }) {\r\n    }\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Settings] Get Funeral Home Settings'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "GetFuneralHomeSettings",
            "id": "class-GetFuneralHomeSettings-9a26e1a1b861a1bb5358b68e817de8bb-1",
            "file": "src/app/memorial/store/memorial.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {Filter, Sort} from '../models/sort.model';\r\nimport {SearchParam} from \"../models/search-param.model\";\r\n\r\nexport namespace MemorialActions {\r\n  export class GetUsers {\r\n    static readonly type = '[Memorial] Get Users';\r\n\r\n    constructor(\r\n      public size = 20,\r\n      public page = 0\r\n    ) {}\r\n  }\r\n\r\n  export class SearchLocally {\r\n    static readonly type = '[Memorial] Search Users Locally';\r\n\r\n    constructor(public searchParams: SearchParam) {}\r\n  }\r\n\r\n  \r\n  export class SearchBox {\r\n    static readonly type = '[Memorial] Search Box';\r\n\r\n    constructor(public searchString: string) {}\r\n  }\r\n\r\n  export class SortMemorialPage {\r\n    static readonly type = '[Memorial] Sort User List';\r\n    constructor(public sortValue: Sort) {}\r\n  }\r\n\r\n  export class FilterMemorialPage {\r\n    static readonly type = '[Memorial] Filter User List';\r\n    constructor(public filterValue: Filter) {}\r\n  }\r\n\r\n  export class GetCityAndRegion {\r\n    static readonly type = '[Memorial] Get Cities and Regions';\r\n  }\r\n\r\n  export class GetFuneralHomeSettings {\r\n    static readonly type = '[Memorial] Get Funeral Home Settings';\r\n    constructor(public id: number) {}\r\n  }\r\n\r\n  export class GetUsersFailed {\r\n    static readonly type = '[Memorial] Get Users Failed';\r\n    constructor(public errorCode: string, public message: string) {}\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 42,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Memorial] Get Funeral Home Settings'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "GetFuneralHomeSettings-1"
        },
        {
            "name": "GetUsers",
            "id": "class-GetUsers-9a26e1a1b861a1bb5358b68e817de8bb",
            "file": "src/app/memorial/store/memorial.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {Filter, Sort} from '../models/sort.model';\r\nimport {SearchParam} from \"../models/search-param.model\";\r\n\r\nexport namespace MemorialActions {\r\n  export class GetUsers {\r\n    static readonly type = '[Memorial] Get Users';\r\n\r\n    constructor(\r\n      public size = 20,\r\n      public page = 0\r\n    ) {}\r\n  }\r\n\r\n  export class SearchLocally {\r\n    static readonly type = '[Memorial] Search Users Locally';\r\n\r\n    constructor(public searchParams: SearchParam) {}\r\n  }\r\n\r\n  \r\n  export class SearchBox {\r\n    static readonly type = '[Memorial] Search Box';\r\n\r\n    constructor(public searchString: string) {}\r\n  }\r\n\r\n  export class SortMemorialPage {\r\n    static readonly type = '[Memorial] Sort User List';\r\n    constructor(public sortValue: Sort) {}\r\n  }\r\n\r\n  export class FilterMemorialPage {\r\n    static readonly type = '[Memorial] Filter User List';\r\n    constructor(public filterValue: Filter) {}\r\n  }\r\n\r\n  export class GetCityAndRegion {\r\n    static readonly type = '[Memorial] Get Cities and Regions';\r\n  }\r\n\r\n  export class GetFuneralHomeSettings {\r\n    static readonly type = '[Memorial] Get Funeral Home Settings';\r\n    constructor(public id: number) {}\r\n  }\r\n\r\n  export class GetUsersFailed {\r\n    static readonly type = '[Memorial] Get Users Failed';\r\n    constructor(public errorCode: string, public message: string) {}\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "size",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "20"
                    },
                    {
                        "name": "page",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "0"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "size",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "20",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "page",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "0",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "page",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "size",
                    "defaultValue": "20",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Memorial] Get Users'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "GetUsersFailed",
            "id": "class-GetUsersFailed-9a26e1a1b861a1bb5358b68e817de8bb",
            "file": "src/app/memorial/store/memorial.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {Filter, Sort} from '../models/sort.model';\r\nimport {SearchParam} from \"../models/search-param.model\";\r\n\r\nexport namespace MemorialActions {\r\n  export class GetUsers {\r\n    static readonly type = '[Memorial] Get Users';\r\n\r\n    constructor(\r\n      public size = 20,\r\n      public page = 0\r\n    ) {}\r\n  }\r\n\r\n  export class SearchLocally {\r\n    static readonly type = '[Memorial] Search Users Locally';\r\n\r\n    constructor(public searchParams: SearchParam) {}\r\n  }\r\n\r\n  \r\n  export class SearchBox {\r\n    static readonly type = '[Memorial] Search Box';\r\n\r\n    constructor(public searchString: string) {}\r\n  }\r\n\r\n  export class SortMemorialPage {\r\n    static readonly type = '[Memorial] Sort User List';\r\n    constructor(public sortValue: Sort) {}\r\n  }\r\n\r\n  export class FilterMemorialPage {\r\n    static readonly type = '[Memorial] Filter User List';\r\n    constructor(public filterValue: Filter) {}\r\n  }\r\n\r\n  export class GetCityAndRegion {\r\n    static readonly type = '[Memorial] Get Cities and Regions';\r\n  }\r\n\r\n  export class GetFuneralHomeSettings {\r\n    static readonly type = '[Memorial] Get Funeral Home Settings';\r\n    constructor(public id: number) {}\r\n  }\r\n\r\n  export class GetUsersFailed {\r\n    static readonly type = '[Memorial] Get Users Failed';\r\n    constructor(public errorCode: string, public message: string) {}\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "errorCode",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "message",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 47,
                "jsdoctags": [
                    {
                        "name": "errorCode",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "message",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "errorCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Memorial] Get Users Failed'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "MemorialSelectors",
            "id": "class-MemorialSelectors-178525e179e3351025faad769d951482",
            "file": "src/app/memorial/store/memorial.selectors.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {Selector} from '@ngxs/store';\r\nimport {MemorialState} from './memorial.state';\r\n\r\nexport class MemorialSelectors extends MemorialState {\r\n\r\n  @Selector()\r\n  static errorMessage(state): any {\r\n    return state.error.message;\r\n  }\r\n\r\n  @Selector()\r\n  static isLoading(state): any {\r\n    return state.isLoading;\r\n  }\r\n\r\n  @Selector()\r\n  static isLoadingRegion(state): any {\r\n    return state.isLoadingRegion;\r\n  }\r\n\r\n  @Selector()\r\n  static users(state): any {\r\n    return state.users;\r\n  }\r\n\r\n  @Selector()\r\n  static funeralHomeSetting(state): any {\r\n    return state.funeralHomeSetting;\r\n  }\r\n\r\n  @Selector()\r\n  static citiesAndRegions(state): any {\r\n    return state.citiesRegions;\r\n  }\r\n\r\n  @Selector()\r\n  static errorCode(state): any {\r\n    return state.error.code;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "searchPortalUrl",
                    "defaultValue": "'/portal/search'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "inheritance": {
                        "file": "MemorialState"
                    }
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "MemorialState"
                    }
                }
            ],
            "methods": [
                {
                    "name": "citiesAndRegions",
                    "args": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "errorCode",
                    "args": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "errorMessage",
                    "args": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "funeralHomeSetting",
                    "args": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isLoading",
                    "args": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isLoadingRegion",
                    "args": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "users",
                    "args": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "filterMemorialPage",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.FilterMemorialPage",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 176,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "MemorialActions.FilterMemorialPage"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.FilterMemorialPage",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "MemorialState"
                    }
                },
                {
                    "name": "getCityAndRegion",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "MemorialActions.GetCityAndRegion"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "MemorialState"
                    }
                },
                {
                    "name": "getDomain",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 247,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "MemorialState"
                    }
                },
                {
                    "name": "getFuneralHomeSettings",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.GetFuneralHomeSettings",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 152,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "MemorialActions.GetFuneralHomeSettings"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.GetFuneralHomeSettings",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "MemorialState"
                    }
                },
                {
                    "name": "getUsers",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.GetUsers",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "MemorialActions.GetUsers"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.GetUsers",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "MemorialState"
                    }
                },
                {
                    "name": "getUsersFailed",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.GetUsersFailed",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "MemorialActions.GetUsersFailed"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.GetUsersFailed",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "MemorialState"
                    }
                },
                {
                    "name": "makeSearchPortalRequest",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "HttpParams",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 191,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "HttpParams",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "MemorialState"
                    }
                },
                {
                    "name": "mapUserData",
                    "args": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Array<User>",
                    "typeParameters": [],
                    "line": 214,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "MemorialState"
                    }
                },
                {
                    "name": "refreshSubscription",
                    "args": [
                        {
                            "name": "userId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "userId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "MemorialState"
                    }
                },
                {
                    "name": "searchBox",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.SearchBox",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 184,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "MemorialActions.SearchBox"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.SearchBox",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "MemorialState"
                    }
                },
                {
                    "name": "searchLocally",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.SearchLocally",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "MemorialActions.SearchLocally"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.SearchLocally",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "MemorialState"
                    }
                },
                {
                    "name": "sortMemorialPage",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.SortMemorialPage",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 168,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "MemorialActions.SortMemorialPage"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "MemorialActions.SortMemorialPage",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "MemorialState"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "MemorialState",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "SaveConfig",
            "id": "class-SaveConfig-fc3a96d16a9b218d8d06eaa0b2298cd8",
            "file": "src/app/admin/store/admin.action.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export namespace AdminActions {\r\n\r\n  export class GetConfig {\r\n    static readonly type = '[Settings] Get Config';\r\n  }\r\n\r\n  export class GetFuneralHomeSettings {\r\n    static readonly type = '[Settings] Get Funeral Home Settings';\r\n\r\n    constructor(public id: number) {}\r\n  }\r\n\r\n  export class GetConfigFail {\r\n    static readonly type = '[Settings] Get Config Fail';\r\n\r\n    constructor(public code: string, public message: string) {\r\n    }\r\n  }\r\n\r\n  export class SaveConfig {\r\n    static readonly type = '[Settings] Save Config';\r\n\r\n    constructor(public config: {\r\n      userId: number;\r\n      mainColor: string;\r\n      themeId: number;\r\n      bannerURL: string;\r\n    }) {\r\n    }\r\n  }\r\n\r\n  export class UpdateUserRole {\r\n    static readonly type = '[Settings] Update User Role';\r\n\r\n    constructor(public config: {\r\n      userId: string,\r\n      roles: Array<string>\r\n    }) {\r\n    }\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "config",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "config",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Settings] Save Config'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "SearchBox",
            "id": "class-SearchBox-9a26e1a1b861a1bb5358b68e817de8bb",
            "file": "src/app/memorial/store/memorial.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {Filter, Sort} from '../models/sort.model';\r\nimport {SearchParam} from \"../models/search-param.model\";\r\n\r\nexport namespace MemorialActions {\r\n  export class GetUsers {\r\n    static readonly type = '[Memorial] Get Users';\r\n\r\n    constructor(\r\n      public size = 20,\r\n      public page = 0\r\n    ) {}\r\n  }\r\n\r\n  export class SearchLocally {\r\n    static readonly type = '[Memorial] Search Users Locally';\r\n\r\n    constructor(public searchParams: SearchParam) {}\r\n  }\r\n\r\n  \r\n  export class SearchBox {\r\n    static readonly type = '[Memorial] Search Box';\r\n\r\n    constructor(public searchString: string) {}\r\n  }\r\n\r\n  export class SortMemorialPage {\r\n    static readonly type = '[Memorial] Sort User List';\r\n    constructor(public sortValue: Sort) {}\r\n  }\r\n\r\n  export class FilterMemorialPage {\r\n    static readonly type = '[Memorial] Filter User List';\r\n    constructor(public filterValue: Filter) {}\r\n  }\r\n\r\n  export class GetCityAndRegion {\r\n    static readonly type = '[Memorial] Get Cities and Regions';\r\n  }\r\n\r\n  export class GetFuneralHomeSettings {\r\n    static readonly type = '[Memorial] Get Funeral Home Settings';\r\n    constructor(public id: number) {}\r\n  }\r\n\r\n  export class GetUsersFailed {\r\n    static readonly type = '[Memorial] Get Users Failed';\r\n    constructor(public errorCode: string, public message: string) {}\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "searchString",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "searchString",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "searchString",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Memorial] Search Box'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "SearchLocally",
            "id": "class-SearchLocally-9a26e1a1b861a1bb5358b68e817de8bb",
            "file": "src/app/memorial/store/memorial.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {Filter, Sort} from '../models/sort.model';\r\nimport {SearchParam} from \"../models/search-param.model\";\r\n\r\nexport namespace MemorialActions {\r\n  export class GetUsers {\r\n    static readonly type = '[Memorial] Get Users';\r\n\r\n    constructor(\r\n      public size = 20,\r\n      public page = 0\r\n    ) {}\r\n  }\r\n\r\n  export class SearchLocally {\r\n    static readonly type = '[Memorial] Search Users Locally';\r\n\r\n    constructor(public searchParams: SearchParam) {}\r\n  }\r\n\r\n  \r\n  export class SearchBox {\r\n    static readonly type = '[Memorial] Search Box';\r\n\r\n    constructor(public searchString: string) {}\r\n  }\r\n\r\n  export class SortMemorialPage {\r\n    static readonly type = '[Memorial] Sort User List';\r\n    constructor(public sortValue: Sort) {}\r\n  }\r\n\r\n  export class FilterMemorialPage {\r\n    static readonly type = '[Memorial] Filter User List';\r\n    constructor(public filterValue: Filter) {}\r\n  }\r\n\r\n  export class GetCityAndRegion {\r\n    static readonly type = '[Memorial] Get Cities and Regions';\r\n  }\r\n\r\n  export class GetFuneralHomeSettings {\r\n    static readonly type = '[Memorial] Get Funeral Home Settings';\r\n    constructor(public id: number) {}\r\n  }\r\n\r\n  export class GetUsersFailed {\r\n    static readonly type = '[Memorial] Get Users Failed';\r\n    constructor(public errorCode: string, public message: string) {}\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "searchParams",
                        "type": "SearchParam",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "searchParams",
                        "type": "SearchParam",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "searchParams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SearchParam",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Memorial] Search Users Locally'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "SortMemorialPage",
            "id": "class-SortMemorialPage-9a26e1a1b861a1bb5358b68e817de8bb",
            "file": "src/app/memorial/store/memorial.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {Filter, Sort} from '../models/sort.model';\r\nimport {SearchParam} from \"../models/search-param.model\";\r\n\r\nexport namespace MemorialActions {\r\n  export class GetUsers {\r\n    static readonly type = '[Memorial] Get Users';\r\n\r\n    constructor(\r\n      public size = 20,\r\n      public page = 0\r\n    ) {}\r\n  }\r\n\r\n  export class SearchLocally {\r\n    static readonly type = '[Memorial] Search Users Locally';\r\n\r\n    constructor(public searchParams: SearchParam) {}\r\n  }\r\n\r\n  \r\n  export class SearchBox {\r\n    static readonly type = '[Memorial] Search Box';\r\n\r\n    constructor(public searchString: string) {}\r\n  }\r\n\r\n  export class SortMemorialPage {\r\n    static readonly type = '[Memorial] Sort User List';\r\n    constructor(public sortValue: Sort) {}\r\n  }\r\n\r\n  export class FilterMemorialPage {\r\n    static readonly type = '[Memorial] Filter User List';\r\n    constructor(public filterValue: Filter) {}\r\n  }\r\n\r\n  export class GetCityAndRegion {\r\n    static readonly type = '[Memorial] Get Cities and Regions';\r\n  }\r\n\r\n  export class GetFuneralHomeSettings {\r\n    static readonly type = '[Memorial] Get Funeral Home Settings';\r\n    constructor(public id: number) {}\r\n  }\r\n\r\n  export class GetUsersFailed {\r\n    static readonly type = '[Memorial] Get Users Failed';\r\n    constructor(public errorCode: string, public message: string) {}\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sortValue",
                        "type": "Sort",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "sortValue",
                        "type": "Sort",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "sortValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Sort",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Memorial] Sort User List'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "UpdateUserRole",
            "id": "class-UpdateUserRole-fc3a96d16a9b218d8d06eaa0b2298cd8",
            "file": "src/app/admin/store/admin.action.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export namespace AdminActions {\r\n\r\n  export class GetConfig {\r\n    static readonly type = '[Settings] Get Config';\r\n  }\r\n\r\n  export class GetFuneralHomeSettings {\r\n    static readonly type = '[Settings] Get Funeral Home Settings';\r\n\r\n    constructor(public id: number) {}\r\n  }\r\n\r\n  export class GetConfigFail {\r\n    static readonly type = '[Settings] Get Config Fail';\r\n\r\n    constructor(public code: string, public message: string) {\r\n    }\r\n  }\r\n\r\n  export class SaveConfig {\r\n    static readonly type = '[Settings] Save Config';\r\n\r\n    constructor(public config: {\r\n      userId: number;\r\n      mainColor: string;\r\n      themeId: number;\r\n      bannerURL: string;\r\n    }) {\r\n    }\r\n  }\r\n\r\n  export class UpdateUserRole {\r\n    static readonly type = '[Settings] Update User Role';\r\n\r\n    constructor(public config: {\r\n      userId: string,\r\n      roles: Array<string>\r\n    }) {\r\n    }\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "config",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "config",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Settings] Update User Role'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AdminBannerComponent",
            "id": "component-AdminBannerComponent-1e20cb76c6bca5c7e2886c545f275db6",
            "file": "src/stories/admin-banner/admin-banner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-admin-banner",
            "styleUrls": [
                "./admin-banner.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./admin-banner.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "editorOptions",
                    "defaultValue": "{\r\n    imageReader: createDefaultImageReader(),\r\n    imageWriter: createDefaultImageWriter(),\r\n    ...plugin_finetune_defaults,\r\n    ...plugin_filter_defaults,\r\n    ...markup_editor_defaults,\r\n    locale: {\r\n      ...locale_en_gb,\r\n      ...plugin_crop_locale_en_gb,\r\n      ...plugin_finetune_locale_en_gb,\r\n      ...plugin_filter_locale_en_gb,\r\n      ...plugin_annotate_locale_en_gb,\r\n      ...markup_editor_locale_en_gb,\r\n    },\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "inlineResult",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "inlineSrc",
                    "defaultValue": "'./assets/images/bg_picture.png'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "modalResult",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "modalSrc",
                    "defaultValue": "'./assets/images/bg_picture.png'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "modalVisible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "overlayOptions",
                    "defaultValue": "{\r\n    imageReader: createDefaultImageReader(),\r\n    imageWriter: createDefaultImageWriter(),\r\n    locale: {\r\n      ...locale_en_gb,\r\n      ...plugin_crop_locale_en_gb,\r\n    },\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "overlayResult",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "overlaySrc",
                    "defaultValue": "'./assets/images/bg_picture.png'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "overlayVisible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 55
                }
            ],
            "methodsClass": [
                {
                    "name": "handleInlineLoad",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleInlineProcess",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleModalLoad",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleModalProcess",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleOverlayLoad",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleOverlayProcess",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\r\n\r\nimport {\r\n  createDefaultImageReader, createDefaultImageWriter, getEditorDefaults,\r\n  locale_en_gb, markup_editor_defaults, markup_editor_locale_en_gb,\r\n  plugin_annotate, plugin_annotate_locale_en_gb,\r\n  plugin_crop, plugin_crop_locale_en_gb,\r\n  plugin_filter, plugin_filter_defaults,\r\n  plugin_filter_locale_en_gb, plugin_finetune,\r\n  plugin_finetune_defaults, plugin_finetune_locale_en_gb, setPlugins\r\n} from 'pintura';\r\n\r\n\r\nsetPlugins(plugin_crop, plugin_finetune, plugin_filter, plugin_annotate);\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'adstate-admin-banner',\r\n  templateUrl: './admin-banner.component.html',\r\n  styleUrls: ['./admin-banner.component.scss']\r\n})\r\nexport class AdminBannerComponent {\r\n\r\n\r\n  editorOptions: any = {\r\n    imageReader: createDefaultImageReader(),\r\n    imageWriter: createDefaultImageWriter(),\r\n    ...plugin_finetune_defaults,\r\n    ...plugin_filter_defaults,\r\n    ...markup_editor_defaults,\r\n    locale: {\r\n      ...locale_en_gb,\r\n      ...plugin_crop_locale_en_gb,\r\n      ...plugin_finetune_locale_en_gb,\r\n      ...plugin_filter_locale_en_gb,\r\n      ...plugin_annotate_locale_en_gb,\r\n      ...markup_editor_locale_en_gb,\r\n    },\r\n  };\r\n\r\n  // inline\r\n  inlineSrc: string = './assets/images/bg_picture.png';\r\n  inlineResult: string = undefined;\r\n\r\n\r\n  // modal\r\n  modalSrc: string = './assets/images/bg_picture.png';\r\n  modalResult: string = undefined;\r\n  modalVisible: boolean = false;\r\n\r\n  // overlay\r\n  overlaySrc: string = './assets/images/bg_picture.png';\r\n  overlayVisible: boolean = false;\r\n  overlayResult: string = undefined;\r\n  overlayOptions: any = {\r\n    imageReader: createDefaultImageReader(),\r\n    imageWriter: createDefaultImageWriter(),\r\n    locale: {\r\n      ...locale_en_gb,\r\n      ...plugin_crop_locale_en_gb,\r\n    },\r\n  };\r\n\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  // ngOnChanges(changes: SimpleChanges): void {\r\n  //   if (changes && (this.isDiscardChanges || this.isSaveSettings)) {\r\n  //     this.imageChangedEvent = null;\r\n  //   }\r\n\r\n  // }\r\n\r\n  // fileChangeEvent(event: any): void {\r\n  //   this.imageChangedEvent = event;\r\n  //   this.isChanged.emit(true);\r\n  // }\r\n\r\n  // onClearImage(): void {\r\n  //   this.imageChangedEvent = null;\r\n  //   this.isChanged.emit(false);\r\n  // }\r\n\r\n\r\n  handleInlineLoad($event) {\r\n    console.log('inline load', $event);\r\n  }\r\n\r\n  handleInlineProcess($event) {\r\n    console.log('inline process', $event);\r\n    const objectURL = URL.createObjectURL($event.dest);\r\n    this.inlineResult = this.sanitizer.bypassSecurityTrustResourceUrl(objectURL) as string;\r\n  }\r\n\r\n\r\n  handleModalLoad($event) {\r\n    console.log('modal load', $event);\r\n  }\r\n\r\n  handleModalProcess($event) {\r\n    console.log('modal process', $event);\r\n    const objectURL = URL.createObjectURL($event.dest);\r\n    this.modalResult = this.sanitizer.bypassSecurityTrustResourceUrl(objectURL) as string;\r\n  }\r\n\r\n\r\n\r\n\r\n  handleOverlayLoad($event) {\r\n    console.log('overlay load', $event);\r\n  }\r\n\r\n  handleOverlayProcess($event) {\r\n    const objectURL = URL.createObjectURL($event.dest);\r\n    this.overlayResult = this.sanitizer.bypassSecurityTrustResourceUrl(objectURL) as string;\r\n    this.overlayOptions = {\r\n      ...this.overlayOptions,\r\n      imageState: $event.imageState,\r\n    };\r\n\r\n    this.overlayVisible = false;\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\nhost {\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial,\r\n      sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\r\n  font-size: 14px;\r\n  color: #333;\r\n  box-sizing: border-box;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  padding: 2em;\r\n}\r\n\r\nimg {\r\n  max-width: 100%;\r\n}\r\n\r\npintura-editor {\r\n  box-shadow: 0 0 0 1px #eee;\r\n}\r\n",
                    "styleUrl": "./admin-banner.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 64,
                "jsdoctags": [
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div>\r\n\r\n  <div style=\"height: 500px\">\r\n      <pintura-editor\r\n          [src]=\"inlineSrc\"\r\n          [options]=\"editorOptions\"\r\n          (load)=\"handleInlineLoad($event)\"\r\n      ></pintura-editor>\r\n  </div>\r\n\r\n  <p><img *ngIf=\"inlineResult\" [src]=\"inlineResult\" alt=\"\" /></p>\r\n\r\n</div>\r\n"
        },
        {
            "name": "AdvancedFilterComponent",
            "id": "component-AdvancedFilterComponent-da42ac93603d5e89e7ba10feb8410f89",
            "file": "src/stories/filter/filter.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-advanced-filter",
            "styleUrls": [
                "./filter.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./filter.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'Filter'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cities",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "citiesAndRegions$",
                    "defaultValue": "from(import('../assets/cities-regions.json')).pipe(\r\n    tap((citiesAndRegions) => {\r\n      this.regions = citiesAndRegions.data\r\n    }),\r\n    map(citiesAndRegions => citiesAndRegions.data),\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "currentLanguage",
                    "defaultValue": "'en'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "datePickerConfig",
                    "defaultValue": "{\r\n    containerClass: 'theme-adstate',\r\n    showClearButton: true\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "datepickerPlacement",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "isCollapsed",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "isSelectAllItem",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "items",
                    "defaultValue": "[\r\n    { label: 'Memorial page', isSelected: false },\r\n    { label: 'Have donations', isSelected: false },\r\n    { label: 'Has death notice', isSelected: false },\r\n    { label: 'Has flower shop', isSelected: false  }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "label",
                    "defaultValue": "'Filter'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "ngSelectComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgSelectComponent",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'citySelect'"
                        }
                    ]
                },
                {
                    "name": "regions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "selectedCity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "selectedItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "compareSelectedValue",
                    "args": [
                        {
                            "name": "item",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "selected",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "selected",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onItemSelect",
                    "args": [
                        {
                            "name": "index",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSelectAllItem",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSelectCity",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSelectRegion",
                    "args": [
                        {
                            "name": "region",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "region",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleAdvancedSearch",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { NgSelectComponent } from '@ng-select/ng-select';\r\nimport { from } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'adstate-advanced-filter',\r\n  templateUrl: './filter.html',\r\n  styleUrls: ['./filter.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport default class AdvancedFilterComponent {\r\n\r\n  @Input() label: string = 'Filter';\r\n\r\n  selectedItems = [];\r\n  isSelectAllItem: boolean = false;\r\n  isCollapsed = true;\r\n  regions = [];\r\n  cities = [];\r\n  currentLanguage = 'en';\r\n  datepickerPlacement = 'bottom';\r\n  selectedCity: any;\r\n\r\n  citiesAndRegions$ = from(import('../assets/cities-regions.json')).pipe(\r\n    tap((citiesAndRegions) => {\r\n      this.regions = citiesAndRegions.data\r\n    }),\r\n    map(citiesAndRegions => citiesAndRegions.data),\r\n  );\r\n\r\n  items = [\r\n    { label: 'Memorial page', isSelected: false },\r\n    { label: 'Have donations', isSelected: false },\r\n    { label: 'Has death notice', isSelected: false },\r\n    { label: 'Has flower shop', isSelected: false  }\r\n  ];\r\n\r\n  datePickerConfig = {\r\n    containerClass: 'theme-adstate',\r\n    showClearButton: true\r\n  };\r\n  \r\n  @ViewChild('citySelect') ngSelectComponent: NgSelectComponent;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  onSelectAllItem() {\r\n    this.isSelectAllItem = !this.isSelectAllItem;\r\n\r\n    console.log('this.isSelectAllItem', this.isSelectAllItem);\r\n\r\n    this.items = this.items.map(item => {\r\n      return {\r\n        ...item,\r\n        isSelected: this.isSelectAllItem\r\n      }\r\n    });\r\n\r\n    if (this.isSelectAllItem) {\r\n      return this.selectedItems = this.items;\r\n    }\r\n\r\n    return this.selectedItems = [];\r\n  }\r\n\r\n  onItemSelect(index) {\r\n    this.items[index].isSelected = !this.items[index].isSelected;\r\n    this.selectedItems = this.items.filter(item => item.isSelected);\r\n\r\n    if (this.selectedItems.length === 4) {\r\n      this.isSelectAllItem = true;\r\n    }\r\n\r\n    if (this.selectedItems.length === 0) {\r\n      this.isSelectAllItem = false;\r\n    }\r\n  }\r\n\r\n  toggleAdvancedSearch(): void {\r\n    this.isCollapsed = !this.isCollapsed;\r\n  }\r\n\r\n  onSelectRegion(region): void {\r\n\r\n    const citiesByRegion = this.regions.find(reg => reg.id === region.id);\r\n    this.ngSelectComponent.handleClearClick();\r\n\r\n    this.cities = [\r\n      { id: 0, name: 'All cities' },\r\n      ...citiesByRegion.cities\r\n    ];\r\n\r\n  }\r\n\r\n  compareSelectedValue(item, selected): boolean {\r\n    return item.id === selected.id;\r\n  }\r\n\r\n  onSelectCity(event): void { }\r\n\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".clear-btn,\r\n.result-btn {\r\n  border-radius: 10px;\r\n}\r\n\r\n.btn-filter {\r\n  border-radius: 0.5rem;\r\n  border: 1px solid var(--adstate-primary-800);\r\n  padding: 0rem 0.5rem;\r\n  color: var(--adstate-primary-800);\r\n  transition: 0.3s;\r\n}\r\n\r\n.btn-filter:hover,\r\n.btn-filter:focus {\r\n  background: rgb(244 236 249);\r\n  border: 1px solid var(--adstate-primary-800);\r\n  color: var(--adstate-primary-800);\r\n  box-shadow: none;\r\n  filter: drop-shadow(-2px 4px 2px rgb(244 236 249));\r\n}\r\n\r\n.dropdown-item:hover {\r\n  cursor: pointer;\r\n  background: rgb(244 236 249);\r\n}\r\n\r\n\r\n.item {\r\n  display: block;\r\n  position: relative;\r\n  padding-left: 25px;\r\n  cursor: pointer;\r\n  color: var(--color-black);\r\n}\r\n\r\n.item input {\r\n  position: absolute;\r\n  opacity: 0;\r\n  cursor: pointer;\r\n  height: 0;\r\n  width: 0;\r\n}\r\n\r\n.check-mark {\r\n  position: absolute;\r\n  top: 4px;\r\n  left: 0;\r\n  height: 16px;\r\n  width: 16px;\r\n  border: 1px solid var(--adstate-primary-500);\r\n  border-radius: 3px;\r\n}\r\n\r\n\r\n.check-mark2 {\r\n  position: absolute;\r\n  top: 4px;\r\n  left: 0;\r\n  height: 16px;\r\n  width: 16px;\r\n  border: 1px solid var(--adstate-primary-500);\r\n  border-radius: 3px;\r\n}\r\n\r\n\r\n.item:hover input~.check-mark {\r\n  background-color: rgb(244 236 249);\r\n}\r\n\r\n.item:hover input~.check-mark2 {\r\n  background-color: rgb(244 236 249);\r\n}\r\n\r\n.item input:checked~.check-mark {\r\n  background-color: var(--adstate-primary-500);\r\n}\r\n\r\n.item input:checked~.check-mark2 {\r\n  background-color: var(--adstate-primary-500);\r\n}\r\n\r\n.check-mark2:after, .check-mark:after {\r\n  content: \"\";\r\n  position: absolute;\r\n  display: none;\r\n}\r\n\r\n.item input:checked~.check-mark:after {\r\n  display: block;\r\n}\r\n\r\n.item .check-mark:after {\r\n  left: 4px;\r\n  top: 1px;\r\n  width: 5px;\r\n  height: 10px;\r\n  border: solid var(--color-white);\r\n  border-width: 0 2px 2px 0;\r\n  transform: rotate(45deg);\r\n}\r\n\r\n.item .check-mark2:after {\r\n  left: 2px;\r\n  top: -1px;\r\n  width: 10px;\r\n  height: 9px;\r\n  border: solid var(--color-white);\r\n  border-width: 0px 0px 2px 0;\r\n  transform: rotate(0deg);\r\n}\r\n\r\n.has-selected-item {\r\n  background: var(--adstate-primary-500);\r\n  border: 1px solid var(--adstate-primary-800);\r\n  color: var(--color-white);\r\n  box-shadow: none;\r\n  filter: var(--adstate-drop-shadow)\r\n}\r\n\r\n.dropdown-item {\r\n  color: var(--color-black);\r\n}\r\n\r\n.dropdown-item:hover {\r\n  cursor: pointer;\r\n  background: rgb(244 236 249);\r\n}\r\n\r\n.dropdown-menu {\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n  border-radius: 14px;\r\n}\r\n\r\n.ng-select.ng-select-single .ng-select-container {\r\n  height: 63px;\r\n\r\n  .ng-input input {\r\n    height: 63px;\r\n  }\r\n}\r\n\r\n.born-input {\r\n  max-width: 0;\r\n  padding: 0.1px;\r\n  border: none;\r\n}\r\n\r\n.date-range-select {\r\n  border-right: 0;\r\n}\r\n\r\n.input-group-text {\r\n  background: var(--color-white);\r\n  border-left: 0;\r\n}\r\n\r\n.theme-adstate {\r\n\r\n  .bs-datepicker-head {\r\n    background-color: var(--bs-primary);\r\n  }\r\n\r\n  .bs-datepicker-body table {\r\n\r\n    th {\r\n      color: var(--bs-primary);\r\n    }\r\n\r\n    td {\r\n      color: var(--bs-primary);\r\n    }\r\n\r\n    td.week span {\r\n      color: var(--bs-primary);\r\n    }\r\n\r\n    td span.selected {\r\n      background-color: var(--bs-primary);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n",
                    "styleUrl": "./filter.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 44
            },
            "templateData": "<div class=\"advanced-search my-4\">\r\n\r\n  <div class=\"d-flex justify-content-end mb-3\">\r\n\r\n    <button id=\"button-filter\"\r\n              type=\"button\"\r\n              id=\"button-advanced-search\" \r\n              class=\"btn btn-filter mx-3\"\r\n              aria-controls=\"dropdown-filter\"\r\n              (click)=\"toggleAdvancedSearch();\" \r\n              [attr.aria-expanded]=\"!isCollapsed\" \r\n              aria-controls=\"collapseBasic\"\r\n              data-cy=\"advance-search\">\r\n        {{ label }}  <i class=\"bi bi-funnel\"></i>\r\n    </button>\r\n\r\n    <adstate-sort></adstate-sort>\r\n\r\n  </div>\r\n\r\n  <section class=\"container-fluid p-0\" \r\n          id=\"collapseBasic\" \r\n          [collapse]=\"isCollapsed\" \r\n          [isAnimated]=\"true\"\r\n          aria-labelledby=\"button-advanced-search\">\r\n\r\n    <div>\r\n      <div class=\"row mb-3\">\r\n        <div class=\"col-sm-12 col-md-3 mb-2\">\r\n          <input type=\"text\" id=\"firstName\" placeholder=\"First name\" class=\"form-control adstate-input shadow-none\"\r\n            data-cy=\"first-name-input\">\r\n        </div>\r\n\r\n        <div class=\"col-sm-12 col-md-3 mb-2\">\r\n          <input type=\"text\" id=\"lastname\" placeholder=\"Last name\" class=\"form-control adstate-input shadow-none\"\r\n            data-cy=\"last-name-input\">\r\n        </div>\r\n\r\n        <div class=\"col-sm-12 col-md-3 mb-2\">\r\n\r\n          <div class=\"input-group mb-1 adstate-input\">\r\n            <input type=\"text\"\r\n              placeholder=\"Born Date\"\r\n              class=\"form-control date-range-select shadow-none\"\r\n              [bsConfig]=\"datePickerConfig\"\r\n              #bornDatePicker=\"bsDaterangepicker\"\r\n              bsDaterangepicker>\r\n\r\n            <span class=\"input-group-text\" (click)=\"bornDatePicker.show()\" data-cy=\"date-range-button-trigger\">\r\n              <i class=\"bi bi-calendar4\"></i>\r\n            </span>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"col-sm-12 col-md-3 mb-2\">\r\n\r\n          <div class=\"input-group mb-1 adstate-input\">\r\n            <input type=\"text\"\r\n              placeholder=\"Death Date\"\r\n              class=\"form-control date-range-select shadow-none\"\r\n              [bsConfig]=\"datePickerConfig\"\r\n              #deathDatePicker=\"bsDaterangepicker\"\r\n              bsDaterangepicker>\r\n\r\n            <span class=\"input-group-text\" (click)=\"deathDatePicker.show()\">\r\n              <i class=\"bi bi-calendar4\"></i>\r\n            </span>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex\">\r\n      <div class=\"mb-3 w-100 pe-3\">\r\n        <ng-select class=\"adstate-input\" \r\n                  [items]=\"citiesAndRegions$ | async\"\r\n                  [editableSearchTerm]=\"true\" \r\n                  [compareWith]=\"compareSelectedValue\"\r\n                  (change)=\"onSelectRegion($event)\"\r\n                  bindLabel=\"name\" \r\n                  bindValue=\"id\">\r\n        </ng-select>\r\n      </div>\r\n\r\n      <div class=\"mb-3 w-100\">\r\n        <ng-select class=\"adstate-input\" \r\n                  labelForId=\"portalPage-inputField-city\" \r\n                  [items]=\"cities\"\r\n                  [editableSearchTerm]=\"true\"\r\n                  [compareWith]=\"compareSelectedValue\" \r\n                  (change)=\"onSelectCity($event)\"\r\n                  loadingText=\"Loading data ...\" \r\n                  #citySelect\r\n                  bindLabel=\"name\" bindValue=\"id\">\r\n        </ng-select>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-end\">\r\n      \r\n      <button type=\"button\" class=\"btn clear-btn btn-outline-primary mx-3\">\r\n        Clear\r\n      </button>\r\n\r\n      <div class=\"btn result-btn btn-primary\">\r\n        1 202 502 results\r\n      </div>\r\n\r\n\r\n    </div>\r\n\r\n  </section>\r\n\r\n</div>"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-42a1ca207b67410f4354a5849c5fc41e",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'ng-our-memorial-page'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\r\nimport {setTheme} from 'ngx-bootstrap/utils';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n  title = 'ng-our-memorial-page';\r\n\r\n  constructor() {\r\n    setTheme('bs4');\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "templateData": "<router-outlet></router-outlet>\r\n"
        },
        {
            "name": "BannerComponent",
            "id": "component-BannerComponent-3f885a5b94a5230954c2b60c352b8380",
            "file": "src/stories/banner/banner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-banner",
            "styleUrls": [
                "./banner.css"
            ],
            "styles": [],
            "template": "<div *ngIf=\"imageSource !== ''\" >\n  <div class=\"banner\" id=\"bannerImage\"\n      [ngStyle]=\"{'background-image': 'url(' + getImageSrc() + ')', 'height': height+'px' }\">\n  </div>\n</div>\n\n<div *ngIf=\"!imageSource || imageSource === ''\">\n  <div class=\"default\" id=\"bannerDefault\"\n       [ngStyle]=\"{ 'background-color': backgroundColor, 'height': height+'px' }\">\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "number"
                },
                {
                    "name": "imageOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "imageSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "imageOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "imageSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getImageSrc",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'adstate-banner',\r\n  template: `\r\n    <div *ngIf=\"imageSource !== ''\" >\r\n      <div class=\"banner\" id=\"bannerImage\"\r\n          [ngStyle]=\"{'background-image': 'url(' + getImageSrc() + ')', 'height': height+'px' }\">\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"!imageSource || imageSource === ''\">\r\n      <div class=\"default\" id=\"bannerDefault\"\r\n           [ngStyle]=\"{ 'background-color': backgroundColor, 'height': height+'px' }\">\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./banner.css'],\r\n})\r\nexport default class BannerComponent { \r\n  @Input() backgroundColor: string;\r\n  @Input() height: number;\r\n  @Input() imageSource: string;\r\n  @Input() imageOptions: string;\r\n\r\n  getImageSrc() {\r\n    if(this.imageOptions) {\r\n      return this.imageSource = this.imageOptions;\r\n    }\r\n\r\n    if(this.imageSource !== '') {\r\n      return this.imageSource;\r\n    }\r\n\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".default {\r\n  height: 400px;\r\n  width: 100%;\r\n}\r\n\r\n.banner {\r\n  width: 100%;\r\n  height: 400px;\r\n  background-size: cover;\r\n  background-position: center;\r\n  transition: 0.4s;\r\n  /* transition: 2s; */\r\n}\r\n\r\n@media screen and (max-width: 568px) and (min-width: 320px) {\r\n  .banner {\r\n    height: 25vh;\r\n  }\r\n\r\n  .default {\r\n    height: 25vh;\r\n  }\r\n}\r\n",
                    "styleUrl": "./banner.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "BannerImageComponent",
            "id": "component-BannerImageComponent-ddd7fae4bcde7e1439c87e915fd65d5b",
            "file": "src/app/customization-admin/containers/banner-image/banner-image.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-banner-image",
            "styleUrls": [
                "./banner-image.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./banner-image.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isDiscardChanges",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean"
                },
                {
                    "name": "isSaveSettings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "isChanged",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "editorOptions",
                    "defaultValue": "{\r\n    imageReader: createDefaultImageReader(),\r\n    imageWriter: createDefaultImageWriter(),\r\n    ...plugin_finetune_defaults,\r\n    ...plugin_filter_defaults,\r\n    ...markup_editor_defaults,\r\n    locale: {\r\n      ...locale_en_gb,\r\n      ...plugin_crop_locale_en_gb,\r\n      ...plugin_finetune_locale_en_gb,\r\n      ...plugin_filter_locale_en_gb,\r\n      ...plugin_annotate_locale_en_gb,\r\n      ...markup_editor_locale_en_gb,\r\n    },\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "imageChangedEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "inlineResult",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "inlineSrc",
                    "defaultValue": "'./assets/images/bg_picture.png'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "isChanged",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "isDiscardChanges",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "isSaveSettings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "modalResult",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "modalSrc",
                    "defaultValue": "'./assets/images/bg_picture.png'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "modalVisible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "overlayOptions",
                    "defaultValue": "{\r\n    imageReader: createDefaultImageReader(),\r\n    imageWriter: createDefaultImageWriter(),\r\n    locale: {\r\n      ...locale_en_gb,\r\n      ...plugin_crop_locale_en_gb,\r\n    },\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "overlayResult",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "overlaySrc",
                    "defaultValue": "'./assets/images/bg_picture.png'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "overlayVisible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 52
                }
            ],
            "methodsClass": [
                {
                    "name": "handleInlineLoad",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleInlineProcess",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleModalLoad",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleModalProcess",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleOverlayLoad",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleOverlayProcess",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { SimpleChanges } from '@angular/core';\r\nimport { OnChanges } from '@angular/core';\r\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\r\nimport { createDefaultImageReader, createDefaultImageWriter, getEditorDefaults, locale_en_gb, markup_editor_defaults, markup_editor_locale_en_gb, plugin_annotate, plugin_annotate_locale_en_gb, plugin_crop, plugin_crop_locale_en_gb, plugin_filter, plugin_filter_defaults, plugin_filter_locale_en_gb, plugin_finetune, plugin_finetune_defaults, plugin_finetune_locale_en_gb, setPlugins } from 'local_modules/pintura/pintura';\r\n\r\n\r\nsetPlugins(plugin_crop, plugin_finetune, plugin_filter, plugin_annotate);\r\n\r\n@Component({\r\n  selector: 'app-banner-image',\r\n  templateUrl: './banner-image.component.html',\r\n  styleUrls: ['./banner-image.component.scss']\r\n})\r\nexport class BannerImageComponent implements OnInit {\r\n\r\n  @Input() isDiscardChanges: boolean;\r\n  @Input() isSaveSettings: boolean;\r\n  @Output() isChanged = new EventEmitter();\r\n\r\n  imageChangedEvent: any;\r\n\r\n\r\n  editorOptions: any = {\r\n    imageReader: createDefaultImageReader(),\r\n    imageWriter: createDefaultImageWriter(),\r\n    ...plugin_finetune_defaults,\r\n    ...plugin_filter_defaults,\r\n    ...markup_editor_defaults,\r\n    locale: {\r\n      ...locale_en_gb,\r\n      ...plugin_crop_locale_en_gb,\r\n      ...plugin_finetune_locale_en_gb,\r\n      ...plugin_filter_locale_en_gb,\r\n      ...plugin_annotate_locale_en_gb,\r\n      ...markup_editor_locale_en_gb,\r\n    },\r\n  };\r\n\r\n  // inline\r\n  inlineSrc: string = './assets/images/bg_picture.png';\r\n  inlineResult: string = undefined;\r\n\r\n\r\n  // modal\r\n  modalSrc: string = './assets/images/bg_picture.png';\r\n  modalResult: string = undefined;\r\n  modalVisible: boolean = false;\r\n\r\n  // overlay\r\n  overlaySrc: string = './assets/images/bg_picture.png';\r\n  overlayVisible: boolean = false;\r\n  overlayResult: string = undefined;\r\n  overlayOptions: any = {\r\n    imageReader: createDefaultImageReader(),\r\n    imageWriter: createDefaultImageWriter(),\r\n    locale: {\r\n      ...locale_en_gb,\r\n      ...plugin_crop_locale_en_gb,\r\n    },\r\n  };\r\n\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  // ngOnChanges(changes: SimpleChanges): void {\r\n  //   if (changes && (this.isDiscardChanges || this.isSaveSettings)) {\r\n  //     this.imageChangedEvent = null;\r\n  //   }\r\n\r\n  // }\r\n\r\n  // fileChangeEvent(event: any): void {\r\n  //   this.imageChangedEvent = event;\r\n  //   this.isChanged.emit(true);\r\n  // }\r\n\r\n  // onClearImage(): void {\r\n  //   this.imageChangedEvent = null;\r\n  //   this.isChanged.emit(false);\r\n  // }\r\n\r\n\r\n  handleInlineLoad($event) {\r\n    console.log('inline load', $event);\r\n  }\r\n\r\n  handleInlineProcess($event) {\r\n    console.log('inline process', $event);\r\n    const objectURL = URL.createObjectURL($event.dest);\r\n    this.inlineResult = this.sanitizer.bypassSecurityTrustResourceUrl(objectURL) as string;\r\n  }\r\n\r\n\r\n  handleModalLoad($event) {\r\n    console.log('modal load', $event);\r\n  }\r\n\r\n  handleModalProcess($event) {\r\n    console.log('modal process', $event);\r\n    const objectURL = URL.createObjectURL($event.dest);\r\n    this.modalResult = this.sanitizer.bypassSecurityTrustResourceUrl(objectURL) as string;\r\n  }\r\n\r\n\r\n\r\n\r\n  handleOverlayLoad($event) {\r\n    console.log('overlay load', $event);\r\n  }\r\n\r\n  handleOverlayProcess($event) {\r\n    const objectURL = URL.createObjectURL($event.dest);\r\n    this.overlayResult = this.sanitizer.bypassSecurityTrustResourceUrl(objectURL) as string;\r\n    this.overlayOptions = {\r\n      ...this.overlayOptions,\r\n      imageState: $event.imageState,\r\n    };\r\n\r\n    this.overlayVisible = false;\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// .overlay {\r\n//   position: absolute;\r\n//   z-index: 9;\r\n// }\r\n\r\n// .banner-card {\r\n//   min-height: 420px;\r\n//   height: 100%;\r\n//   background: rgba(105, 45, 135, 0.4);\r\n//   mix-blend-mode: normal;\r\n//   border-radius: 0.75rem;\r\n//   position: relative;\r\n// }\r\n\r\n// .title {\r\n//   font-size: 1.5rem;\r\n//   font-weight: bold;\r\n//   color: #494949;\r\n//   opacity: 1;\r\n//   top: 10rem;\r\n//   left: 10rem;\r\n// }\r\n\r\n// .subtitle {\r\n//   font-size: 1.25rem;\r\n//   color: #494949;\r\n//   opacity: 1;\r\n//   top: 13rem;\r\n//   left: 10rem;\r\n// }\r\n\r\n// .clear-image-btn {\r\n//   font-weight: bold;\r\n// }\r\n\r\n// .image-icon {\r\n//   position: absolute;\r\n//   bottom: -8rem;\r\n//   right: 0;\r\n//   color: #ad9dc8;\r\n//   font-size: 30rem;\r\n// }\r\n\r\n// .actions {\r\n//   top: 15rem;\r\n//   left: 10rem;\r\n// }\r\n\r\n// .input-file {\r\n//   width: 0.1px;\r\n//   height: 0.1px;\r\n//   opacity: 0;\r\n//   overflow: hidden;\r\n//   position: absolute;\r\n//   z-index: -1;\r\n// }\r\n\r\n// .input-file + label {\r\n//   cursor: pointer;\r\n//   height: 38px;\r\n//   width: 42px;\r\n//   font-size: 1.25em;\r\n//   font-weight: 700;\r\n//   color: #212529;\r\n//   background-color: #ffffff;\r\n//   display: flex;\r\n//   align-items: center;\r\n//   justify-content: center;\r\n//   border-radius: 0.25rem;\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
                    "styleUrl": "./banner-image.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 61,
                "jsdoctags": [
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- <div class=\"banner-card\">\r\n  <div style=\"position: relative;\">\r\n    <div class=\"title overlay\">\r\n      Banner image\r\n    </div>\r\n\r\n    <div class=\"subtitle overlay\">\r\n      Change the banner image you see behind the search bar on the portal page.\r\n    </div>\r\n\r\n    <div class=\"mt-3 d-flex overlay actions\">\r\n\r\n      <input type=\"file\" name=\"file\" id=\"file\" class=\"input-file\" (change)=\"fileChangeEvent($event)\" />\r\n      <label for=\"file\"><i class=\"bi bi-upload\"></i></label>\r\n\r\n      <button class=\"btn bg-white text-grey text-uppercase mx-3\"><i class=\"bi bi-arrows-move\"></i></button>\r\n      <button class=\"btn bg-white text-grey text-uppercase clear-image-btn\" (click)=\"onClearImage()\">\r\n        clear image\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"overlay\" style=\"z-index: 0;\">\r\n\r\n      <app-image-upload \r\n        [imageChangedEvent]=\"imageChangedEvent\"\r\n        [isSaveSettings]=\"isSaveSettings\">\r\n      </app-image-upload>\r\n    </div>\r\n  </div>\r\n</div> -->\r\n\r\n\r\n\r\n<div>\r\n\r\n  <div style=\"height: 500px\">\r\n      <pintura-editor\r\n          [src]=\"inlineSrc\"\r\n          [options]=\"editorOptions\"\r\n          (load)=\"handleInlineLoad($event)\"\r\n      ></pintura-editor>\r\n  </div>\r\n\r\n  <p><img *ngIf=\"inlineResult\" [src]=\"inlineResult\" alt=\"\" /></p>\r\n\r\n\r\n\r\n  \r\n  <h2>Modal</h2>\r\n\r\n  <button (click)=\"modalVisible = true\">Show Modal</button>\r\n\r\n  <pintura-editor-modal\r\n      *ngIf=\"modalVisible\"\r\n      [src]=\"modalSrc\"\r\n      [options]=\"editorOptions\"\r\n      (hide)=\"modalVisible = false\"\r\n      (load)=\"handleModalLoad($event)\"\r\n      (process)=\"handleModalProcess($event)\"\r\n  ></pintura-editor-modal>\r\n\r\n  <p><img *ngIf=\"modalResult\" [src]=\"modalResult\" alt=\"\" /></p>\r\n\r\n\r\n\r\n\r\n\r\n\r\n  <h2>Overlay</h2>\r\n\r\n  <p>\r\n      <button *ngIf=\"!overlayVisible\" (click)=\"overlayVisible = true\">Edit image</button>\r\n      <button *ngIf=\"overlayVisible\" (click)=\"overlayVisible = false\">Close editor</button>\r\n  </p>\r\n\r\n  <p *ngIf=\"!overlayVisible\">\r\n      <img [src]=\"overlayResult || overlaySrc\" width=\"512\" height=\"256\" alt=\"\" />\r\n  </p>\r\n\r\n  <div *ngIf=\"overlayVisible\" style=\"width: 512px; height: 256px\">\r\n      <pintura-editor-overlay\r\n          [src]=\"overlaySrc\"\r\n          [options]=\"overlayOptions\"\r\n          (load)=\"handleOverlayLoad($event)\"\r\n          (process)=\"handleOverlayProcess($event)\"\r\n      ></pintura-editor-overlay>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "BasicSelectComponent",
            "id": "component-BasicSelectComponent-b73f94df82f71dca41fd51e11089b0a8",
            "file": "src/stories/select/basic/basic.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-select-basic",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./basic.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hasIconForLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "hasIconForOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "icon",
                    "defaultValue": "'han'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "iconPlace",
                    "defaultValue": "Direction.Left",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "any"
                },
                {
                    "name": "selectedPerson",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "direction",
                    "defaultValue": "Direction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "hasIconForLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "hasIconForOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "icon",
                    "defaultValue": "'han'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "iconPlace",
                    "defaultValue": "Direction.Left",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "mockData",
                    "defaultValue": "from(import('../../assets/mockdata.json'))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "selectedPerson",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { from } from 'rxjs';\r\nimport { Direction } from 'src/stories/directions';\r\n\r\n@Component({\r\n  selector: 'adstate-select-basic',\r\n  templateUrl: './basic.html',\r\n})\r\nexport default class BasicSelectComponent {\r\n \r\n  @Input() hasIconForLabel: boolean;\r\n  @Input() hasIconForOption: boolean;\r\n  @Input() iconPlace = Direction.Left;\r\n  @Input() icon: string = 'han';\r\n  @Input() selectedPerson: any;\r\n  \r\n  mockData =  from(import('../../assets/mockdata.json'));\r\n\r\n  direction = Direction;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<ng-select [searchable]=\"false\" \r\n            [clearable]=\"false\"\r\n            [items]=\"(mockData | async).data\"\r\n            bindLabel=\"name\"\r\n            [(ngModel)]=\"selectedPerson\">\r\n\r\n    <ng-template ng-label-tmp let-item=\"item\">\r\n      <i *ngIf=\"hasIconForLabel && iconPlace === direction.Left\" class=\"me-2 bi bi-{{ icon }}\"></i>\r\n\r\n      <span> {{ item.name }} </span>\r\n\r\n      <i *ngIf=\"hasIconForLabel && iconPlace === direction.Right\" class=\"ms-2 bi bi-{{ icon }}\"></i>\r\n    </ng-template>\r\n\r\n\r\n    <ng-template ng-option-tmp let-item=\"item\" let-index=\"index\" let-search=\"searchTerm\">\r\n      <i *ngIf=\"hasIconForOption && iconPlace === direction.Left\" class=\"me-2 bi bi-{{ icon }}\"></i>\r\n\r\n      <span> {{ item.name }} </span>\r\n\r\n      <i *ngIf=\"hasIconForOption && iconPlace === direction.Right\" class=\"ms-2 bi bi-{{ icon }}\"></i>\r\n  </ng-template>\r\n\r\n\r\n</ng-select>\r\n"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-9c72bfdc7f2bc0c2383da658c95fc614",
            "file": "src/app/customization-admin/containers/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [
                "./card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.scss']\r\n})\r\nexport class CardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".admin-card {\r\n  background: #ffffff;\r\n  box-shadow: var(--adstate-card-shadow);\r\n  border-radius: 1rem;\r\n  padding: 1rem 2rem;\r\n}\r\n\r\n.title {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.subtitle {\r\n  font-size: 1.25rem;\r\n}\r\n",
                    "styleUrl": "./card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"admin-card\">\r\n  <div class=\"title\">\r\n    <ng-content select=\"[cardTitle]\"></ng-content>\r\n  </div>\r\n\r\n  <div class=\"subtitle\">\r\n    <ng-content select=\"[cardSubtitle]\"></ng-content>\r\n  </div>\r\n\r\n  <div class=\"mt-3\">\r\n    <ng-content select=\"[cardBody]\"></ng-content>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-de52d5c69ee2a9d2426d5677b5d01049",
            "file": "src/app/shared/checkbox/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox",
            "styleUrls": [
                "./checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "checked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-checkbox',\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrls: ['./checkbox.component.scss']\r\n})\r\nexport class CheckboxComponent implements OnInit {\r\n\r\n  @Input() checked: boolean;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {\r\n  display: block;\r\n  position: relative;\r\n  cursor: pointer;\r\n  font-size: 1.3rem;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n}\r\n\r\n.container input {\r\n  position: absolute;\r\n  opacity: 0;\r\n  cursor: pointer;\r\n  height: 0;\r\n  width: 0;\r\n}\r\n\r\n.checkmark {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 2rem;\r\n  width: 2rem;\r\n  border-radius: 50%;\r\n  background-color: #F2F2F2;\r\n  border: 1px solid #E0E0E0;\r\n}\r\n\r\n.container:hover input~.checkmark {\r\n  background: var(--adstate-primary-gradient);\r\n}\r\n\r\n.container input:checked~.checkmark {\r\n  background: var(--adstate-primary-gradient);\r\n  border: 3px solid #E0E0E0;\r\n}\r\n\r\n.checkmark:after {\r\n  content: \"\";\r\n  position: absolute;\r\n  display: none;\r\n}\r\n\r\n.container input:checked~.checkmark:after {\r\n  display: block;\r\n}\r\n\r\n.container .checkmark:after {\r\n  left: 10px;\r\n  top: 4px;\r\n  width: 6px;\r\n  height: 17px;\r\n  border: solid #ffffff;\r\n  border-width: 0 2px 2px 0;\r\n  transform: rotate(45deg);\r\n  -webkit-transform: rotate(45deg);\r\n}\r\n",
                    "styleUrl": "./checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<label class=\"container\">\r\n  <input type=\"checkbox\" [checked]=\"checked\">\r\n  <span class=\"checkmark\">\r\n  </span>\r\n</label>\r\n"
        },
        {
            "name": "ColorPickerComponent",
            "id": "component-ColorPickerComponent-838cbfa9ed0139be8997e98925a99114",
            "file": "src/stories/color-picker/color-picker.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-color-picker",
            "styleUrls": [
                "./color-picker.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./color-picker.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "close",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                },
                {
                    "name": "done",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "close",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "color",
                    "defaultValue": "'#A706D8'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "done",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "isGradientPicker",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "secondColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "handleColorChanged",
                    "args": [
                        {
                            "name": "event",
                            "type": "CustomEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "CustomEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleSecondColorChanged",
                    "args": [
                        {
                            "name": "event",
                            "type": "CustomEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "CustomEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onCancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDone",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\r\nimport 'vanilla-colorful';\r\n\r\n@Component({\r\n  selector: 'adstate-color-picker',\r\n  templateUrl: './color-picker.html',\r\n  styleUrls: ['./color-picker.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport default class ColorPickerComponent {\r\n\r\n  isGradientPicker: boolean = false;\r\n  color: string = '#A706D8';\r\n  secondColor: string;\r\n\r\n  @Output() close = new EventEmitter();\r\n  @Output() done = new EventEmitter();\r\n\r\n  handleColorChanged(event: CustomEvent) {\r\n    this.color = event.detail.value;\r\n  }\r\n\r\n  handleSecondColorChanged(event: CustomEvent) {\r\n    this.secondColor = event.detail.value;\r\n  }\r\n\r\n  onCancel() {\r\n    this.close.emit(true);\r\n  }\r\n\r\n  onDone() {\r\n    if(this.isGradientPicker) {\r\n      return this.done.emit({\r\n        color: this.color,\r\n        secondColor: this.secondColor,\r\n      });\r\n    }\r\n\r\n    return this.done.emit(this.color);\r\n  }\r\n\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".admin-card {\r\n  background: var(--color-white);\r\n  box-shadow: var(--adstate-card-shadow);\r\n  border-radius: 1rem;\r\n  padding: 1rem 2rem;\r\n  width: fit-content;\r\n}\r\n\r\n.title {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.subtitle {\r\n  font-size: 1.25rem;\r\n}\r\n\r\n.close {\r\n  cursor: pointer;\r\n}\r\n\r\n\r\n\r\nhex-color-picker {\r\n  height: 267px;\r\n  width: 400px;\r\n}\r\n\r\nhex-color-picker::part(saturation) {\r\n  height: 1rem;\r\n  border-radius: 1rem 1rem 0 0;\r\n}\r\n\r\nhex-color-picker::part(hue) {\r\n  flex: 0 0 1rem;\r\n  border-radius: 0 0 1rem 1rem;\r\n}\r\n\r\nhex-color-picker::part(saturation-pointer),\r\nhex-color-picker::part(hue-pointer) {\r\n  cursor: pointer;\r\n  border-radius: 50%;\r\n  width: 1rem;\r\n  height: 1rem;\r\n}\r\n\r\n\r\n.color-preview-container {\r\n  border: 1px solid;\r\n  border-radius: 5px;\r\n  width: 128px;\r\n  padding: 0px 4px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  .color-preview {\r\n    height: 24px;\r\n    width: 25px;\r\n    border-radius: 5px;\r\n  }\r\n}\r\n\r\n.btn-cancel {\r\n  color: var(--adstate-primary-800);\r\n  background: var(--adstate-primary-100);\r\n  border-radius: 8px;\r\n}\r\n\r\n.btn-done {\r\n  background: var(--adstate-primary-gradient);\r\n  border-radius: 8px;\r\n  color: var(--color-white);\r\n\r\n  &:hover {\r\n    color: var(--color-white);\r\n  }\r\n}\r\n\r\n.gradient-color-picker {\r\n  width: 276px;\r\n  height: 267px;\r\n}\r\n\r\n.second-gradient-color-picker {\r\n  margin-left: 3rem;\r\n}",
                    "styleUrl": "./color-picker.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"admin-card\">\r\n  <div class=\"title mb-2 d-flex justify-content-between\">\r\n    <div>\r\n      <i class=\"bi bi-palette\"></i> Colors picker\r\n    </div>\r\n\r\n    <i class=\"bi bi-x close\" (click)=\"onCancel()\"></i>\r\n\r\n  </div>\r\n\r\n  <div class=\"subtitle d-flex align-items-center\">\r\n\r\n    <div class=\"d-flex\" *ngIf=\"isGradientPicker else primaryColorValuePreview\">\r\n      <div class=\"d-flex\">\r\n        Gradient color 1:\r\n\r\n        <div class=\"color-preview-container ms-3\">\r\n          <div class=\"color-preview\" [style.background]=\"color\"></div>\r\n          <div class=\"ms-1\">{{ color }}</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"d-flex gradient-color-2 ms-5\">\r\n        Gradient color 2:\r\n\r\n        <div class=\"color-preview-container ms-3\">\r\n          <div class=\"color-preview\" [style.background]=\"secondColor\"></div>\r\n          <div class=\"ms-1\">{{ secondColor }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <ng-template #primaryColorValuePreview>\r\n\r\n      Primary color:\r\n\r\n      <div class=\"color-preview-container ms-3\">\r\n        <div class=\"color-preview\" [style.background]=\"color\"></div>\r\n        <div class=\"ms-1\">{{ color }}</div>\r\n      </div>\r\n    </ng-template>\r\n\r\n  </div>\r\n\r\n  <div class=\"mt-3 d-flex\" *ngIf=\"isGradientPicker else primaryPicker\">\r\n    <div class=\"me-3\">\r\n      <hex-color-picker class=\"gradient-color-picker\" [color]=\"color\" (color-changed)=\"handleColorChanged($event)\">\r\n      </hex-color-picker>\r\n    </div>\r\n\r\n    <div>\r\n      <hex-color-picker class=\"gradient-color-picker second-gradient-color-picker\" [color]=\"secondColor\"\r\n        (color-changed)=\"handleSecondColorChanged($event)\">\r\n      </hex-color-picker>\r\n    </div>\r\n  </div>\r\n\r\n  <ng-template #primaryPicker>\r\n    <div class=\"mt-3\">\r\n      <hex-color-picker [color]=\"color\" (color-changed)=\"handleColorChanged($event)\">\r\n      </hex-color-picker>\r\n    </div>\r\n  </ng-template>\r\n\r\n\r\n  <div class=\"mt-3\" *ngIf=\"!isGradientPicker\">\r\n    <p>Do your use a gradient? <span class=\"text-decoration-underline\" type=\"button\"\r\n        (click)=\"isGradientPicker = true\">Add a second color</span></p>\r\n  </div>\r\n\r\n  <div class=\"mt-5 d-flex align-items-center\"\r\n    [ngClass]=\"isGradientPicker ? 'justify-content-between' : 'justify-content-end'\">\r\n\r\n    <p *ngIf=\"isGradientPicker\" class=\"mb-0\">Don’t want a gradient?\r\n      <span class=\"text-decoration-underline\" type=\"button\" (click)=\"isGradientPicker = false\">Go back to one\r\n        color</span>\r\n    </p>\r\n\r\n    <div>\r\n      <button class=\"btn btn-cancel me-3\" (click)=\"onCancel()\">Cancel</button>\r\n      <button class=\"btn btn-done text-uppercase\" (click)=\"onDone()\">Done</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ColorsCardComponent",
            "id": "component-ColorsCardComponent-ae59f4135470edc6c7dbdb52b0e2f6b0",
            "file": "src/stories/colors/colors.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-color-card",
            "styleUrls": [
                "./colors.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./colors.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'#9540bf'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "darkFontChecked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "lightFontChecked",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "color",
                    "defaultValue": "'#9540bf'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "darkFontChecked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "lightFontChecked",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "modalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "handleColorChanged",
                    "args": [
                        {
                            "name": "event",
                            "type": "CustomEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "CustomEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDarkFontChange",
                    "args": [
                        {
                            "name": "isChecked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isChecked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDone",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onLightFontChange",
                    "args": [
                        {
                            "name": "isChecked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isChecked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openModal",
                    "args": [
                        {
                            "name": "template",
                            "type": "TemplateRef<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "template",
                            "type": "TemplateRef<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport 'vanilla-colorful';\r\n\r\n@Component({\r\n  selector: 'adstate-color-card',\r\n  templateUrl: './colors.html',\r\n  styleUrls: ['./colors.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport default class ColorsCardComponent {\r\n\r\n  @Input() color: string = '#9540bf';\r\n  @Input() lightFontChecked: boolean = true;\r\n  @Input() darkFontChecked: boolean = false;\r\n\r\n  modalRef: BsModalRef;\r\n\r\n  constructor(private modalService: BsModalService) { }\r\n\r\n  handleColorChanged(event: CustomEvent) {\r\n    this.color = event.detail.value;\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template);\r\n    this.modalRef.setClass('');\r\n  }\r\n\r\n  onDone(event) {\r\n    if (typeof event === 'string') {\r\n      this.color = event;\r\n    } else {\r\n      this.color = `linear-gradient(to right, ${event.color}, ${event.secondColor})`\r\n    }\r\n\r\n    const root = document.documentElement;\r\n    return root.style.setProperty('--adstate-primary-gradient', this.color);\r\n  }\r\n\r\n  onLightFontChange(isChecked: boolean) {\r\n    if (isChecked && this.darkFontChecked) {\r\n      this.lightFontChecked = true;\r\n      this.darkFontChecked = false;\r\n    }\r\n  }\r\n\r\n  onDarkFontChange(isChecked: boolean) {\r\n    if (isChecked && this.lightFontChecked) {\r\n      this.lightFontChecked = false;\r\n      this.darkFontChecked = true;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".admin-card {\r\n  background: var(--color-white);\r\n  box-shadow: var(--adstate-card-shadow);\r\n  border-radius: 1rem;\r\n  padding: 1rem 2rem;\r\n}\r\n\r\n.title {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.subtitle {\r\n  font-size: 1.25rem;\r\n}\r\n\r\n.color-picker {\r\n  width: max-content;\r\n  padding: 4px 8px;\r\n  border: 1px solid var(--adstate-primary-500);\r\n  border-radius: 8px;\r\n\r\n  #color-picker-wrapper {\r\n    border: none;\r\n    width: 24px;\r\n    height: 24px;\r\n    float: left;\r\n    background: var(--adstate-primary-gradient);\r\n    border-radius: 8px;\r\n  }\r\n}\r\n\r\n.modal-content {\r\n  width: max-content;\r\n  border-radius: 1rem;\r\n}\r\n\r\n",
                    "styleUrl": "./colors.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ng-template #template>\r\n\r\n  <adstate-color-picker \r\n      (close)=\"modalRef.hide()\"\r\n      (done)=\"onDone($event); modalRef.hide()\">\r\n    </adstate-color-picker>\r\n\r\n</ng-template>\r\n\r\n\r\n\r\n<div class=\"admin-card\">\r\n  <div class=\"title\">\r\n    Colors\r\n  </div>\r\n\r\n  <div class=\"subtitle\">\r\n    Change the lorem ipsum dolor sit amet. Setting are available lorem.\r\n  </div>\r\n\r\n  <div class=\"mt-3\">\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-4 d-flex align-items-center\">Primary color</div>\r\n      <div class=\"col-8\">\r\n        <div class=\"color-picker\" (click)=\"openModal(template)\">\r\n          <div id=\"color-picker-wrapper\">\r\n          </div>\r\n          <span class=\"ms-1\">Color picker</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row mt-3\">\r\n      <div class=\"col-4\">Light font</div>\r\n      <div class=\"col-8\">\r\n        <adstate-radio-select \r\n            [checked]=\"lightFontChecked\"\r\n            (isChecked)=\"onLightFontChange($event)\"\r\n            [background]=\"color\">\r\n        </adstate-radio-select>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row mt-3\">\r\n      <div class=\"col-4\">Dark font</div>\r\n      <div class=\"col-8\">\r\n        <adstate-radio-select \r\n            [checked]=\"darkFontChecked\"\r\n            (isChecked)=\"onDarkFontChange($event)\"\r\n            [background]=\"color\">\r\n        </adstate-radio-select>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ColorsComponent",
            "id": "component-ColorsComponent-1fbcbfcf6c0da8832982e66a46d04585",
            "file": "src/app/customization-admin/containers/colors/colors.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-colors",
            "styleUrls": [
                "./colors.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./colors.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-colors',\r\n  templateUrl: './colors.component.html',\r\n  styleUrls: ['./colors.component.scss']\r\n})\r\nexport class ColorsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".color-picker {\r\n  width: max-content;\r\n  padding: 2px 5px;\r\n  border: 1px solid var(--adstate-primary-500);\r\n  border-radius: 8px;\r\n\r\n  input[type=\"color\"] {\r\n    opacity: 0;\r\n    display: block;\r\n    width: 24px;\r\n    height: 24px;\r\n    border: none;\r\n  }\r\n\r\n  #color-picker-wrapper {\r\n    float: left;\r\n    background: var(--adstate-primary-500);\r\n    border-radius: 8px;\r\n  }\r\n\r\n}\r\n",
                    "styleUrl": "./colors.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-card>\r\n  <div cardTitle> Colors</div>\r\n  <div cardSubtitle>\r\n    Change the lorem ipsum dolor sit amet. Setting are available lorem.\r\n  </div>\r\n  <div cardBody>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-4\">Primary color</div>\r\n      <div class=\"col-8\">\r\n        <div class=\"color-picker\">\r\n          <div id=\"color-picker-wrapper\">\r\n            <input type=\"color\" value=\"#9540BF\" id=\"color-picker\">\r\n          </div>\r\n          <span class=\"ms-1\">Color picker</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row mt-3\">\r\n      <div class=\"col-4\">Light theme</div>\r\n      <div class=\"col-8\">\r\n        <app-checkbox [checked]=\"true\"></app-checkbox>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row mt-3\">\r\n      <div class=\"col-4\">Dark theme</div>\r\n      <div class=\"col-8\">\r\n        <app-checkbox [checked]=\"false\"></app-checkbox>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</app-card>\r\n"
        },
        {
            "name": "CustomAdminPanelComponent",
            "id": "component-CustomAdminPanelComponent-a5b07a471e733b55e801c2e6e22a22a5",
            "file": "src/app/customization-admin/containers/custom-admin-panel/custom-admin-panel.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-custom-admin-panel",
            "styleUrls": [
                "./custom-admin-panel.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./custom-admin-panel.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isChanged",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "isSaveSettings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChangeBannerImage",
                    "args": [
                        {
                            "name": "isChanged",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isChanged",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDiscardChanges",
                    "args": [
                        {
                            "name": "isDiscardChanges",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDiscardChanges",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSaveSettings",
                    "args": [
                        {
                            "name": "isSaveSettings",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isSaveSettings",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-custom-admin-panel',\r\n  templateUrl: './custom-admin-panel.component.html',\r\n  styleUrls: ['./custom-admin-panel.component.scss']\r\n})\r\nexport class CustomAdminPanelComponent implements OnInit {\r\n\r\n  isChanged: boolean;\r\n  isSaveSettings: boolean;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onChangeBannerImage(isChanged: boolean): void {\r\n    this.isChanged = isChanged;\r\n  }\r\n\r\n  onDiscardChanges(isDiscardChanges: boolean): void {\r\n    this.isChanged = !isDiscardChanges;\r\n  }\r\n\r\n  onSaveSettings(isSaveSettings: boolean): void {\r\n    this.isSaveSettings = isSaveSettings;\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".custom-panel {\r\n  margin-bottom: 5rem;\r\n}\r\n\r\n.save-settings {\r\n  position: fixed;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  bottom: 2rem;\r\n  width: 100%;\r\n  background-color: rgba(255, 255, 255, 0.3);\r\n  backdrop-filter: blur(1rem);\r\n}\r\n\r\n.others {\r\n  position: relative;\r\n  background: white;\r\n}\r\n",
                    "styleUrl": "./custom-admin-panel.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"mt-3 container custom-panel\">\r\n  <div class=\"row\">\r\n    <app-banner-image \r\n      [isDiscardChanges]=\"!isChanged\" \r\n      [isSaveSettings]=\"isSaveSettings\"\r\n      (isChanged)=\"onChangeBannerImage($event)\"\r\n      >\r\n    </app-banner-image>\r\n  </div>\r\n  <div class=\"row others\">\r\n\r\n    <div class=\" col-md-5 col-sm-12\">\r\n      <div>\r\n        <app-search></app-search>\r\n      </div>\r\n      <div class=\"mt-4\">\r\n        <app-colors></app-colors>\r\n      </div>\r\n      <div class=\"mt-4\">\r\n        <app-recent-deceased></app-recent-deceased>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-7 col-sm-12\">\r\n      <div>\r\n        <app-logotype></app-logotype>\r\n      </div>\r\n      <div class=\"mt-4\">\r\n        <app-layouts></app-layouts>\r\n      </div>\r\n      <div class=\"mt-4 mb-4\">\r\n        <app-snippet-link></app-snippet-link>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </div>\r\n</div>\r\n\r\n<div class=\"container w-100 d-flex justify-content-end\">\r\n\r\n  <div class=\"save-settings\" *ngIf=\"isChanged\">\r\n    <app-save-settings \r\n      (discardChanges)=\"onDiscardChanges($event)\"\r\n      (saveSettings)=\"onSaveSettings($event)\">\r\n    </app-save-settings>\r\n  </div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "CustomizationAdminPageComponent",
            "id": "component-CustomizationAdminPageComponent-cf01fd41cad672bc45a2df9d8a13c1a3",
            "file": "src/stories/customization-admin-page/customization-admin-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-customization-admin-page",
            "styleUrls": [
                "./customization-admin-page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./customization-admin-page.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isChanged",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isChanged",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "isSavedSuccess",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "onDiscardChanges",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSaveSettings",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'adstate-customization-admin-page',\r\n  templateUrl: './customization-admin-page.html',\r\n  styleUrls: ['./customization-admin-page.scss']\r\n})\r\nexport default class CustomizationAdminPageComponent {\r\n\r\n  @Input() isChanged: boolean = false;\r\n\r\n  isSavedSuccess: boolean = false;\r\n\r\n  onDiscardChanges(event) {\r\n    this.isChanged = false;\r\n    const root = document.documentElement;\r\n    return root.style.setProperty('--adstate-primary-gradient', `var(--color-purple-gradient-500)`);\r\n  }\r\n\r\n  onSaveSettings(event) { \r\n    this.isSavedSuccess = true;\r\n    setTimeout(() => {\r\n      this.isSavedSuccess = false;\r\n    }, 7000);\r\n  }\r\n\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".custom-panel {\r\n  margin-bottom: 5rem;\r\n}\r\n\r\n.others {\r\n  position: relative;\r\n  background: var(--color-white);\r\n  margin-bottom: 5rem;\r\n}\r\n\r\n.save-settings {\r\n  right: 6rem;\r\n}\r\n",
                    "styleUrl": "./customization-admin-page.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"mt-3 container custom-panel\">\r\n\r\n  <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"isSavedSuccess\">\r\n    Your settings is saved <i class=\"bi bi-hand-thumb-up\"></i>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <!-- <app-banner-image \r\n      [isDiscardChanges]=\"!isChanged\" \r\n      [isSaveSettings]=\"isSaveSettings\"\r\n      (isChanged)=\"onChangeBannerImage($event)\"\r\n      >\r\n    </app-banner-image> -->\r\n  </div>\r\n  <div class=\"row others\">\r\n\r\n    <div class=\" col-md-5 col-sm-12\">\r\n      <div>\r\n        <adstate-search-settings-card></adstate-search-settings-card>\r\n      </div>\r\n      <div class=\"mt-4\">\r\n        <adstate-color-card ></adstate-color-card>\r\n      </div>\r\n      <div class=\"my-4\">\r\n        <adstate-recent-deceased-card></adstate-recent-deceased-card>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-7 col-sm-12\">\r\n      <div>\r\n        <adstate-logo-type></adstate-logo-type>\r\n      </div>\r\n      <div class=\"mt-4\">\r\n        <adstate-layout-card></adstate-layout-card>\r\n      </div>\r\n      <div class=\"mt-4 mb-4\">\r\n        <adstate-snippet-link-card></adstate-snippet-link-card>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </div>\r\n\r\n  <div class=\"w-100 d-flex justify-content-end save-discard\">\r\n\r\n    <div *ngIf=\"isChanged\">\r\n      <adstate-save-discard-change \r\n          (discardChanges)=\"onDiscardChanges($event)\" \r\n          (saveSettings)=\"onSaveSettings($event)\">\r\n      </adstate-save-discard-change>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "CustomSearchControlComponent",
            "id": "component-CustomSearchControlComponent-1408a7c4c9022f20e4bd2cc3198311b2",
            "file": "src/stories/select/custom-search-control/custom-search-control.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-select-custom-search-control",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./custom-search-control.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hasIconForLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "hasIconForOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "icon",
                    "defaultValue": "'han'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "iconPlace",
                    "defaultValue": "Direction.Left",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "any"
                },
                {
                    "name": "selectedPerson",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "direction",
                    "defaultValue": "Direction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "hasIconForLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "hasIconForOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "icon",
                    "defaultValue": "'han'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "iconPlace",
                    "defaultValue": "Direction.Left",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "mockData",
                    "defaultValue": "from(import('../../assets/mockdata.json'))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "selectedPerson",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { from } from 'rxjs';\r\nimport { Direction } from 'src/stories/directions';\r\n\r\n@Component({\r\n  selector: 'adstate-select-custom-search-control',\r\n  templateUrl: './custom-search-control.html',\r\n})\r\nexport default class CustomSearchControlComponent {\r\n \r\n  @Input() hasIconForLabel: boolean;\r\n  @Input() hasIconForOption: boolean;\r\n  @Input() iconPlace = Direction.Left;\r\n  @Input() icon: string = 'han';\r\n  @Input() selectedPerson: any;\r\n  \r\n  mockData =  from(import('../../assets/mockdata.json'));\r\n\r\n  direction = Direction;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<ng-select [searchable]=\"false\" \r\n            [clearable]=\"false\"\r\n            [items]=\"(mockData | async).data\"\r\n            bindLabel=\"name\"\r\n            [(ngModel)]=\"selectedPerson\"\r\n            #select\r\n            >\r\n\r\n    <ng-template ng-header-tmp>\r\n        <input style=\"width: 100%; line-height: 24px\" type=\"text\" (input)=\"select.filter($event.target.value)\"/>\r\n    </ng-template>\r\n\r\n    <ng-template ng-label-tmp let-item=\"item\">\r\n      <i *ngIf=\"hasIconForLabel && iconPlace === direction.Left\" class=\"me-2 bi bi-{{ icon }}\"></i>\r\n\r\n      <span> {{ item.name }} </span>\r\n\r\n      <i *ngIf=\"hasIconForLabel && iconPlace === direction.Right\" class=\"ms-2 bi bi-{{ icon }}\"></i>\r\n    </ng-template>\r\n\r\n\r\n    <ng-template ng-option-tmp let-item=\"item\" let-index=\"index\" let-search=\"searchTerm\">\r\n      <i *ngIf=\"hasIconForOption && iconPlace === direction.Left\" class=\"me-2 bi bi-{{ icon }}\"></i>\r\n\r\n      <span> {{ item.name }} </span>\r\n\r\n      <i *ngIf=\"hasIconForOption && iconPlace === direction.Right\" class=\"ms-2 bi bi-{{ icon }}\"></i>\r\n  </ng-template>\r\n\r\n\r\n</ng-select>\r\n"
        },
        {
            "name": "CustomSearchInputComponent",
            "id": "component-CustomSearchInputComponent-1dfe5591579f8dd15f5aa95526759523",
            "file": "src/stories/search/custom-search-input/custom-search-input.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-custom-search-input",
            "styleUrls": [
                "./custom-search-input.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./custom-search-input.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hasIconForLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "hasIconForOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "icon",
                    "defaultValue": "'han'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "iconPlace",
                    "defaultValue": "Direction.Left",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "any"
                },
                {
                    "name": "selectedPeople",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "{}"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "direction",
                    "defaultValue": "Direction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "hasIconForLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "hasIconForOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "icon",
                    "defaultValue": "'han'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "iconPlace",
                    "defaultValue": "Direction.Left",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "mockData",
                    "defaultValue": "from(import('../../assets/mockdata.json'))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "selectedPeople",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "selectedPerson",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "addTagFn",
                    "args": [
                        {
                            "name": "name",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ name: any; tag: boolean; }",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onAddNewTag",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\r\nimport { from } from 'rxjs';\r\nimport { Direction } from 'src/stories/directions';\r\n\r\n@Component({\r\n  selector: 'adstate-custom-search-input',\r\n  templateUrl: './custom-search-input.html',\r\n  styleUrls: ['./custom-search-input.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport default class CustomSearchInputComponent {\r\n\r\n  @Input() hasIconForLabel: boolean;\r\n  @Input() hasIconForOption: boolean;\r\n  @Input() iconPlace = Direction.Left;\r\n  @Input() icon: string = 'han';\r\n  @Input() selectedPeople = [];\r\n\r\n  mockData = from(import('../../assets/mockdata.json'));\r\n  selectedPerson = [];\r\n  direction = Direction;\r\n\r\n  constructor() {\r\n    this.mockData.subscribe(dt => {\r\n      console.log(dt);\r\n    })\r\n  }\r\n\r\n  addTagFn(name) {\r\n    return { name: name, tag: true };\r\n  }\r\n\r\n  onAddNewTag(event) {\r\n    console.log('event', event);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".ng-select.custom-search-box {\r\n  .ng-select-container {\r\n    color: #692d87;\r\n    background-color: var(--color-white);\r\n    border-radius: 0px;\r\n    min-height: 36px;\r\n    align-items: center;\r\n    border-width: 0 0 2px 0;\r\n    font-weight: bold;\r\n    border-color: var(--color-grey);\r\n\r\n    .ng-value-container {\r\n      padding-left: 0;\r\n\r\n      .ng-value {\r\n        font-size: .9em;\r\n        margin-bottom: 5px;\r\n        background-color: var(--adstate-primary-200);\r\n        border-radius: 2px;\r\n        margin-right: 5px;\r\n      }\r\n\r\n      .ng-value-icon {\r\n        border-left: 1px solid var(--adstate-primary-200);\r\n\r\n        &:hover {\r\n          background-color: var(--adstate-primary-200);\r\n        }\r\n      }\r\n    }\r\n\r\n    .ng-placeholder {\r\n      font-weight: normal;\r\n    }\r\n  }\r\n\r\n  .ng-dropdown-panel {\r\n    .ng-option-marked {\r\n      background: var(--adstate-primary-200);\r\n    }\r\n\r\n    .ng-option-selected {\r\n      background-color: var(--adstate-primary-200);\r\n    }\r\n\r\n    .ng-optgroup,\r\n    .ng-option {\r\n      &.ng-option-selected {\r\n        background-color: var(--adstate-primary-200);\r\n      }\r\n\r\n      &.ng-option-marked {\r\n        background: var(--adstate-primary-200);\r\n      }\r\n\r\n      &:hover {\r\n        background: var(--adstate-primary-200);\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n\r\n.ng-select.custom-search-box .ng-arrow-wrapper {\r\n  display: none;\r\n}\r\n",
                    "styleUrl": "./custom-search-input.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 21
            },
            "templateData": "{{ mockData | async }}\r\n\r\n\r\n<ng-select \r\n        class=\"custom-search-box\"\r\n        placeholder=\"Enter a name, year or place\"\r\n        [items]=\"(mockData | async).data\"\r\n        [multiple]=\"true\"\r\n        bindLabel=\"name\"\r\n        bindValue=\"id\"\r\n        groupBy=\"gender\"\r\n        [clearSearchOnAdd]=\"true\"\r\n        [addTag]=\"addTagFn\"\r\n        [selectableGroup]=\"true\"\r\n        [selectableGroupAsModel]=\"false\"\r\n        [closeOnSelect]=\"false\"\r\n        [(ngModel)]=\"selectedPeople\"\r\n        (add)=\"onAddNewTag($event)\">\r\n        \r\n    <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\r\n        <span class=\"ng-value-label p-2\">\r\n            <i *ngIf=\"hasIconForLabel && iconPlace === direction.Left\" class=\"me-2 bi bi-{{ icon }}\"></i> \r\n            {{item.name}}\r\n            <i *ngIf=\"hasIconForLabel && iconPlace === direction.Right\" class=\"ms-2 bi bi-{{ icon }}\"></i>\r\n        </span>\r\n        <span class=\"ng-value-icon\" (click)=\"clear(item)\" aria-hidden=\"true\">\r\n            <i class=\"bi bi-x\"></i>\r\n        </span>\r\n    </ng-template>\r\n\r\n    <ng-template ng-optgroup-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\r\n        <i *ngIf=\"hasIconForOption && iconPlace === direction.Left\" class=\"me-2 text-primary bi bi-{{ icon }}\"></i> \r\n        <span class=\"text-primary\">{{item.gender | uppercase}}</span>\r\n        <i *ngIf=\"hasIconForOption && iconPlace === direction.Right\" class=\"ms-2 text-primary bi bi-{{ icon }}\"></i>\r\n    </ng-template>\r\n\r\n    <ng-template ng-option-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\r\n        <i *ngIf=\"hasIconForOption && iconPlace === direction.Left\" class=\"me-2 bi bi-{{ icon }}\"></i>\r\n        {{item.name}}\r\n        <i *ngIf=\"hasIconForOption && iconPlace === direction.Right\" class=\"ms-2 bi bi-{{ icon }}\"></i>\r\n    </ng-template>\r\n        \r\n</ng-select>"
        },
        {
            "name": "CustomSpecificComponent",
            "id": "component-CustomSpecificComponent-3c8d3594443d9b84d908f7003eac55f8",
            "file": "src/app/admin/custom-specific/custom-specific.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-custom-specific",
            "styleUrls": [
                "./custom-specific.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./custom-specific.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-custom-specific',\n  templateUrl: './custom-specific.component.html',\n  styleUrls: ['./custom-specific.component.scss']\n})\nexport class CustomSpecificComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".item {\r\n  width: 35px;\r\n  height: 35px;\r\n\r\n  background: #C4C4C4;\r\n  border: 1px solid #666666;\r\n  box-sizing: border-box;\r\n\r\n  border-radius: 50%;\r\n  margin: 7px;\r\n}\r\n",
                    "styleUrl": "./custom-specific.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"d-flex mt-4\">\n  <div class=\"item\"></div>\n  <div class=\"item\"></div>\n  <div class=\"item\"></div>\n  <div class=\"item\"></div>\n</div>\n\n<div class=\"d-flex\">\n  <div class=\"item\"></div>\n  <div class=\"item\"></div>\n  <div class=\"item\"></div>\n  <div class=\"item\"></div>\n</div>\n\n<div class=\"d-flex\">\n  <div class=\"item\"></div>\n  <div class=\"item\"></div>\n  <div class=\"item\"></div>\n  <div class=\"item\"></div>\n</div>\n"
        },
        {
            "name": "DateRangeComponent",
            "id": "component-DateRangeComponent-ad5f29742191861775813a5285535f05",
            "file": "src/app/memorial/components/date-range/date-range.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-date-range",
            "styleUrls": [
                "./date-range.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./date-range.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "labelForId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "locale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "datePickerConfig",
                    "defaultValue": "{\r\n    rangeInputFormat: this.rangeInputFormat,\r\n    containerClass: 'theme-adstate',\r\n    showClearButton: true\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "datepickerPlacement",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "isInvalidDate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "labelForId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "locale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "maskInput",
                    "defaultValue": "'00/00/0000 - 00/00/0000'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "rangeInputFormat",
                    "defaultValue": "'DD/MM/YYYY'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "today",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "wrongDateFormatMessage",
                    "defaultValue": "'Invalid date'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onTypingDate",
                    "args": [
                        {
                            "name": "birthdateRangeValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "birthdateRangeValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onValueChange",
                    "args": [
                        {
                            "name": "fromToArray",
                            "type": "Array<Date>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fromToArray",
                            "type": "Array<Date>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validate",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ValidationErrors | null",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnChanges, Self, SimpleChanges} from '@angular/core';\r\nimport {ControlValueAccessor, ValidationErrors, Validator, NgControl} from '@angular/forms';\r\n\r\nimport {DateHelperService} from '../../services/date-helper';\r\nimport {BsLocaleService} from 'ngx-bootstrap/datepicker';\r\nimport {defineLocale} from 'ngx-bootstrap/chronos';\r\nimport {TranslocoService} from '@ngneat/transloco';\r\n\r\n@Component({\r\n  selector: 'app-date-range',\r\n  templateUrl: './date-range.component.html',\r\n  styleUrls: ['./date-range.component.scss']\r\n})\r\nexport class DateRangeComponent implements OnChanges, ControlValueAccessor, Validator {\r\n\r\n  @Input() locale: string;\r\n  @Input() labelForId?: string;\r\n  @Input() placeholder: string;\r\n\r\n  wrongDateFormatMessage = 'Invalid date';\r\n  rangeInputFormat = 'DD/MM/YYYY';\r\n  maskInput = '00/00/0000 - 00/00/0000';\r\n\r\n  datePickerConfig = {\r\n    rangeInputFormat: this.rangeInputFormat,\r\n    containerClass: 'theme-adstate',\r\n    showClearButton: true\r\n  };\r\n  datepickerPlacement = 'bottom';\r\n\r\n  isInvalidDate = false;\r\n  today = new Date();\r\n  value = '';\r\n\r\n  constructor(\r\n    @Self() private controlDir: NgControl,\r\n    private dateHelper: DateHelperService,\r\n    private localeService: BsLocaleService,\r\n    private translationService: TranslocoService\r\n  ) {\r\n    this.controlDir.valueAccessor = this;\r\n    this.translationService.langChanges$.subscribe(lang => {\r\n\r\n      import(`ngx-bootstrap/chronos/esm2015/`)\r\n        .then(locale => {\r\n          const localeKey = Object.keys(locale).find(key => {\r\n            return key.endsWith(lang + 'Locale');\r\n          });\r\n          defineLocale(lang, locale[localeKey]);\r\n          this.localeService.use(lang);\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.value = value;\r\n  }\r\n\r\n  validate(value: any): ValidationErrors | null {\r\n    return null;\r\n  }\r\n\r\n  onTypingDate(birthdateRangeValue: string): void {\r\n    const dateRangeValue = this.dateHelper.getDateRangeFromString(birthdateRangeValue);\r\n\r\n    this.controlDir.control.setValue(birthdateRangeValue);\r\n\r\n    if (!dateRangeValue) {\r\n      this.isInvalidDate = true;\r\n      return;\r\n    }\r\n\r\n    this.isInvalidDate = false;\r\n  }\r\n\r\n  onValueChange(fromToArray: Array<Date>): void {\r\n    if (fromToArray) {\r\n      const bornFrom = this.dateHelper.getStringFromDate(fromToArray[0]);\r\n      const bornTo = this.dateHelper.getStringFromDate(fromToArray[1]);\r\n\r\n      this.isInvalidDate = false;\r\n      this.value = `${bornFrom} - ${bornTo}`;\r\n      this.controlDir.control.setValue(this.value);\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".born-input {\r\n  max-width: 0;\r\n  padding: 0.1px;\r\n  border: none;\r\n}\r\n\r\n.form-control {\r\n  border-right: 0;\r\n}\r\n\r\n.input-group-text {\r\n  background: #ffffff;\r\n  border-left: 0;\r\n}",
                    "styleUrl": "./date-range.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "controlDir",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dateHelper",
                        "type": "DateHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "localeService",
                        "type": "BsLocaleService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translationService",
                        "type": "TranslocoService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "controlDir",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dateHelper",
                        "type": "DateHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "localeService",
                        "type": "BsLocaleService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translationService",
                        "type": "TranslocoService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnChanges",
                "ControlValueAccessor",
                "Validator"
            ],
            "templateData": "<div class=\"input-group mb-1 adstate-input\">\r\n  <input [attr.id]=\"labelForId ? labelForId : null\"\r\n         placeholder=\"{{ placeholder }}\"\r\n         class=\"form-control shadow-none\"\r\n         [ngClass]=\"{'border-danger': isInvalidDate}\"\r\n\r\n         mask=\"{{ maskInput }}\"\r\n         [leadZeroDateTime]=\"true\"\r\n\r\n         bsDaterangepicker\r\n         #datePicker=\"bsDaterangepicker\"\r\n         placement=\"{{ datepickerPlacement }}\"\r\n         (change)=\"onTypingDate($event.target.value)\"\r\n         (bsValueChange)=\"onValueChange($event)\"\r\n         [bsConfig]=\"datePickerConfig\"\r\n         [maxDate]=\"today\"\r\n         data-cy=\"date-range-input\"\r\n        >\r\n\r\n  <span class=\"input-group-text\" (click)=\"datePicker.show()\" data-cy=\"date-range-button-trigger\">\r\n    <i class=\"bi bi-calendar4\"></i>\r\n  </span>\r\n</div>\r\n\r\n<div *ngIf=\"isInvalidDate\">\r\n  <small class=\"text-danger ms-1\"> {{ wrongDateFormatMessage }} </small>\r\n</div>\r\n"
        },
        {
            "name": "DefaultLayoutComponent",
            "id": "component-DefaultLayoutComponent-aef2b3afb05773626e98ccfd11074e15",
            "file": "src/app/layout/default-layout/default-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-default-layout",
            "styleUrls": [
                "./default-layout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./default-layout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "environment",
                    "defaultValue": "environment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { environment} from '@app/env';\r\n\r\n@Component({\r\n  selector: 'app-default-layout',\r\n  templateUrl: './default-layout.component.html',\r\n  styleUrls: ['./default-layout.component.scss']\r\n})\r\nexport class DefaultLayoutComponent implements OnInit {\r\n\r\n  environment = environment;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./default-layout.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div *ngIf=\"!environment.production\">\r\n  <app-header></app-header>\r\n</div>\r\n\r\n<router-outlet></router-outlet>\r\n"
        },
        {
            "name": "DropDownComponent",
            "id": "component-DropDownComponent-bc21b8c1f72095a6e68d0eb18ae0717f",
            "file": "src/stories/dropdown/dropdown.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-dropdown",
            "styleUrls": [
                "./dropdown.scss"
            ],
            "styles": [],
            "template": "    <div class=\"btn-group\" dropdown placement=\"bottom right\">\n\n  <button id=\"button-basic\" dropdownToggle\n          type=\"button\"\n          class=\"btn btn-outline-secondary dropdown-toggle\"\n          aria-controls=\"dropdown-basic\">\n    {{ label }}\n  </button>\n\n  <ul id=\"dropdown-basic\" *dropdownMenu\n      class=\"dropdown-menu dropdown-menu-right\"\n      role=\"menu\"\n      [style.transform]=\"'translateY(0.5rem)'\"\n      aria-labelledby=\"button-basic\">\n    <li role=\"menuitem\" *ngFor=\"let item of items\">\n      <div class=\"dropdown-item\">\n\n        <i *ngIf=\"item.hasIcon && iconPlace === direction.Left\" class=\"bi bi-{{ icon }}\"></i>\n\n        <span class=\"mx-2\"> {{ item.value }} </span>\n\n        <i *ngIf=\"item.hasIcon && iconPlace === direction.Right\" class=\"bi bi-{{ icon }}\"></i>\n      </div>\n    </li>\n  </ul>\n\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "'hand-thumbs-up'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string"
                },
                {
                    "name": "iconPlace",
                    "defaultValue": "Direction.Left",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "any"
                },
                {
                    "name": "items",
                    "defaultValue": "[\r\n    {\r\n      value: 'Hello',\r\n      hasIcon: true\r\n    },\r\n    {\r\n      value: 'Action',\r\n      hasIcon: true\r\n    },\r\n    {\r\n      value: 'Some more action',\r\n      hasIcon: true\r\n    }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "Array<any>"
                },
                {
                    "name": "label",
                    "defaultValue": "'Dropdown'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "direction",
                    "defaultValue": "Direction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "icon",
                    "defaultValue": "'hand-thumbs-up'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "iconPlace",
                    "defaultValue": "Direction.Left",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "items",
                    "defaultValue": "[\r\n    {\r\n      value: 'Hello',\r\n      hasIcon: true\r\n    },\r\n    {\r\n      value: 'Action',\r\n      hasIcon: true\r\n    },\r\n    {\r\n      value: 'Some more action',\r\n      hasIcon: true\r\n    }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<any>",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "label",
                    "defaultValue": "'Dropdown'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\r\nimport { Direction } from '../directions';\r\n\r\n@Component({\r\n  selector: 'adstate-dropdown',\r\n  template: `    \r\n      <div class=\"btn-group\" dropdown placement=\"bottom right\">\r\n\r\n        <button id=\"button-basic\" dropdownToggle \r\n                type=\"button\" \r\n                class=\"btn btn-outline-secondary dropdown-toggle\"\r\n                aria-controls=\"dropdown-basic\">\r\n          {{ label }}\r\n        </button>\r\n        \r\n        <ul id=\"dropdown-basic\" *dropdownMenu \r\n            class=\"dropdown-menu dropdown-menu-right\"\r\n            role=\"menu\"\r\n            [style.transform]=\"'translateY(0.5rem)'\"\r\n            aria-labelledby=\"button-basic\">\r\n          <li role=\"menuitem\" *ngFor=\"let item of items\">\r\n            <div class=\"dropdown-item\">\r\n\r\n              <i *ngIf=\"item.hasIcon && iconPlace === direction.Left\" class=\"bi bi-{{ icon }}\"></i>\r\n\r\n              <span class=\"mx-2\"> {{ item.value }} </span>\r\n\r\n              <i *ngIf=\"item.hasIcon && iconPlace === direction.Right\" class=\"bi bi-{{ icon }}\"></i>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n\r\n      </div>\r\n    `,\r\n  styleUrls: ['./dropdown.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport default class DropDownComponent { \r\n\r\n  direction = Direction;\r\n\r\n  @Input() label: string = 'Dropdown';\r\n  @Input() icon: string = 'hand-thumbs-up';\r\n  @Input() iconPlace = Direction.Left;\r\n  @Input() items: Array<any> = [\r\n    {\r\n      value: 'Hello',\r\n      hasIcon: true\r\n    },\r\n    {\r\n      value: 'Action',\r\n      hasIcon: true\r\n    },\r\n    {\r\n      value: 'Some more action',\r\n      hasIcon: true\r\n    }\r\n  ];\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn:focus {\r\n  outline: none;\r\n  box-shadow: none;\r\n}\r\n\r\n.dropdown-toggle {\r\n  height: 35px;\r\n  box-shadow: none;\r\n}\r\n",
                    "styleUrl": "./dropdown.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "FilterComponent",
            "id": "component-FilterComponent-6475f3b880989680210f8a8d4d5f31d4",
            "file": "src/app/memorial/components/filter/filter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-filter",
            "styleUrls": [
                "./filter.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./filter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "items",
                    "defaultValue": "[\r\n    'Memorial page',\r\n    'Have donations',\r\n    'Has death notice',\r\n    'Has flower shop',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "label",
                    "defaultValue": "'Filter'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-filter',\r\n  templateUrl: './filter.component.html',\r\n  styleUrls: ['./filter.component.scss']\r\n})\r\nexport class FilterComponent implements OnInit {\r\n\r\n  label = 'Filter';\r\n\r\n  items = [\r\n    'Memorial page',\r\n    'Have donations',\r\n    'Has death notice',\r\n    'Has flower shop',\r\n  ]\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn {\r\n  border-top-right-radius: 0.5rem;\r\n  border-bottom-right-radius: 0.5rem;\r\n}\r\n\r\n.btn-filter {\r\n  border-radius: 0.5rem;\r\n  border: 1px solid #592673;\r\n  padding: 0rem 0.5rem;\r\n  color: #592673;\r\n}\r\n\r\n\r\n.btn-filter:hover {\r\n  background: rgb(244 236 249);\r\n  border: 1px solid #59267308;\r\n  color: #592673;\r\n  box-shadow: none;\r\n  filter: drop-shadow(-2px 4px 2px rgb(244 236 249));\r\n}\r\n\r\n.btn-filter:focus {\r\n  background: #9540BF;\r\n  border: 1px solid #59267308;\r\n  color: #ffffff;\r\n  box-shadow: none;\r\n  filter: drop-shadow(-2px 4px 2px #f4ecf9);\r\n}\r\n\r\n\r\n.dropdown-item:hover {\r\n  cursor: pointer;\r\n  background: rgb(244 236 249);\r\n}\r\n\r\n.dropdown-menu {\r\n  top: 2rem !important;\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n  border-radius: 14px;\r\n}\r\n\r\n\r\n/* Custom checkbox input */\r\n.item {\r\n  display: block;\r\n  position: relative;\r\n  padding-left: 25px;\r\n  cursor: pointer;\r\n  color: #000000\r\n}\r\n\r\n.item input {\r\n  position: absolute;\r\n  opacity: 0;\r\n  cursor: pointer;\r\n  height: 0;\r\n  width: 0;\r\n}\r\n\r\n.check-mark {\r\n  position: absolute;\r\n  top: 4px;\r\n  left: 0;\r\n  height: 16px;\r\n  width: 16px;\r\n  border: 1px solid #592673;\r\n  border-radius: 3px;\r\n}\r\n\r\n.item:hover input ~ .check-mark {\r\n  background-color: rgb(244 236 249);;  \r\n}\r\n\r\n.item input:checked ~ .check-mark {\r\n  background-color: #592673;\r\n}\r\n\r\n.check-mark:after {\r\n  content: \"\";\r\n  position: absolute;\r\n  display: none;\r\n}\r\n\r\n.item input:checked ~ .check-mark:after {\r\n  display: block;\r\n}\r\n\r\n.item .check-mark:after {\r\n  left: 4px;\r\n  top: 1px;\r\n  width: 5px;\r\n  height: 10px;\r\n  border: solid white;\r\n  border-width: 0 2px 2px 0;\r\n  transform: rotate(45deg);\r\n}\r\n",
                    "styleUrl": "./filter.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"position-relative\" dropdown [insideClick]=\"true\">\r\n\r\n  <button id=\"button-filter\" dropdownToggle \r\n          type=\"button\" \r\n          class=\"btn btn-filter\"\r\n          aria-controls=\"dropdown-filter\">\r\n    {{ label }}  <i class=\"bi bi-funnel\"></i>\r\n  </button>\r\n\r\n  <ul id=\"dropdown-filter\" *dropdownMenu \r\n      class=\"dropdown-menu\"\r\n      role=\"menu\" \r\n      aria-labelledby=\"button-filter\">\r\n    <li role=\"menuitem\" *ngFor=\"let item of items; let i = index\">\r\n      <div class=\"dropdown-item\">\r\n\r\n      <label class=\"item\">\r\n        <input class=\"checkbox\" \r\n               id=\"item-{{i}}\" \r\n               type=\"checkbox\">\r\n        <span class=\"check-mark\"></span>\r\n        {{ item }}\r\n      </label>\r\n      </div>\r\n    </li>\r\n  </ul>\r\n\r\n  </div>"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-868f3962f21c76b835aad91a76be5501",
            "file": "src/app/memorial/components/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [
                "./footer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".footer {\r\n  height: 225px;\r\n  width: 100%;\r\n  background: #26343E;\r\n\r\n  .logo-thumbnail {\r\n    height: 165px;\r\n  }\r\n\r\n}\r\n",
                    "styleUrl": "./footer.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"footer\">\n  <div class=\"d-flex align-items-center justify-content-center pt-3\">\n    <div class=\"text-white\">\n      Lorem ipsum | Lorem ipsum\n    </div>\n    <img class=\"logo-thumbnail mx-4\"\n         src=\"https://image.freepik.com/free-vector/cartoon-cool-polar-bear_10308-163.jpg\">\n    <div class=\"text-white\">\n      Lorem ipsum | Lorem ipsum\n    </div>\n  </div>\n\n  <div class=\"d-flex justify-content-center my-3\">\n    <i class=\"bi bi-instagram text-white mr-3\"></i>\n    <i class=\"bi bi-facebook text-white\"></i>\n  </div>\n\n</div>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-dd22016305806062b75ac7eb4230882d",
            "file": "src/app/layout/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "flags",
                    "defaultValue": "[\r\n    {value: 'cs', label: 'Česky'},\r\n    {value: 'da', label: 'Dansk'},\r\n    {value: 'nl', label: 'Nederlands'},\r\n    {value: 'en', label: 'English'},\r\n    {value: 'de', label: 'Deutsch'},\r\n    {value: 'nb', label: 'Norsk'},\r\n    {value: 'sk', label: 'Slovensky'},\r\n    {value: 'sv', label: 'Svenska'},\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "isLoggedIn$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "selectedLanguageId",
                    "defaultValue": "'en'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "translationService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslocoService",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "changeLanguage",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getUser",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<KeycloakProfile>",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\r\n\r\nimport {from, Observable, of} from 'rxjs';\r\nimport {KeycloakService} from 'keycloak-angular';\r\nimport {KeycloakProfile} from 'keycloak-js';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {TranslocoService} from '@ngneat/transloco';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  isLoggedIn$: Observable<boolean>;\r\n  user: any;\r\n\r\n  flags = [\r\n    {value: 'cs', label: 'Česky'},\r\n    {value: 'da', label: 'Dansk'},\r\n    {value: 'nl', label: 'Nederlands'},\r\n    {value: 'en', label: 'English'},\r\n    {value: 'de', label: 'Deutsch'},\r\n    {value: 'nb', label: 'Norsk'},\r\n    {value: 'sk', label: 'Slovensky'},\r\n    {value: 'sv', label: 'Svenska'},\r\n  ];\r\n\r\n  selectedLanguageId = 'en';\r\n\r\n  constructor(\r\n    private readonly keycloak: KeycloakService,\r\n    public translationService: TranslocoService\r\n  ) {\r\n    this.getUser()\r\n      .pipe(\r\n        catchError(e => {\r\n          console.log('The user profile was not loaded as the user is not logged in');\r\n          return of(e);\r\n        })\r\n      )\r\n      .subscribe(value => {\r\n        this.user = value;\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoggedIn$ = from(this.keycloak.isLoggedIn());\r\n  }\r\n\r\n  getUser(): Observable<KeycloakProfile> {\r\n    return from(this.keycloak.loadUserProfile());\r\n  }\r\n\r\n  login(): Promise<void> {\r\n    return this.keycloak.login();\r\n  }\r\n\r\n  logout(): Promise<void> {\r\n    return this.keycloak.logout();\r\n  }\r\n\r\n  changeLanguage(event): void {\r\n    this.translationService.setActiveLang(event.value);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".logo {\r\n  height: 50px;\r\n  cursor: pointer;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n}\r\n\r\n.language-select {\r\n  width: 10rem;\r\n}\r\n\r\n.menu {\r\n  z-index: 2;\r\n  position: absolute;\r\n  width: fit-content;\r\n  right: 0;\r\n\r\n  .menu-group {\r\n    float: right;\r\n  }\r\n}\r\n\r\n.main-menu-button {\r\n  border-radius: 0.5rem;\r\n}\r\n\r\n.dropdown-item {\r\n  cursor: pointer;\r\n}\r\n\r\n.visually-hidden-focusable {\r\n  left: -100%;\r\n  position: absolute;\r\n  top: 0;\r\n  width: 1px;\r\n  height: 1px;\r\n  overflow: hidden;\r\n  z-index: -999;\r\n}\r\n\r\n#skip-to-main-content:focus,\r\n#skip-to-main-content:active {\r\n  display: inline-block;\r\n  top: 1em;\r\n  left: 1em;\r\n  width: auto;\r\n  height: auto;\r\n  margin: auto;\r\n  padding: 0.8em 1.6em;\r\n  text-align: center;\r\n  border-radius: 0.4em;\r\n  z-index: 999;\r\n  color: #fff;\r\n  background-color: var(--bs-primary);\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  font-weight: 700;\r\n}\r\n",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "keycloak",
                        "type": "KeycloakService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translationService",
                        "type": "TranslocoService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "keycloak",
                        "type": "KeycloakService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translationService",
                        "type": "TranslocoService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<a id=\"skip-to-main-content\" class=\"visually-hidden-focusable\" href=\"#main-content\">\r\n  {{ 'portalPage.header.skipToMain' | transloco }}\r\n</a>\r\n<nav class=\"container-fluid d-flex justify-content-between align-items-center pt-3\">\r\n  <div>\r\n    <img routerLink=\"/\" src=\"assets/images/logo.png\" class=\"logo\"\r\n         [alt]=\"'portalPage.header.logo.alt' | transloco\">\r\n    <h1 class=\"visually-hidden\">\r\n      {{ 'portalPage.header.pageName' | transloco }}\r\n    </h1>\r\n  </div>\r\n\r\n  <div class=\"d-flex align-items-centers\">\r\n    <div class=\"me-3\">\r\n\r\n      <app-language-select [defaultLanguage]=\"'en'\"></app-language-select>\r\n\r\n      <!-- <ng-select [attr.aria-label]=\"'portalPage.i18n.languageSelector' | transloco\"\r\n                 class=\"language-select\" appearance=\"outline\"\r\n                 data-cy=\"language-switcher\"\r\n                 [(ngModel)]=\"selectedLanguageId\"\r\n                 (change)=\"changeLanguage($event)\"\r\n                 [items]=\"flags\"\r\n                 [searchable]=\"true\"\r\n                 [clearable]=\"false\"\r\n                 bindValue=\"value\"\r\n                 bindLabel=\"label\">\r\n      </ng-select> -->\r\n    </div>\r\n\r\n    <div class=\"btn-group\" dropdown placement=\"bottom right\">\r\n\r\n      <button id=\"main-menu-button\" dropdownToggle type=\"button\"\r\n              data-cy=\"mainMenu\"\r\n              class=\"btn btn-outline-primary main-menu-button dropdown-toggle\"\r\n              aria-controls=\"dropdown-animated\">\r\n        Main menu <span class=\"caret\"></span>\r\n      </button>\r\n      <ul id=\"dropdown-animated\" *dropdownMenu class=\"dropdown-menu dropdown-menu-right\"\r\n          role=\"menu\" aria-labelledby=\"main-menu-button\">\r\n        <li role=\"menuitem\"><a class=\"dropdown-item\"><strong\r\n          data-cy=\"loggedInUsername\">{{ user?.username }}</strong></a></li>\r\n\r\n        <li role=\"menuitem\"><a class=\"dropdown-item\" href=\"#\">To the funeral home page</a></li>\r\n        <li role=\"menuitem\"><a class=\"dropdown-item\" href=\"#\">Donation to other deaths</a></li>\r\n        <li role=\"menuitem\"><a class=\"dropdown-item\" href=\"#\">About portal</a></li>\r\n        <li role=\"menuitem\"><a class=\"dropdown-item\" href=\"#\">Terms</a></li>\r\n        <li role=\"menuitem\"><a class=\"dropdown-item\" href=\"#\">Privacy policy</a></li>\r\n        <li role=\"menuitem\"><a class=\"dropdown-item\" href=\"#\">Cookie policy</a></li>\r\n        <li role=\"menuitem\">\r\n          <a class=\"dropdown-item\" routerLink=\"/custom-admin\">\r\n            Custom admin\r\n          </a>\r\n        </li>\r\n\r\n        <ng-container *ngIf=\"isLoggedIn$ | async\">\r\n          <li role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin\">Setting theme</a></li>\r\n          <li role=\"menuitem\"><a class=\"dropdown-item\" data-cy=\"actionAfterLogin\">Another action</a></li>\r\n        </ng-container>\r\n\r\n        <li role=\"menuitem\">\r\n          <button class=\"dropdown-item\" (click)=\"login()\" *ngIf=\"!(isLoggedIn$ | async)\"\r\n                  data-cy=administratorLogin\r\n          >\r\n            <i class=\"bi bi-box-arrow-in-right\"></i>\r\n            Administrator Login\r\n          </button>\r\n\r\n          <button class=\"dropdown-item\" (click)=\"logout()\" *ngIf=\"isLoggedIn$ | async\">\r\n            <i class=\"bi bi-lock\"></i> <span data-cy=\"logout\">Logout</span>\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n\r\n  </div>\r\n</nav>\r\n<div id=\"main-content\"></div>\r\n"
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-effc4a9fa2b79d9bd3919a9974a16d5c",
            "file": "src/stories/icon/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-icon",
            "styleUrls": [
                "./icon.scss"
            ],
            "styles": [],
            "template": "<div class=\"user-list-item-feature\"\n     [ngClass]=\"{'disabled': isDisabled}\">\n    <a class=\"icon-link\"\n       disabled=\"isDisabled\"\n       href=\"{{ linkHref }}\"\n       target=\"_blank\"\n       [attr.aria-label]=\"label\"\n       [style.pointerEvents]=\"isDisabled ? 'none' : 'inherit'\"\n       >\n      <img class=\"icon-image\"\n           [ngStyle]=\"getStyles()\"\n           [src]=\"icon\" alt=\"icon\">\n      <span class=\"icon-label\"> {{ label }} </span>\n    </a>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "background",
                    "defaultValue": "'var(--adstate-primary-800)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "number"
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "isDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "linkHref",
                    "defaultValue": "'https://omp.adstate.net/memorial_page/memorial_page_personal_info.php?order_id=3767242&set_site_id=120&cat=home&sign=25cb3926af715015bf4a17eff22b8025'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string"
                },
                {
                    "name": "unit",
                    "defaultValue": "'rem'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "background",
                    "defaultValue": "'var(--adstate-primary-800)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "isDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "linkHref",
                    "defaultValue": "'https://omp.adstate.net/memorial_page/memorial_page_personal_info.php?order_id=3767242&set_site_id=120&cat=home&sign=25cb3926af715015bf4a17eff22b8025'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "unit",
                    "defaultValue": "'rem'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getStyles",
                    "args": [],
                    "optional": false,
                    "returnType": "{ width: string; height: string; backgroundColor: string; }",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "hexToRgba",
                    "args": [
                        {
                            "name": "hexStringColor",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "hexStringColor",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-icon',\r\n  template: `    \r\n    <div class=\"user-list-item-feature\"\r\n         [ngClass]=\"{'disabled': isDisabled}\">\r\n        <a class=\"icon-link\" \r\n           disabled=\"isDisabled\"\r\n           href=\"{{ linkHref }}\"\r\n           target=\"_blank\"\r\n           [attr.aria-label]=\"label\"\r\n           [style.pointerEvents]=\"isDisabled ? 'none' : 'inherit'\"\r\n           >\r\n          <img class=\"icon-image\"\r\n               [ngStyle]=\"getStyles()\"\r\n               [src]=\"icon\" alt=\"icon\">\r\n          <span class=\"icon-label\"> {{ label }} </span>\r\n        </a>\r\n    </div>\r\n    `,\r\n  styleUrls: ['./icon.scss'],\r\n})\r\nexport default class IconComponent {\r\n  @Input() icon: string;\r\n  @Input() isDisabled: boolean;\r\n  @Input() label: string;\r\n  @Input() background: string = 'var(--adstate-primary-800)';\r\n  @Input() height: number;\r\n  @Input() width: number;\r\n  @Input() unit: string = 'rem';\r\n  @Input() linkHref: string = 'https://omp.adstate.net/memorial_page/memorial_page_personal_info.php?order_id=3767242&set_site_id=120&cat=home&sign=25cb3926af715015bf4a17eff22b8025';\r\n\r\n  getStyles() {\r\n    return {\r\n      width: `${this.width}${this.unit}`,\r\n      height: `${this.height}${this.unit}`,\r\n      backgroundColor: this.isDisabled ? this.hexToRgba(this.background) : this.background\r\n    }\r\n  }\r\n\r\n  hexToRgba(hexStringColor: string): string {\r\n\r\n    const rgbaColor = hexStringColor.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i\r\n      , (m, r, g, b) => '#' + r + r + g + g + b + b)\r\n      .substring(1).match(/.{2}/g)\r\n      .map(x => parseInt(x, 16));\r\n\r\n\r\n    return `rgba(${rgbaColor[0]}, ${rgbaColor[1]}, ${rgbaColor[2]}, 0.28)`\r\n\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".user-list-item-feature {\r\n\r\n  &:hover,\r\n  &:focus-within {\r\n    opacity: 0.9;\r\n  }\r\n\r\n  .icon-link {\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-decoration: none;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    &:disabled {\r\n      cursor: default;\r\n      color: inherit;\r\n      pointer-events: none;\r\n    }\r\n  }\r\n\r\n  .icon-label {\r\n    margin-top: 0.4rem;\r\n    font-size: 0.8em;\r\n    line-height: 1;\r\n    text-align: center;\r\n    white-space: nowrap;\r\n  }\r\n\r\n  .icon-image {\r\n    padding: 0.5em;\r\n    width: 3.2em;\r\n    height: 3.2em;\r\n    background-color: var(--bs-primary);\r\n    border-radius: 100%;\r\n  }\r\n\r\n\r\n  &.disabled {\r\n    .icon-image {\r\n      background-color: rgba(89, 38, 115, 0.28);\r\n    }\r\n\r\n    .icon-label {\r\n      color: var(--adstate-shade-dark-grey);\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./icon.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "ImageUploadComponent",
            "id": "component-ImageUploadComponent-e05d70eb70d87678187720606a362811",
            "file": "src/app/customization-admin/components/image-upload/image-upload.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-image-upload",
            "styleUrls": [
                "./image-upload.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./image-upload.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "imageChangedEvent",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "any"
                },
                {
                    "name": "isSaveSettings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "croppedImage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "imageChangedEvent",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "isSaveSettings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "imageCropped",
                    "args": [
                        {
                            "name": "event",
                            "type": "ImageCroppedEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "ImageCroppedEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ImageCroppedEvent } from 'ngx-image-cropper';\r\n\r\n\r\n@Component({\r\n  selector: 'app-image-upload',\r\n  templateUrl: './image-upload.component.html',\r\n  styleUrls: ['./image-upload.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ImageUploadComponent implements OnInit {\r\n\r\n  @Input() imageChangedEvent: any = '';\r\n  @Input() isSaveSettings: boolean;\r\n\r\n  croppedImage: string = '';\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  imageCropped(event: ImageCroppedEvent): void {\r\n    this.croppedImage = event.base64;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./image-upload.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\r\n  <img *ngIf=\"!imageChangedEvent && croppedImage\" \r\n        src=\"{{croppedImage}}\" alt=\"\"\r\n        class=\"w-100\">\r\n  \r\n  <image-cropper \r\n    *ngIf=\"imageChangedEvent\"\r\n    class=\"p-0\"\r\n    format=\"png\"\r\n    [imageChangedEvent]=\"imageChangedEvent\"\r\n    [alignImage]=\"'left'\"\r\n    [maintainAspectRatio]=\"true\"\r\n    [hideResizeSquares]=\"true\"\r\n    [aspectRatio]=\"16 / 6\"\r\n    [autoCrop]=\"true\"\r\n    \r\n    (imageCropped)=\"imageCropped($event)\">\r\n  </image-cropper>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n"
        },
        {
            "name": "LanguageComponent",
            "id": "component-LanguageComponent-16747b3252042a5a1fe702743b274ddc",
            "file": "src/stories/language/language.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-language-select",
            "styleUrls": [
                "./language.scss"
            ],
            "styles": [],
            "template": "<div class=\"language\">\n\n  <div class=\"btn-group\" dropdown>\n\n    <button id=\"button-basic\" dropdownToggle\n            type=\"button\"\n            class=\"language-button dropdown-toggle\"\n            aria-controls=\"dropdown-basic\">\n      <img class=\"flag\" [src]=\"selectedLanguage.flag\" [alt]=\"selectedLanguage.label + 'flag'\">\n      {{ selectedLanguage.label }}\n    </button>\n\n    <ul id=\"dropdown-basic\" *dropdownMenu\n        class=\"dropdown-menu\"\n        role=\"menu\"\n        aria-labelledby=\"button-basic\">\n\n      <li role=\"menuitem\">\n        <div class=\"dropdown-item first-item\">\n          <img class=\"flag\" [src]=\"selectedLanguage.flag\" [alt]=\"selectedLanguage.label\">\n          <span class=\"mx-2\"> {{ selectedLanguage.label }} </span>\n        </div>\n      </li>\n\n      <li role=\"menuitem\" *ngFor=\"let item of languageOptions\">\n        <div class=\"dropdown-item\" (click)=\"onSelectLanguageItem(item)\">\n          <img class=\"flag\" [src]=\"item.flag\" [alt]=\"item.label\">\n          <span class=\"mx-2\"> {{ item.label }} </span>\n        </div>\n      </li>\n    </ul>\n\n  </div>\n\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "defaultLanguage",
                    "defaultValue": "'en'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defaultLanguage",
                    "defaultValue": "'en'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "languageOptions",
                    "defaultValue": "languageOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "selectedLanguage",
                    "defaultValue": "languageOptions[3]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSelectLanguageItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\n\r\nexport const languageOptions = [\r\n  { label: 'Česky', value: 'cs', flag: './flags/czech.png' },\r\n  { label: 'Dansk', value: 'da', flag: './flags/dansk.png' },\r\n  { label: 'Nederlands', value: 'nl', flag: './flags/netherlands.png' },\r\n  { label: 'English', value: 'en', flag: './flags/english.png' },\r\n  { label: 'Deutsch', value: 'de', flag: './flags/deutsch.png' },\r\n  { label: 'Norsk', value: 'nb', flag: './flags/norway.png' },\r\n  { label: 'Slovensky', value: 'sk', flag: './flags/slovakia.png' },\r\n  { label: 'Svenska', value: 'sv', flag: './flags/svenska.png' },\r\n];\r\n\r\n@Component({\r\n  selector: 'adstate-language-select',\r\n  template: `\r\n  <div class=\"language\">\r\n\r\n    <div class=\"btn-group\" dropdown>\r\n\r\n      <button id=\"button-basic\" dropdownToggle \r\n              type=\"button\" \r\n              class=\"language-button dropdown-toggle\"\r\n              aria-controls=\"dropdown-basic\">\r\n        <img class=\"flag\" [src]=\"selectedLanguage.flag\" [alt]=\"selectedLanguage.label + 'flag'\"> \r\n        {{ selectedLanguage.label }}\r\n      </button>\r\n\r\n      <ul id=\"dropdown-basic\" *dropdownMenu \r\n          class=\"dropdown-menu\"\r\n          role=\"menu\" \r\n          aria-labelledby=\"button-basic\">\r\n\r\n        <li role=\"menuitem\">\r\n          <div class=\"dropdown-item first-item\">\r\n            <img class=\"flag\" [src]=\"selectedLanguage.flag\" [alt]=\"selectedLanguage.label\">\r\n            <span class=\"mx-2\"> {{ selectedLanguage.label }} </span>\r\n          </div>\r\n        </li>\r\n\r\n        <li role=\"menuitem\" *ngFor=\"let item of languageOptions\">\r\n          <div class=\"dropdown-item\" (click)=\"onSelectLanguageItem(item)\">\r\n            <img class=\"flag\" [src]=\"item.flag\" [alt]=\"item.label\">\r\n            <span class=\"mx-2\"> {{ item.label }} </span>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n\r\n    </div>\r\n    \r\n  </div>\r\n    `,\r\n  styleUrls: ['./language.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport default class LanguageComponent {\r\n  @Input() defaultLanguage: string = 'en';\r\n  \r\n  languageOptions = languageOptions;\r\n  selectedLanguage = languageOptions[3];\r\n\r\n  onSelectLanguageItem(item) {\r\n    this.selectedLanguage = item;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if(changes && this.defaultLanguage) {\r\n      this.selectedLanguage = this.languageOptions.find(item => item.value === this.defaultLanguage);\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".language {\r\n  .flag {\r\n    width: 30px;\r\n    height: 24.2px;\r\n    border-radius: 6px;\r\n    margin-right: 0.5rem;\r\n  }\r\n\r\n  .language-button {\r\n    border: 1px solid var(--color-black);\r\n    border-radius: 0.5rem;\r\n    background: var(--color-white);\r\n    width: 155px;\r\n    height: 35px;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  .dropdown-menu {\r\n    width: 196px;\r\n    border-radius: 0.5rem;\r\n    font-size: 0.75rem;\r\n    padding-bottom: 1rem;\r\n  }\r\n\r\n  .dropdown-toggle::after {\r\n    position: absolute;\r\n    right: 8px;\r\n  }\r\n\r\n  .dropdown-item {\r\n    padding: 0.5rem 1rem;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .dropdown-item:hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .first-item {\r\n    padding: 0.5rem 1rem;\r\n    font-weight: normal;\r\n  }\r\n\r\n  .first-item:hover {\r\n    background: none;\r\n  }\r\n\r\n  .first-item::after {\r\n    content: '';\r\n    border-bottom: 1px solid var(--color-black);\r\n    width: 100%;\r\n    display: block;\r\n    margin-top: 1rem;\r\n  }\r\n\r\n}\r\n",
                    "styleUrl": "./language.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "LanguageSelectComponent",
            "id": "component-LanguageSelectComponent-5043562db8eab727641635f9553b2516",
            "file": "src/app/layout/language-select/language-select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-language-select",
            "styleUrls": [
                "./language-select.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./language-select.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "defaultLanguage",
                    "defaultValue": "'en'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defaultLanguage",
                    "defaultValue": "'en'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "languageOptions",
                    "defaultValue": "[\r\n    { label: 'Česky', value: 'cs', flag: 'assets/flags/czech.png' },\r\n    { label: 'Dansk', value: 'da', flag: 'assets/flags/dansk.png' },\r\n    { label: 'Nederlands', value: 'nl', flag: 'assets/flags/netherlands.png' },\r\n    { label: 'English', value: 'en', flag: 'assets/flags/english.png' },\r\n    { label: 'Deutsch', value: 'de', flag: 'assets/flags/deutsch.png' },\r\n    { label: 'Norsk', value: 'nb', flag: 'assets/flags/norway.png' },\r\n    { label: 'Slovensky', value: 'sk', flag: 'assets/flags/slovakia.png' },\r\n    { label: 'Svenska', value: 'sv', flag: 'assets/flags/svenska.png' },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "selectedLanguage",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSelectLanguageItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-language-select',\r\n  templateUrl: './language-select.component.html',\r\n  styleUrls: ['./language-select.component.scss']\r\n})\r\nexport class LanguageSelectComponent implements OnInit {\r\n\r\n  @Input() defaultLanguage: string = 'en';\r\n\r\n\r\n  languageOptions = [\r\n    { label: 'Česky', value: 'cs', flag: 'assets/flags/czech.png' },\r\n    { label: 'Dansk', value: 'da', flag: 'assets/flags/dansk.png' },\r\n    { label: 'Nederlands', value: 'nl', flag: 'assets/flags/netherlands.png' },\r\n    { label: 'English', value: 'en', flag: 'assets/flags/english.png' },\r\n    { label: 'Deutsch', value: 'de', flag: 'assets/flags/deutsch.png' },\r\n    { label: 'Norsk', value: 'nb', flag: 'assets/flags/norway.png' },\r\n    { label: 'Slovensky', value: 'sk', flag: 'assets/flags/slovakia.png' },\r\n    { label: 'Svenska', value: 'sv', flag: 'assets/flags/svenska.png' },\r\n  ];\r\n\r\n  selectedLanguage = undefined;\r\n\r\n  constructor() { \r\n    this.selectedLanguage = this.languageOptions.find(option => option.value === this.defaultLanguage)\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onSelectLanguageItem(item) {\r\n    this.selectedLanguage = item;\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".flag {\r\n  width: 30px;\r\n  height: 24.2px;\r\n  border-radius: 6px;\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n.language-button {\r\n  border: 1px solid black;\r\n  border-radius: 0.5rem;\r\n  background: #ffffff;\r\n  width: 155px;\r\n  height: 35px;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.dropdown-menu {\r\n  inset: 115% auto auto 0px !important;\r\n  width: 196px;\r\n  border-radius: 0.5rem;\r\n  font-size: 0.75rem;\r\n  padding-bottom: 1rem;\r\n}\r\n\r\n.dropdown-toggle::after {\r\n  position: absolute;\r\n  right: 8px;\r\n}\r\n\r\n.dropdown-item {\r\n  padding: 0.5rem 1rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.dropdown-item:hover {\r\n  cursor: pointer;\r\n}\r\n\r\n\r\n.first-item {\r\n  padding: 0.5rem 1rem;\r\n  font-weight: normal;\r\n}\r\n\r\n.first-item:hover {\r\n  background: none;\r\n}\r\n\r\n.first-item::after {\r\n  content: '';\r\n  border-bottom: 1px solid #000000;\r\n  width: 100%;\r\n  display: block;\r\n  margin-top: 1rem;\r\n}\r\n\r\n",
                    "styleUrl": "./language-select.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 24
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"btn-group\" dropdown>\r\n\r\n  <button id=\"button-basic\" dropdownToggle \r\n          type=\"button\" \r\n          class=\"language-button dropdown-toggle\"\r\n          aria-controls=\"dropdown-basic\">\r\n    <img class=\"flag\" \r\n        [src]=\"selectedLanguage.flag\" \r\n        [alt]=\"selectedLanguage.label + 'flag'\"> \r\n    {{ selectedLanguage.label }}\r\n  </button>\r\n\r\n  <ul id=\"dropdown-basic\" *dropdownMenu \r\n      class=\"dropdown-menu\"\r\n      role=\"menu\" \r\n      aria-labelledby=\"button-basic\">\r\n\r\n    <li role=\"menuitem\">\r\n      <div class=\"dropdown-item first-item\">\r\n        <img class=\"flag\" [src]=\"selectedLanguage.flag\" \r\n             [alt]=\"selectedLanguage.label\">\r\n        <span class=\"mx-2\"> {{ selectedLanguage.label }} </span>\r\n      </div>\r\n    </li>\r\n\r\n    <li role=\"menuitem\" *ngFor=\"let item of languageOptions\">\r\n      <div class=\"dropdown-item\" (click)=\"onSelectLanguageItem(item)\">\r\n        <img class=\"flag\" [src]=\"item.flag\" [alt]=\"item.label\">\r\n        <span class=\"mx-2\"> {{ item.label }} </span>\r\n      </div>\r\n    </li>\r\n  </ul>\r\n\r\n</div>"
        },
        {
            "name": "LayoutCardComponent",
            "id": "component-LayoutCardComponent-747461312d4b79190dd8a705ed1cd93d",
            "file": "src/stories/layout/layout.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-layout-card",
            "styleUrls": [
                "./layout.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./layout.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "currentLayout",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeLayoutIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "currentLayout",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "currentThemeName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "dummyText",
                    "defaultValue": "`Lorem ipsum dolor sit amet, consectetur adipiscing elit. Habitasse potenti vestibulum, elementum, sed. Feugiat\r\n          vestibulum non quis sapien nisl netus eget egestas quam. Mauris vel sit suspendisse turpis. Commodo, elementum\r\n          pulvinar diam non eu et neque neque nibh. Risus proin adipiscing convallis sit mi, lorem. Id ac nisl sit\r\n          ultrices nec velit. Vel fringilla consectetur.`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "themeNameMap",
                    "defaultValue": "new Map([\r\n    ['0', 'Standard Theme'],\r\n    ['1', 'New Generation Theme'],\r\n    ['2', 'Net Notice'],\r\n    ['3', 'Customer Specific 1'],\r\n  ])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "activeLayout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getCurrentThemeName",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "nextTheme",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "previousTheme",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'adstate-layout-card',\r\n  templateUrl: './layout.html',\r\n  styleUrls: ['./layout.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport default class LayoutCardComponent {\r\n\r\n  @Input() currentLayout = 0;\r\n  activeLayoutIndex: number;\r\n  currentThemeName: string;\r\n  dummyText = `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Habitasse potenti vestibulum, elementum, sed. Feugiat\r\n          vestibulum non quis sapien nisl netus eget egestas quam. Mauris vel sit suspendisse turpis. Commodo, elementum\r\n          pulvinar diam non eu et neque neque nibh. Risus proin adipiscing convallis sit mi, lorem. Id ac nisl sit\r\n          ultrices nec velit. Vel fringilla consectetur.`;\r\n\r\n\r\n  themeNameMap = new Map([\r\n    ['0', 'Standard Theme'],\r\n    ['1', 'New Generation Theme'],\r\n    ['2', 'Net Notice'],\r\n    ['3', 'Customer Specific 1'],\r\n  ]);\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.activeLayoutIndex = this.currentLayout;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if(changes && this.currentLayout) {\r\n      this.getCurrentThemeName();\r\n    }\r\n  }\r\n\r\n  activeLayout() {\r\n    this.activeLayoutIndex = this.currentLayout;\r\n  }\r\n\r\n\r\n  getCurrentThemeName(): void {\r\n    this.currentThemeName = this.themeNameMap.get(this.currentLayout.toString());\r\n  }\r\n\r\n  previousTheme(): void {\r\n    if (this.currentLayout === 0) {\r\n      return;\r\n    }\r\n\r\n    this.currentLayout -= 1;\r\n    this.getCurrentThemeName();\r\n  }\r\n\r\n  nextTheme(): void {\r\n    if (this.currentLayout === 3) {\r\n      return;\r\n    }\r\n\r\n    this.currentLayout += 1;\r\n    this.getCurrentThemeName();\r\n  }\r\n\r\n\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".admin-card {\r\n  background: var(--color-white);\r\n  box-shadow: var(--adstate-card-shadow);\r\n  border-radius: 1rem;\r\n  padding: 1rem 2rem;\r\n}\r\n\r\n.title {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.subtitle {\r\n  font-size: 1.25rem;\r\n}\r\n\r\n\r\n.themes-container {\r\n\r\n  .standard-layout {\r\n    width: 370px;\r\n    height: 320px;\r\n    background: #C4C4C4;\r\n    border-radius: 0.75rem;\r\n    padding: 1.5rem 0.75rem;\r\n\r\n    .layout-header {\r\n      height: 14px;\r\n      border-radius: 0.75rem;\r\n      background: var(--adstate-shade-dark-grey);\r\n      margin: auto;\r\n    }\r\n  }\r\n\r\n  .theme-title {\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    margin-bottom: 2rem;\r\n  }\r\n\r\n  .dummy-text {\r\n    margin-bottom: 2rem;\r\n    color: #9F9F9F;\r\n  }\r\n\r\n  .theme-action {\r\n    float: right;\r\n  }\r\n\r\n  .activated-layout-btn {\r\n    width: 206px;\r\n    height: 52px;\r\n    background: var(--adstate-primary-gradient);\r\n    opacity: 0.5;\r\n    border-radius: 8px;\r\n    color: var(--color-white);\r\n    border: none;\r\n\r\n    &.active {\r\n      opacity: 1; \r\n    }\r\n  }\r\n\r\n  .theme-selection {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-top: 1.5rem;\r\n\r\n    .theme {\r\n      height: 25px;\r\n      width: 25px;\r\n      border-radius: 50%;\r\n      background: var(--adstate-primary-200);\r\n      margin: 0 4px;\r\n      border: 1px solid var(--adstate-primary-gradient);\r\n\r\n      &.active {\r\n        background: var(--adstate-primary-gradient);\r\n      }\r\n\r\n      &:hover {\r\n        cursor: pointer; \r\n        background: var(--adstate-primary-gradient);\r\n      }\r\n    }\r\n\r\n    i {\r\n      color: var(--adstate-primary-500);\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./layout.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 25
            },
            "templateData": "<div class=\"admin-card\">\r\n  <div class=\"title\">\r\n    Layouts \r\n  </div>\r\n\r\n  <div class=\"subtitle\">\r\n    Change the lorem ipsum dolor sit amet. Setting are available lorem.\r\n  </div>\r\n\r\n  <div class=\"mt-3\">\r\n    <div class=\"themes-container my-4\">\r\n\r\n      <div class=\"d-flex themes\">\r\n        <div class=\"standard-layout\">\r\n          <div class=\"layout-header\"></div>\r\n\r\n          <ng-container [ngSwitch]=\"true\">\r\n            <ng-container *ngSwitchDefault>\r\n              <ng-container *ngTemplateOutlet=\"standard\"></ng-container>\r\n            </ng-container>\r\n            <ng-container *ngSwitchCase=\" currentTheme === 1\">\r\n              <ng-container *ngTemplateOutlet=\"newGeneration\"></ng-container>\r\n            </ng-container>\r\n            <ng-container *ngSwitchCase=\" currentTheme === 2\">\r\n              <ng-container *ngTemplateOutlet=\"netNotice\"></ng-container>\r\n            </ng-container>\r\n          </ng-container>\r\n\r\n        </div>\r\n\r\n        <div class=\"ml-3 ms-3 w-100\">\r\n          <div class=\"theme-title\"> {{ currentThemeName }}</div>\r\n          <p class=\"dummy-text\">\r\n            {{ dummyText }}\r\n          </p>\r\n          <div class=\"theme-action mr-3\">\r\n            <button class=\"activated-layout-btn text-uppercase\" (click)=\"activeLayout()\"\r\n                    [ngClass]=\"{'active': activeLayoutIndex !== currentLayout}\">\r\n              <span *ngIf=\"activeLayoutIndex === currentLayout\">Activated layout</span>\r\n              <span *ngIf=\"activeLayoutIndex !== currentLayout\">Active layout</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"theme-selection\">\r\n        <i class=\"bi bi-chevron-left cursor-pointer\" (click)=\"previousTheme()\"></i>\r\n        <div class=\"d-flex\" *ngFor=\"let theme of [0,1,2,3]; let i = index\">\r\n          <div class=\"theme\"\r\n               [ngClass]=\"{'active': currentLayout === i}\"\r\n               (click)=\"currentLayout = i; getCurrentThemeName()\">\r\n          </div>\r\n        </div>\r\n        <i class=\"bi bi-chevron-right cursor-pointer\" (click)=\"nextTheme()\"></i>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<ng-template #standard>\r\n  <adstate-standard-template></adstate-standard-template>\r\n</ng-template>\r\n\r\n<ng-template #newGeneration>\r\n  <adstate-new-generation-template></adstate-new-generation-template>\r\n</ng-template>\r\n\r\n<ng-template #netNotice>\r\n  <adstate-net-notice-template></adstate-net-notice-template>\r\n</ng-template>\r\n\r\n"
        },
        {
            "name": "LayoutsComponent",
            "id": "component-LayoutsComponent-ee6a973454495ea35e5021fa10f01b00",
            "file": "src/app/customization-admin/containers/layouts/layouts.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-layouts",
            "styleUrls": [
                "./layouts.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./layouts.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentTheme",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "currentThemeName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "dummyText",
                    "defaultValue": "`Lorem ipsum dolor sit amet, consectetur adipiscing elit. Habitasse potenti vestibulum, elementum, sed. Feugiat\r\n          vestibulum non quis sapien nisl netus eget egestas quam. Mauris vel sit suspendisse turpis. Commodo, elementum\r\n          pulvinar diam non eu et neque neque nibh. Risus proin adipiscing convallis sit mi, lorem. Id ac nisl sit\r\n          ultrices nec velit. Vel fringilla consectetur.`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "themeNameMap",
                    "defaultValue": "new Map([\r\n    ['0', 'Standard Theme'],\r\n    ['1', 'New Generation Theme'],\r\n    ['2', 'Net Notice'],\r\n    ['3', 'Customer Specific 1'],\r\n  ])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "getCurrentThemeName",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "nextTheme",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "previousTheme",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-layouts',\r\n  templateUrl: './layouts.component.html',\r\n  styleUrls: ['./layouts.component.scss']\r\n})\r\nexport class LayoutsComponent implements OnInit {\r\n\r\n  currentTheme = 0;\r\n  currentThemeName: string;\r\n  dummyText = `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Habitasse potenti vestibulum, elementum, sed. Feugiat\r\n          vestibulum non quis sapien nisl netus eget egestas quam. Mauris vel sit suspendisse turpis. Commodo, elementum\r\n          pulvinar diam non eu et neque neque nibh. Risus proin adipiscing convallis sit mi, lorem. Id ac nisl sit\r\n          ultrices nec velit. Vel fringilla consectetur.`;\r\n\r\n\r\n  themeNameMap = new Map([\r\n    ['0', 'Standard Theme'],\r\n    ['1', 'New Generation Theme'],\r\n    ['2', 'Net Notice'],\r\n    ['3', 'Customer Specific 1'],\r\n  ]);\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  getCurrentThemeName(): void {\r\n    this.currentThemeName = this.themeNameMap.get(this.currentTheme.toString());\r\n  }\r\n\r\n  previousTheme(): void {\r\n    if (this.currentTheme === 0) {\r\n      return;\r\n    }\r\n\r\n    this.currentTheme -= 1;\r\n    this.getCurrentThemeName();\r\n  }\r\n\r\n  nextTheme(): void {\r\n    if (this.currentTheme === 3) {\r\n      return;\r\n    }\r\n\r\n    this.currentTheme += 1;\r\n    this.getCurrentThemeName();\r\n  }\r\n\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "$theme-border-radius: 0.75rem;\r\n\r\n.themes-container {\r\n\r\n  .standard-layout {\r\n    width: 370px;\r\n    height: 320px;\r\n    background: #C4C4C4;\r\n    border-radius: $theme-border-radius;\r\n    padding: 1.5rem 0.75rem;\r\n\r\n    .layout-header {\r\n      height: 14px;\r\n      border-radius: $theme-border-radius;\r\n      background: #666666;\r\n      margin: auto;\r\n    }\r\n  }\r\n\r\n  .theme-title {\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    margin-bottom: 2rem;\r\n  }\r\n\r\n  .dummy-text {\r\n    margin-bottom: 2rem;\r\n    color: #9F9F9F;\r\n  }\r\n\r\n  .theme-action {\r\n    float: right;\r\n  }\r\n\r\n  .active-layout-btn {\r\n    width: 206px;\r\n    height: 52px;\r\n    background: var(--adstate-primary-gradient);\r\n    opacity: 0.5;\r\n    border-radius: 8px;\r\n    color: #ffffff;\r\n    border: none;\r\n  }\r\n\r\n  .theme-selection {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-top: 1.5rem;\r\n\r\n    .theme {\r\n      height: 25px;\r\n      width: 25px;\r\n      border-radius: 50%;\r\n      background: var(--adstate-primary-200);\r\n      margin: 0 4px;\r\n      border: 1px solid var(--adstate-primary-500);\r\n\r\n      &.active {\r\n        background: var(--adstate-primary-500);\r\n      }\r\n    }\r\n\r\n    i {\r\n      color: var(--adstate-primary-500);\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./layouts.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 23
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-card>\r\n  <div cardTitle> Layouts</div>\r\n  <div cardSubtitle>\r\n    Change the lorem ipsum dolor sit amet. Setting are available lorem.\r\n  </div>\r\n  <div cardBody>\r\n\r\n    <div class=\"themes-container my-4\">\r\n\r\n      <div class=\"d-flex themes\">\r\n        <div class=\"standard-layout\">\r\n          <div class=\"layout-header\"></div>\r\n\r\n          <ng-container [ngSwitch]=\"true\">\r\n            <ng-container *ngSwitchDefault>\r\n              <ng-container *ngTemplateOutlet=\"standard\"></ng-container>\r\n            </ng-container>\r\n            <ng-container *ngSwitchCase=\" currentTheme === 1\">\r\n              <ng-container *ngTemplateOutlet=\"newGeneration\"></ng-container>\r\n            </ng-container>\r\n            <ng-container *ngSwitchCase=\" currentTheme === 2\">\r\n              <ng-container *ngTemplateOutlet=\"netNotice\"></ng-container>\r\n            </ng-container>\r\n          </ng-container>\r\n\r\n        </div>\r\n\r\n        <div class=\"ml-3 ms-3 w-100\">\r\n          <div class=\"theme-title\"> {{ currentThemeName }}</div>\r\n          <p class=\"dummy-text\">\r\n            {{ dummyText }}\r\n          </p>\r\n          <div class=\"theme-action mr-3\">\r\n            <button class=\"active-layout-btn text-uppercase\">\r\n              Active layout\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"theme-selection\">\r\n        <i class=\"bi bi-chevron-left cursor-pointer\" (click)=\"previousTheme()\"></i>\r\n        <div class=\"d-flex\" *ngFor=\"let theme of [0,1,2,3]; let i = index\">\r\n          <div class=\"theme\"\r\n               [ngClass]=\"{'active': currentTheme === i}\"\r\n               (click)=\"currentTheme = i; getCurrentThemeName()\">\r\n          </div>\r\n        </div>\r\n        <i class=\"bi bi-chevron-right cursor-pointer\" (click)=\"nextTheme()\"></i>\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n  </div>\r\n</app-card>\r\n\r\n\r\n\r\n<ng-template #standard>\r\n  <app-standard-template></app-standard-template>\r\n</ng-template>\r\n\r\n<ng-template #newGeneration>\r\n  <app-new-generation-template></app-new-generation-template>\r\n</ng-template>\r\n\r\n<ng-template #netNotice>\r\n  <app-net-notice-template></app-net-notice-template>\r\n</ng-template>\r\n\r\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-00900f22ddf713776ff5b2b0277a7e97",
            "file": "src/app/auth/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isLoggedIn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "getUser",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport {KeycloakService} from 'keycloak-angular';\r\nimport {setTheme} from 'ngx-bootstrap/utils';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  isLoggedIn: boolean;\r\n\r\n  constructor(private readonly keycloak: KeycloakService) {}\r\n\r\n  async ngOnInit(): Promise<any> {\r\n    return this.isLoggedIn = await this.keycloak.isLoggedIn();\r\n  }\r\n\r\n  async getUser(): Promise<any> {\r\n    if (this.isLoggedIn) {\r\n      const userProfile = await this.keycloak.loadUserProfile();\r\n      const token = await this.keycloak.getToken();\r\n      const roles = await this.keycloak.getUserRoles(true);\r\n\r\n      return {\r\n        userProfile,\r\n        token\r\n      };\r\n    }\r\n  }\r\n\r\n  login(): void {\r\n    this.keycloak.login();\r\n  }\r\n\r\n  logout(): void {\r\n    this.keycloak.logout();\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "keycloak",
                        "type": "KeycloakService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "keycloak",
                        "type": "KeycloakService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": ""
        },
        {
            "name": "LogoComponent",
            "id": "component-LogoComponent-f35d661bf72c668e6fd13684c0f4f947",
            "file": "src/stories/logo/logo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-logo",
            "styleUrls": [
                "./logo.scss"
            ],
            "styles": [],
            "template": "<img class=\"logo\" [src]=\"imageSource\" alt=\"logo image\">\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "imageSource",
                    "defaultValue": "'https://design.adstate.com/images/logotype.png'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "imageSource",
                    "defaultValue": "'https://design.adstate.com/images/logotype.png'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'adstate-logo',\r\n  template: `\r\n    <img class=\"logo\" [src]=\"imageSource\" alt=\"logo image\">\r\n  `,\r\n  styleUrls: ['./logo.scss'],\r\n})\r\nexport default class LogoComponent { \r\n  @Input() imageSource: string = 'https://design.adstate.com/images/logotype.png'\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".logo {\r\n  height: auto;\r\n}",
                    "styleUrl": "./logo.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "LogoTypeComponent",
            "id": "component-LogoTypeComponent-a722c4837bd776178727b695561ab367",
            "file": "src/stories/logo-type/logo-type.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-logo-type",
            "styleUrls": [
                "./logo-type.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./logo-type.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "imageSource",
                    "defaultValue": "'assets/images/logo.png'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "logoAlign",
                    "defaultValue": "'center'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "imageSource",
                    "defaultValue": "'assets/images/logo.png'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "imgURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "logoAlign",
                    "defaultValue": "'center'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "allowDrop",
                    "args": [
                        {
                            "name": "ev",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "drag",
                    "args": [
                        {
                            "name": "ev",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "drop",
                    "args": [
                        {
                            "name": "ev",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "preview",
                    "args": [
                        {
                            "name": "files",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "files",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeLogo",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'adstate-logo-type',\r\n  templateUrl: './logo-type.html',\r\n  styleUrls: ['./logo-type.scss']\r\n})\r\nexport default class LogoTypeComponent {\r\n  \r\n  @Input() imageSource: string = 'assets/images/logo.png';\r\n  @Input() logoAlign: string = 'center';\r\n\r\n  imgURL: any;\r\n\r\n  constructor(private sanitizer: DomSanitizer) {}\r\n\r\n  removeLogo() {\r\n    this.imgURL = null;\r\n  }\r\n\r\n  allowDrop(ev) {\r\n    ev.preventDefault();\r\n  }\r\n\r\n  drag(ev) {\r\n    ev.dataTransfer.setData(\"text\", ev.target.id);\r\n  }\r\n\r\n  drop(ev) {\r\n    ev.preventDefault();\r\n    const data = ev.dataTransfer.files;\r\n    this.preview(data);\r\n  }\r\n\r\n  preview(files) {\r\n\r\n    if (files.length === 0)\r\n      return;\r\n\r\n    let mimeType = files[0].type;\r\n    if (mimeType.match(/image\\/*/) == null) {\r\n      const message = \"Only images are supported.\";\r\n      return;\r\n    }\r\n\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(files[0]); \r\n    reader.onload = (_event) => { \r\n      const dataUrl = reader.result;\r\n      this.imgURL = this.sanitizer.bypassSecurityTrustResourceUrl(dataUrl as string) as string;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".admin-card {\r\n  background: var(--color-white);\r\n  box-shadow: var(--adstate-card-shadow);\r\n  border-radius: 1rem;\r\n  padding: 1rem 2rem;\r\n}\r\n\r\n.title {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.subtitle {\r\n  font-size: 1.25rem;\r\n}\r\n\r\n\r\n.logo-container {\r\n  height: 112px;\r\n  width: 100%;\r\n  background-image: url('/assets/images/logotype-background.png');\r\n  border-radius: 0.5rem;\r\n}\r\n\r\n.trash-icon {\r\n  float: right;\r\n}\r\n\r\n.icon {\r\n  cursor: pointer;\r\n  font-size: 1.5rem;\r\n\r\n  &:hover {\r\n    filter: var(--adstate-drop-shadow);\r\n  }\r\n}\r\n\r\n.logo-center {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.logo-left {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: start;\r\n}\r\n\r\n.logo-image {\r\n  height: 112px;\r\n}\r\n\r\n.inputfile {\r\n  width: 0.1px;\r\n  height: 0.1px;\r\n  opacity: 0;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  z-index: -1;\r\n\r\n  &+label {\r\n    font-size: 1.25em;\r\n    font-weight: 700;\r\n    color: var(--color-black);\r\n    display: inline-block;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      box-shadow: var(--adstate-card-shadow);\r\n    }\r\n  }\r\n\r\n}\r\n",
                    "styleUrl": "./logo-type.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"admin-card w-100\">\r\n  <div class=\"title\">\r\n    Logotype\r\n  </div>\r\n\r\n  <div class=\"subtitle\">\r\n    Upload your logotype to be displayed on the portal page.\r\n  </div>\r\n\r\n  <div class=\"mt-3\">\r\n\r\n    <div (drop)=\"drop($event)\" (dragover)=\"allowDrop($event)\" class=\"logo-container\"\r\n         [ngClass]=\" logoAlign === 'center' ? 'logo-center' : 'logo-left' \">\r\n\r\n      <img *ngIf=\"imgURL\" [src]=\"imgURL\" class=\"logo-image\" alt=\"logo type\">\r\n      \r\n      <input type=\"file\" name=\"file\" id=\"file\" class=\"inputfile\" #file (change)=\"preview(file.files)\"/>\r\n      <label *ngIf=\"!imgURL\" for=\"file\">Click to browse or drop logo file here</label>\r\n    </div>\r\n\r\n    <div class=\"text-center mt-3\">\r\n      <i class=\"bi bi-text-left icon me-3\" (click)=\"logoAlign = 'left'\"></i>\r\n      <i class=\"bi bi-text-center icon\" (click)=\"logoAlign = 'center'\"></i>\r\n      <i class=\"bi bi-trash icon trash-icon\" (click)=\"removeLogo()\"></i>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "LogotypeComponent",
            "id": "component-LogotypeComponent-ad1372e79ce94e3b5aff77d2ccc691aa",
            "file": "src/app/customization-admin/containers/logotype/logotype.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-logotype",
            "styleUrls": [
                "./logotype.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./logotype.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isCenter",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-logotype',\r\n  templateUrl: './logotype.component.html',\r\n  styleUrls: ['./logotype.component.scss']\r\n})\r\nexport class LogotypeComponent implements OnInit {\r\n\r\n  isCenter = true;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".logo-container {\r\n  height: 112px;\r\n  width: 100%;\r\n  background-image: url('/assets/images/logotype-background.png');\r\n  border-radius: 0.5rem;\r\n}\r\n\r\n.trash-icon {\r\n  float: right;\r\n}\r\n\r\n.icon {\r\n  cursor: pointer;\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.logo-center {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.logo-left {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: start;\r\n}\r\n\r\n",
                    "styleUrl": "./logotype.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-card>\r\n  <div cardTitle> Logotype</div>\r\n  <div cardSubtitle>\r\n    Upload your logotype to be displayed on the portal page.\r\n  </div>\r\n  <div cardBody>\r\n\r\n    <div class=\"logo-container\"\r\n         [ngClass]=\" isCenter ? 'logo-center' : 'logo-left' \">\r\n      <img src=\"assets/images/logo.png\" alt=\"\">\r\n    </div>\r\n\r\n    <div class=\"text-center mt-3\">\r\n      <i class=\"bi bi-text-left icon me-3\" (click)=\"isCenter = false\"></i>\r\n      <i class=\"bi bi-text-center icon\" (click)=\"isCenter = true\"></i>\r\n      <i class=\"bi bi-trash icon trash-icon\"></i>\r\n    </div>\r\n\r\n  </div>\r\n</app-card>\r\n"
        },
        {
            "name": "MultiSelectCheckboxComponent",
            "id": "component-MultiSelectCheckboxComponent-c2785be126b6f4a7af2d57fc12d13e49",
            "file": "src/stories/select/multiselect-checkbox/multiselect-checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-select",
            "styleUrls": [
                "./multiselect-checkbox.css"
            ],
            "styles": [],
            "templateUrl": [
                "./multiselect-checkbox.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hasIconForLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "hasIconForOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "icon",
                    "defaultValue": "'han'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "iconPlace",
                    "defaultValue": "Direction.Left",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "any"
                },
                {
                    "name": "selectedPeople",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "{}"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "direction",
                    "defaultValue": "Direction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "hasIconForLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "hasIconForOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "icon",
                    "defaultValue": "'han'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "iconPlace",
                    "defaultValue": "Direction.Left",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "mockData",
                    "defaultValue": "from(import('../../assets/mockdata.json'))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "selectedPeople",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "selectedPerson",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { from } from 'rxjs';\r\nimport { Direction } from 'src/stories/directions';\r\n\r\n@Component({\r\n  selector: 'adstate-select',\r\n  templateUrl: './multiselect-checkbox.html',\r\n  styleUrls: ['./multiselect-checkbox.css'],\r\n})\r\nexport default class MultiSelectCheckboxComponent {\r\n  \r\n  @Input() hasIconForLabel: boolean;\r\n  @Input() hasIconForOption: boolean;\r\n  @Input() iconPlace = Direction.Left;\r\n  @Input() icon: string = 'han';\r\n  @Input() selectedPeople = [];\r\n\r\n  mockData = from(import('../../assets/mockdata.json'));\r\n  selectedPerson = [];\r\n  direction = Direction;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./multiselect-checkbox.css"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-select\r\n        [items]=\"(mockData | async).data\"\r\n        [multiple]=\"true\"\r\n        bindLabel=\"name\"\r\n        bindValue=\"id\"\r\n        groupBy=\"gender\"\r\n        [selectableGroup]=\"true\"\r\n        [selectableGroupAsModel]=\"false\"\r\n        [closeOnSelect]=\"false\"\r\n        [(ngModel)]=\"selectedPeople\">\r\n    <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\r\n        <span class=\"ng-value-label p-2\">\r\n            <i *ngIf=\"hasIconForLabel && iconPlace === direction.Left\" class=\"me-2 bi bi-{{ icon }}\"></i> \r\n\r\n            {{item.name}}\r\n\r\n            <i *ngIf=\"hasIconForLabel && iconPlace === direction.Right\" class=\"ms-2 bi bi-{{ icon }}\"></i>\r\n        </span>\r\n        <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">\r\n            <i class=\"bi bi-x\"></i>\r\n        </span>\r\n    </ng-template>\r\n\r\n    <ng-template ng-optgroup-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\r\n        <i *ngIf=\"hasIconForOption && iconPlace === direction.Left\" class=\"me-2 text-primary bi bi-{{ icon }}\"></i> \r\n        \r\n        <span class=\"text-primary\">{{item.gender | uppercase}}</span>\r\n\r\n        <i *ngIf=\"hasIconForOption && iconPlace === direction.Right\" class=\"ms-2 text-primary bi bi-{{ icon }}\"></i>\r\n    </ng-template>\r\n\r\n    <ng-template ng-option-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\r\n\r\n        <i *ngIf=\"hasIconForOption && iconPlace === direction.Left\" class=\"me-2 bi bi-{{ icon }}\"></i>\r\n\r\n        {{item.name}}\r\n\r\n        <i *ngIf=\"hasIconForOption && iconPlace === direction.Right\" class=\"ms-2 bi bi-{{ icon }}\"></i>\r\n\r\n    </ng-template>\r\n        \r\n</ng-select>"
        },
        {
            "name": "NetNoticeComponent",
            "id": "component-NetNoticeComponent-42f6c869f3d6005a3b17ccfb2017edcf",
            "file": "src/stories/layout-template/net-notice/net-notice.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-net-notice-template",
            "styleUrls": [
                "./net-notice.scss"
            ],
            "styles": [],
            "template": "<div class=\"d-flex justify-content-between\">\n  <div class=\"column mr-3\">\n    <div class=\"col1\"></div>\n    <div class=\"col4\"></div>\n  </div>\n\n  <div class=\"column mr-3\">\n    <div class=\"col2\"></div>\n    <div class=\"col3\"></div>\n  </div>\n\n  <div class=\"column mr-3\">\n    <div class=\"col3\"></div>\n    <div class=\"col2\"></div>\n  </div>\n\n  <div class=\"column\">\n    <div class=\"col4\"></div>\n    <div class=\"col1\"></div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'adstate-net-notice-template',\r\n  template: `    \r\n    <div class=\"d-flex justify-content-between\">\r\n      <div class=\"column mr-3\">\r\n        <div class=\"col1\"></div>\r\n        <div class=\"col4\"></div>\r\n      </div>\r\n\r\n      <div class=\"column mr-3\">\r\n        <div class=\"col2\"></div>\r\n        <div class=\"col3\"></div>\r\n      </div>\r\n\r\n      <div class=\"column mr-3\">\r\n        <div class=\"col3\"></div>\r\n        <div class=\"col2\"></div>\r\n      </div>\r\n\r\n      <div class=\"column\">\r\n        <div class=\"col4\"></div>\r\n        <div class=\"col1\"></div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./net-notice.scss'],\r\n})\r\nexport default class NetNoticeComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.column {\r\n  width: 35px;\r\n  margin-bottom: 5px;\r\n  margin-top: 38px;\r\n\r\n  .col1 {\r\n    background: #AAAAAA;\r\n    height: 60px;\r\n    margin-top: 7px;\r\n  }\r\n\r\n  .col2 {\r\n    background: #AAAAAA;\r\n    height: 90px;\r\n    margin-top: 7px;\r\n  }\r\n\r\n  .col3 {\r\n    background: #AAAAAA;\r\n    height: 70px;\r\n    margin-top: 7px;\r\n  }\r\n\r\n  .col4 {\r\n    background: #AAAAAA;\r\n    height: 100px;\r\n    margin-top: 7px;\r\n  }\r\n\r\n}\r\n",
                    "styleUrl": "./net-notice.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "NetNoticeTemplateComponent",
            "id": "component-NetNoticeTemplateComponent-bc0fa3bbed66451c33b3d2e1928ea54c",
            "file": "src/app/admin/net-notice-template/net-notice-template.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-net-notice-template",
            "styleUrls": [
                "./net-notice-template.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./net-notice-template.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-net-notice-template',\n  templateUrl: './net-notice-template.component.html',\n  styleUrls: ['./net-notice-template.component.scss']\n})\nexport class NetNoticeTemplateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".column {\r\n  width: 35px;\r\n  margin-bottom: 5px;\r\n  margin-top: 38px;\r\n\r\n  .col1 {\r\n    background: #AAAAAA;\r\n    height: 60px;\r\n    margin-top: 7px;\r\n  }\r\n\r\n  .col2 {\r\n    background: #AAAAAA;\r\n    height: 90px;\r\n    margin-top: 7px;\r\n  }\r\n\r\n  .col3 {\r\n    background: #AAAAAA;\r\n    height: 70px;\r\n    margin-top: 7px;\r\n  }\r\n\r\n  .col4 {\r\n    background: #AAAAAA;\r\n    height: 100px;\r\n    margin-top: 7px;\r\n  }\r\n\r\n}\r\n",
                    "styleUrl": "./net-notice-template.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"d-flex justify-content-between\">\n  <div class=\"column  mr-3\">\n    <div class=\"col1\"></div>\n    <div class=\"col4\"></div>\n  </div>\n\n  <div class=\"column mr-3\">\n    <div class=\"col2\"></div>\n    <div class=\"col3\"></div>\n  </div>\n\n  <div class=\"column  mr-3\">\n    <div class=\"col3\"></div>\n    <div class=\"col2\"></div>\n  </div>\n\n  <div class=\"column\">\n    <div class=\"col4\"></div>\n    <div class=\"col1\"></div>\n  </div>\n</div>\n\n"
        },
        {
            "name": "NetNoticeTemplateComponent",
            "id": "component-NetNoticeTemplateComponent-9b5599077418e68f050fed5c640ff381-1",
            "file": "src/app/customization-admin/components/net-notice-template/net-notice-template.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-net-notice-template",
            "styleUrls": [
                "./net-notice-template.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./net-notice-template.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-net-notice-template',\r\n  templateUrl: './net-notice-template.component.html',\r\n  styleUrls: ['./net-notice-template.component.scss']\r\n})\r\nexport class NetNoticeTemplateComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".column {\r\n  width: 35px;\r\n  margin-bottom: 5px;\r\n  margin-top: 38px;\r\n\r\n  .col1 {\r\n    background: #AAAAAA;\r\n    height: 60px;\r\n    margin-top: 7px;\r\n  }\r\n\r\n  .col2 {\r\n    background: #AAAAAA;\r\n    height: 90px;\r\n    margin-top: 7px;\r\n  }\r\n\r\n  .col3 {\r\n    background: #AAAAAA;\r\n    height: 70px;\r\n    margin-top: 7px;\r\n  }\r\n\r\n  .col4 {\r\n    background: #AAAAAA;\r\n    height: 100px;\r\n    margin-top: 7px;\r\n  }\r\n\r\n}\r\n",
                    "styleUrl": "./net-notice-template.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "NetNoticeTemplateComponent-1",
            "templateData": "<div class=\"d-flex justify-content-between\">\r\n  <div class=\"column mr-3\">\r\n    <div class=\"col1\"></div>\r\n    <div class=\"col4\"></div>\r\n  </div>\r\n\r\n  <div class=\"column mr-3\">\r\n    <div class=\"col2\"></div>\r\n    <div class=\"col3\"></div>\r\n  </div>\r\n\r\n  <div class=\"column mr-3\">\r\n    <div class=\"col3\"></div>\r\n    <div class=\"col2\"></div>\r\n  </div>\r\n\r\n  <div class=\"column\">\r\n    <div class=\"col4\"></div>\r\n    <div class=\"col1\"></div>\r\n  </div>\r\n</div>\r\n\r\n"
        },
        {
            "name": "NetNoticeViewComponent",
            "id": "component-NetNoticeViewComponent-1e0bbf1238353eb03018b24f7535bdc1",
            "file": "src/app/memorial/components/net-notice-view/net-notice-view.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-net-notice-view",
            "styleUrls": [
                "./net-notice-view.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./net-notice-view.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-net-notice-view',\n  templateUrl: './net-notice-view.component.html',\n  styleUrls: ['./net-notice-view.component.scss']\n})\nexport class NetNoticeViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./net-notice-view.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>net-notice-view works!</p>\n"
        },
        {
            "name": "NewGenerationComponent",
            "id": "component-NewGenerationComponent-b795595d41950c97d6f99f66183f9b6d",
            "file": "src/stories/layout-template/new-generation/new-generation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-new-generation-template",
            "styleUrls": [
                "./new-generation.scss"
            ],
            "styles": [],
            "template": "<div class=\"items first-item\">\n  <div class=\"item\"></div>\n</div>\n\n<div class=\"items\">\n  <div class=\"item\"></div>\n</div>\n\n<div class=\"items\">\n  <div class=\"item\"></div>\n</div>\n\n<div class=\"items\">\n  <div class=\"item\"></div>\n</div>\n\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'adstate-new-generation-template',\r\n  template: `    \r\n    <div class=\"items first-item\">\r\n      <div class=\"item\"></div>\r\n    </div>\r\n\r\n    <div class=\"items\">\r\n      <div class=\"item\"></div>\r\n    </div>\r\n\r\n    <div class=\"items\">\r\n      <div class=\"item\"></div>\r\n    </div>\r\n\r\n    <div class=\"items\">\r\n      <div class=\"item\"></div>\r\n    </div>\r\n\r\n  `,\r\n  styleUrls: ['./new-generation.scss'],\r\n})\r\nexport default class NewGenerationComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".items {\r\n  margin-top: 1rem;\r\n  width: 100%;\r\n  border-radius: 6px;\r\n  border: 1px solid var(--adstate-shade-dark-grey);\r\n\r\n  &.first-item {\r\n    margin-top: 38px;\r\n  }\r\n}\r\n\r\n.item {\r\n  height: 25px;\r\n  width: 45%;\r\n  background: #B6B6B6;\r\n  border-bottom-left-radius: 6px;\r\n  border-top-left-radius: 6px;\r\n  border-top-right-radius: 30px;\r\n}\r\n",
                    "styleUrl": "./new-generation.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "NewGenerationTemplateComponent",
            "id": "component-NewGenerationTemplateComponent-ad85fbb5cc3564dbd4830c0ecdee83a1",
            "file": "src/app/admin/new-generation-template/new-generation-template.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-new-generation-template",
            "styleUrls": [
                "./new-generation-template.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./new-generation-template.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-new-generation-template',\n  templateUrl: './new-generation-template.component.html',\n  styleUrls: ['./new-generation-template.component.scss']\n})\nexport class NewGenerationTemplateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".items {\r\n  margin-top: 1rem;\r\n  width: 100%;\r\n  border-radius: 6px;\r\n  border: 1px solid #666666;\r\n\r\n  &.first-item {\r\n    margin-top: 38px;\r\n  }\r\n}\r\n\r\n.item {\r\n  height: 25px;\r\n  width: 45%;\r\n  background: #B6B6B6;\r\n  border-bottom-left-radius: 6px;\r\n  border-top-left-radius: 6px;\r\n  border-top-right-radius: 30px;\r\n}\r\n",
                    "styleUrl": "./new-generation-template.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"items first-item\">\n  <div class=\"item\"></div>\n</div>\n\n<div class=\"items\">\n  <div class=\"item\"></div>\n</div>\n\n<div class=\"items\">\n  <div class=\"item\"></div>\n</div>\n\n<div class=\"items\">\n  <div class=\"item\"></div>\n</div>\n"
        },
        {
            "name": "NewGenerationTemplateComponent",
            "id": "component-NewGenerationTemplateComponent-e833a78fd5e8f60b78624dc67296f2b7-1",
            "file": "src/app/customization-admin/components/new-generation-template/new-generation-template.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-new-generation-template",
            "styleUrls": [
                "./new-generation-template.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./new-generation-template.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-new-generation-template',\r\n  templateUrl: './new-generation-template.component.html',\r\n  styleUrls: ['./new-generation-template.component.scss']\r\n})\r\nexport class NewGenerationTemplateComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".items {\r\n  margin-top: 1rem;\r\n  width: 100%;\r\n  border-radius: 6px;\r\n  border: 1px solid #666666;\r\n\r\n  &.first-item {\r\n    margin-top: 38px;\r\n  }\r\n}\r\n\r\n.item {\r\n  height: 25px;\r\n  width: 45%;\r\n  background: #B6B6B6;\r\n  border-bottom-left-radius: 6px;\r\n  border-top-left-radius: 6px;\r\n  border-top-right-radius: 30px;\r\n}\r\n",
                    "styleUrl": "./new-generation-template.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "NewGenerationTemplateComponent-1",
            "templateData": "<div class=\"items first-item\">\r\n  <div class=\"item\"></div>\r\n</div>\r\n\r\n<div class=\"items\">\r\n  <div class=\"item\"></div>\r\n</div>\r\n\r\n<div class=\"items\">\r\n  <div class=\"item\"></div>\r\n</div>\r\n\r\n<div class=\"items\">\r\n  <div class=\"item\"></div>\r\n</div>\r\n"
        },
        {
            "name": "NotifyComponent",
            "id": "component-NotifyComponent-4fa4450e9ee41d879d0d58f3e8fa930f",
            "file": "src/app/memorial/containers/notify/notify.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-notify",
            "styleUrls": [
                "./notify.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./notify.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "mainColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorCode$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "Select",
                            "stringifiedArguments": "MemorialSelectors.errorCode"
                        }
                    ]
                },
                {
                    "name": "errorMessage$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "Select",
                            "stringifiedArguments": "MemorialSelectors.errorMessage"
                        }
                    ]
                },
                {
                    "name": "isLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "Select",
                            "stringifiedArguments": "MemorialSelectors.isLoading"
                        }
                    ]
                },
                {
                    "name": "mainColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "users$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Array<User>>",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "Select",
                            "stringifiedArguments": "MemorialSelectors.users"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\r\nimport {Select} from \"@ngxs/store\";\r\nimport {MemorialSelectors} from \"../../store/memorial.selectors\";\r\nimport {Observable} from \"rxjs\";\r\nimport {User} from \"../../models/user.model\";\r\n\r\n@Component({\r\n  selector: 'app-notify',\r\n  templateUrl: './notify.component.html',\r\n  styleUrls: ['./notify.component.scss']\r\n})\r\nexport class NotifyComponent implements OnInit {\r\n\r\n  @Select(MemorialSelectors.users) users$: Observable<Array<User>>;\r\n  @Select(MemorialSelectors.errorCode) errorCode$: Observable<string>;\r\n  @Select(MemorialSelectors.errorMessage) errorMessage$: Observable<string>;\r\n  @Select(MemorialSelectors.isLoading) isLoading$: Observable<boolean>\r\n\r\n  @Input() mainColor: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {}\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".alert {\r\n  position: revert;\r\n}",
                    "styleUrl": "./notify.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div *ngIf=\"(!(users$ | async) && !(isLoading$ | async))\r\n           || ((users$ | async) && (isLoading$ | async))\"\r\n     class=\"m-5 d-flex justify-content-center\"\r\n     [ngStyle]=\"{'color': mainColor}\">\r\n\r\n  <div class=\"spinner-border\" role=\"status\" data-cy=\"loadingSpinner\">\r\n    <span class=\"visually-hidden\">Loading...</span>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"(users$ | async)\r\n         && (users$ | async).length === 0\r\n         && !(isLoading$ | async)\" class=\"position-relative\">\r\n  <strong data-cy=\"noData\"> No data to show </strong>\r\n</div>\r\n\r\n<div>\r\n  <p class=\"alert alert-danger mt-3\" role=\"alert\"\r\n     *ngIf=\"(errorCode$ | async) && !(isLoading$ | async)\">\r\n    <strong>Error Code:</strong>\r\n    <br>\r\n    <span data-cy=\"errorCode\">\r\n      {{ (errorCode$ | async) }}\r\n    </span>\r\n  </p>\r\n\r\n  <p class=\"alert alert-danger mt-3\" role=\"alert\"\r\n     *ngIf=\"(errorMessage$ | async) && !(isLoading$ | async)\">\r\n    <strong>Something happened:</strong> <br>\r\n    <span  data-cy=\"errorMessage\">\r\n      {{ (errorMessage$ | async) }}\r\n    </span>\r\n  </p>\r\n\r\n</div>\r\n\r\n<br>\r\n\r\n"
        },
        {
            "name": "PortalPageComponent",
            "id": "component-PortalPageComponent-0e74d44a70530a9c41c80e96a9e0602e",
            "file": "src/stories/portal-page/portal-page.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-portal-page",
            "styleUrls": [
                "./portal-page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./portal-page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isFixedPosition",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "menuProperties",
                    "defaultValue": "{\r\n    menuItems: [\r\n      {\r\n        value: 'Hjem',\r\n        hasIcon: false\r\n      },\r\n      {\r\n        value: 'To the funeral home page',\r\n        hasIcon: false\r\n      },\r\n      {\r\n        value: 'About portal',\r\n        hasIcon: false\r\n      },\r\n      {\r\n        value: 'Terms',\r\n        hasIcon: false\r\n      },\r\n      {\r\n        value: 'Privacy policy',\r\n        hasIcon: false\r\n      },\r\n      {\r\n        value: 'Cookie policy',\r\n        hasIcon: false\r\n      },\r\n      {\r\n        value: 'Administrator login',\r\n        hasIcon: true\r\n      }\r\n    ],\r\n    label: 'Menu',\r\n    icon: 'lock',\r\n    iconPlace: 'Left',\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "scrollFunction",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-portal-page',\r\n  templateUrl: './portal-page.html',\r\n  styleUrls: ['./portal-page.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport default class PortalPageComponent {\r\n\r\n  menuProperties = {\r\n    menuItems: [\r\n      {\r\n        value: 'Hjem',\r\n        hasIcon: false\r\n      },\r\n      {\r\n        value: 'To the funeral home page',\r\n        hasIcon: false\r\n      },\r\n      {\r\n        value: 'About portal',\r\n        hasIcon: false\r\n      },\r\n      {\r\n        value: 'Terms',\r\n        hasIcon: false\r\n      },\r\n      {\r\n        value: 'Privacy policy',\r\n        hasIcon: false\r\n      },\r\n      {\r\n        value: 'Cookie policy',\r\n        hasIcon: false\r\n      },\r\n      {\r\n        value: 'Administrator login',\r\n        hasIcon: true\r\n      }\r\n    ],\r\n    label: 'Menu',\r\n    icon: 'lock',\r\n    iconPlace: 'Left',\r\n  }\r\n\r\n  isFixedPosition: boolean = false;\r\n\r\n  constructor() {\r\n    window.onscroll = () => this.scrollFunction();\r\n  }\r\n\r\n  scrollFunction() {\r\n\r\n    if (document.body.scrollTop > 70 || document.documentElement.scrollTop > 70) {\r\n      document.getElementById('bannerImage').style.height = \"200px\";\r\n      document.getElementById('bannerImage').style.filter = \"drop-shadow(rgba(0, 0, 0, 0.25) 0px 4px 4px)\";\r\n      \r\n      return setTimeout(() => {\r\n        this.isFixedPosition = true;\r\n      }, 300);\r\n    }\r\n\r\n\r\n    document.getElementById('bannerImage').style.height = \"400px\";\r\n    document.getElementById('bannerImage').style.filter = 'none';\r\n    \r\n    return setTimeout(() => {\r\n      this.isFixedPosition = false;\r\n    }, 300);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".filter-sort-container {\r\n  position: relative;\r\n  width: 75%;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n}\r\n\r\n.main-container {\r\n  margin-top: -6rem;\r\n}\r\n\r\n#adstate-banner {\r\n  margin-top: 3rem;\r\n}\r\n\r\n.adstate-header {\r\n  top: 1rem;\r\n  width: 100%;\r\n  z-index: 1000;\r\n  position: fixed;\r\n  right: 0;\r\n  padding: 0 1rem;\r\n}\r\n\r\n.fixed-hello {\r\n  position: fixed;\r\n  background-color: var(--color-white);\r\n  width: 100%;\r\n  top: 0;\r\n  right: 0px;\r\n  padding: 0 1rem;\r\n  z-index: 1000;\r\n}\r\n",
                    "styleUrl": "./portal-page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 47
            },
            "templateData": "<div id=\"hello\" [ngClass]=\"{ 'fixed-hello': isFixedPosition }\">\r\n\r\n  <div class=\"adstate-header\">\r\n    <div class=\"d-flex justify-content-between\">\r\n      <div>\r\n        <adstate-logo [imageSource]=\"'logo.svg'\"></adstate-logo>\r\n      </div>\r\n\r\n      <div class=\"d-flex\">\r\n        <div class=\"mx-2\">\r\n          <adstate-language-select></adstate-language-select>\r\n        </div>\r\n        <div>\r\n          <adstate-dropdown \r\n            [label]=\"menuProperties.label\" \r\n            [icon]=\"menuProperties.icon\"\r\n            [iconPlace]=\"menuProperties.iconPlace\" \r\n            [items]=\"menuProperties.menuItems\">\r\n          </adstate-dropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div id=\"adstate-banner\" [ngClass]=\"{ 'mt-0': isFixedPosition }\">\r\n    <adstate-banner [imageSource]=\"'/banner/banner4.png'\"></adstate-banner>\r\n  </div>\r\n\r\n  <div style=\"margin-top: -6rem;\">\r\n    <div>\r\n      <adstate-search-box [isLocalSearch]=\"true\" [isCustomSearch]=\"true\"></adstate-search-box>\r\n    </div>\r\n\r\n    <div class=\"filter-sort-container\">\r\n      <div>\r\n        <adstate-advanced-filter></adstate-advanced-filter>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- <div *ngIf=\"isFixedPosition\" style=\"height: 3px; width: 100%; border: 3px solid black;\">\r\n  </div> -->\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n<div *ngIf=\"isFixedPosition\" style=\"height: 400px; width: 100%;\">\r\n\r\n</div>\r\n\r\n<div id=\"search-result\"  >\r\n  <storybook-search-result></storybook-search-result>\r\n</div>\r\n"
        },
        {
            "name": "RadioComponent",
            "id": "component-RadioComponent-3b849a6e8216949187fb0891f16cf47c",
            "file": "src/stories/radio/radio.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-radio-select",
            "styleUrls": [
                "./radio.scss"
            ],
            "styles": [],
            "template": "<label class=\"container\">\n  <input type=\"checkbox\" [checked]=\"checked\" (change)=\"onCheckboxChange()\">\n  <span class=\"checkmark\"></span>\n</label>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "background",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "checked",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "label",
                    "defaultValue": "'Radio select'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "isChecked",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "background",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "checked",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "isChecked",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "label",
                    "defaultValue": "'Radio select'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onCheckboxChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'adstate-radio-select',\r\n  template: `\r\n      <label class=\"container\">\r\n        <input type=\"checkbox\" [checked]=\"checked\" (change)=\"onCheckboxChange()\">\r\n        <span class=\"checkmark\"></span>\r\n      </label>\r\n    `,\r\n  styleUrls: ['./radio.scss']\r\n})\r\nexport default class RadioComponent {\r\n  @Input() checked: boolean = true;\r\n  @Input() label: string = 'Radio select';\r\n  @Input() background: string;\r\n\r\n  @Output() isChecked = new EventEmitter();\r\n\r\n  onCheckboxChange(): void {\r\n    this.checked = !this.checked;\r\n    this.isChecked.emit(this.checked);\r\n  }\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {\r\n  display: block;\r\n  position: relative;\r\n  cursor: pointer;\r\n  font-size: 1.3rem;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n}\r\n\r\n.container input {\r\n  position: absolute;\r\n  opacity: 0;\r\n  cursor: pointer;\r\n  height: 0;\r\n  width: 0;\r\n}\r\n\r\n.checkmark {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 2rem;\r\n  width: 2rem;\r\n  border-radius: 50%;\r\n  background-color: #F2F2F2;\r\n  border: 1px solid #E0E0E0;\r\n}\r\n\r\n.container:hover input~.checkmark {\r\n  background: var(--adstate-primary-gradient);\r\n}\r\n\r\n.container input:checked~.checkmark {\r\n  background: var(--adstate-primary-gradient);\r\n  border: 3px solid #E0E0E0;\r\n}\r\n\r\n.checkmark:after {\r\n  content: \"\";\r\n  position: absolute;\r\n  display: none;\r\n}\r\n\r\n.container input:checked~.checkmark:after {\r\n  display: block;\r\n}\r\n\r\n.container .checkmark:after {\r\n  left: 10px;\r\n  top: 4px;\r\n  width: 6px;\r\n  height: 17px;\r\n  border: solid var(--color-white);\r\n  border-width: 0 2px 2px 0;\r\n  transform: rotate(45deg);\r\n  -webkit-transform: rotate(45deg);\r\n}\r\n\r\n.radio-label {\r\n  padding-top: 5px;\r\n  margin-right: 1rem;\r\n}\r\n",
                    "styleUrl": "./radio.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "RecentDeceasedComponent",
            "id": "component-RecentDeceasedComponent-2b466d0895dfa64b4c0ddc8d1c54ee17",
            "file": "src/stories/recent-deceased/recent-deceased.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-recent-deceased-card",
            "styleUrls": [
                "./recent-deceased.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./recent-deceased.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isChecked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "subTitle",
                    "defaultValue": "'Do not show any deaths until a search is performed.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "title",
                    "defaultValue": "'Empty start page'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isChecked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "subTitle",
                    "defaultValue": "'Do not show any deaths until a search is performed.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "title",
                    "defaultValue": "'Empty start page'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'adstate-recent-deceased-card',\r\n  templateUrl: './recent-deceased.html',\r\n  styleUrls: ['./recent-deceased.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport default class RecentDeceasedComponent {\r\n\r\n  @Input() title: string = 'Empty start page';\r\n  @Input() subTitle: string = 'Do not show any deaths until a search is performed.';\r\n  @Input() isChecked: boolean = false;\r\n\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".admin-card {\r\n  background: var(--color-white);\r\n  box-shadow: var(--adstate-card-shadow);\r\n  border-radius: 1rem;\r\n  padding: 1rem 2rem;\r\n}\r\n\r\n.title {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.subtitle {\r\n  font-size: 1.25rem;\r\n}\r\n",
                    "styleUrl": "./recent-deceased.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"admin-card\">\r\n  <div class=\"title\">\r\n    {{ title }}\r\n  </div>\r\n\r\n  <div class=\"subtitle\">\r\n    {{ subTitle }}\r\n  </div>\r\n\r\n  <div class=\"mt-3\">\r\n    <div class=\"d-flex\">\r\n      <div>Show recent deceased on start page:</div>\r\n      <div class=\"form-check form-switch ms-2\">\r\n        <adstate-toggle [checked]=\"isChecked\"></adstate-toggle>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "RecentDeceasedComponent",
            "id": "component-RecentDeceasedComponent-edfe989d5a062fe4b0ddd83e51780b31-1",
            "file": "src/app/customization-admin/containers/recent-deceased/recent-deceased.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-recent-deceased",
            "styleUrls": [
                "./recent-deceased.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./recent-deceased.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-recent-deceased',\r\n  templateUrl: './recent-deceased.component.html',\r\n  styleUrls: ['./recent-deceased.component.scss']\r\n})\r\nexport class RecentDeceasedComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./recent-deceased.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "RecentDeceasedComponent-1",
            "templateData": "<app-card>\r\n  <div cardTitle> Recent deceased</div>\r\n  <div cardSubtitle>\r\n    Change the lorem ipsum dolor sit amet. Setting are available lorem.\r\n  </div>\r\n  <div cardBody>\r\n\r\n    <div class=\"d-flex\">\r\n      <div>Show recent deceased on start page:</div>\r\n      <div class=\"form-check form-switch ms-2\">\r\n        <app-toggle [checked]=\"true\"></app-toggle>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</app-card>\r\n"
        },
        {
            "name": "RowComponent",
            "id": "component-RowComponent-a50621e1859b817c95176b8b257d4d0f",
            "file": "src/stories/row/row.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-search-result-row",
            "styleUrls": [
                "./row.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./row.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "iconSource",
                    "defaultValue": "iconSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "imageLoader",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleErrorImage",
                    "args": [
                        {
                            "name": "element",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onLoadImage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, Renderer2 } from '@angular/core';\r\nimport { from } from 'rxjs';\r\nimport { iconSource } from '../icon/icon';\r\n\r\n@Component({\r\n  selector: 'storybook-search-result-row',\r\n  templateUrl: './row.html',\r\n  styleUrls: ['./row.scss'],\r\n})\r\nexport default class RowComponent implements OnInit {\r\n  \r\n  @Input() user: any;\r\n\r\n  iconSource = iconSource;\r\n  imageLoader = true;\r\n\r\n  constructor(private renderer: Renderer2) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getData();\r\n  }\r\n\r\n  getData(): void {\r\n    if(this.user) {\r\n      return;\r\n    }\r\n\r\n    from(import('../assets/data.json')).subscribe(data => {\r\n      this.user = data.content[0];\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  handleErrorImage(element): void {\r\n    const imagePlaceHolder = '/default_profile_picture.jpg';\r\n    this.renderer.setAttribute(element, 'src', imagePlaceHolder);\r\n  }\r\n\r\n  onLoadImage(): void {\r\n    this.imageLoader = false;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".information {\r\n  margin-right: 3rem;\r\n}\r\n\r\n.standard-container {\r\n  background: rgba(255, 255, 255, 0.25);\r\n  border-radius: 18px;\r\n}\r\n\r\n.link-disabled {\r\n  cursor: default;\r\n  background-color: var(--color-light-grey);\r\n}\r\n\r\n.link-active {\r\n  background: var(--bs-primary);\r\n}\r\n\r\n.features {\r\n  align-items: center;\r\n}\r\n\r\n.user-thumbnail {\r\n  width: 78px;\r\n  height: 78px;\r\n  border-radius: 50%;\r\n }\r\n\r\n.btn-circle {\r\n  width: 54px;\r\n  height: 54px;\r\n  padding: 10px 16px;\r\n  font-size: 18px;\r\n  line-height: 1.33;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.user-list-item-features {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-start;\r\n  justify-content: space-around;\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  gap: 1em;\r\n\r\n  .user-list-item-feature {\r\n    a {\r\n      display: flex;\r\n      flex-direction: column;\r\n      text-decoration: none;\r\n      justify-content: center;\r\n      align-items: center;\r\n    }\r\n\r\n    span {\r\n      margin-top: 0.4rem;\r\n      font-size: 0.8em;\r\n      line-height: 1;\r\n      text-align: center;\r\n    }\r\n\r\n    img {\r\n      padding: 0.8em;\r\n      width: 3.2em;\r\n      background-color: var(--bs-primary);\r\n      border-radius: 100%;\r\n    }\r\n  }\r\n\r\n  .user-list-item-feature:hover,\r\n  .user-list-item-feature:focus-within {\r\n    opacity: 0.9;\r\n  }\r\n\r\n  .user-list-item-feature a[disabled] {\r\n    cursor: default;\r\n    color: inherit;\r\n    pointer-events: none;\r\n\r\n    img {\r\n      background-color: var(--color-light-grey);\r\n    }\r\n  }\r\n\r\n  .user-list-item-feature-disabled {\r\n    a {\r\n      cursor: default;\r\n      color: inherit;\r\n      pointer-events: none;\r\n    }\r\n\r\n    img {\r\n      background-color: var(--color-light-grey);\r\n    }\r\n  }\r\n}\r\n\r\n.feature-container {\r\n  justify-content: space-evenly;\r\n}\r\n\r\n.feature-name {\r\n  font-size: 0.75rem;\r\n  padding-top: 5px;\r\n  text-align: center;\r\n}\r\n\r\n.row-item {\r\n  cursor: pointer;\r\n  padding: 1em;\r\n  margin-bottom: 0.25rem;\r\n  background-color: var(--color-white);\r\n  box-shadow: 0 0 0 0 rgba(20, 0, 40, 0);\r\n\r\n  &:hover,\r\n  &:focus-within {\r\n    z-index: 1;\r\n    box-shadow: 0 0 1em -0.4em rgba(20, 0, 40, 0.3);\r\n    border-radius: 10px;\r\n\r\n    + .row-item {\r\n      border-top-color: transparent;\r\n    }\r\n  }\r\n\r\n  + .row-item {\r\n    border-top: 1px #eee solid;\r\n\r\n    &:hover,\r\n    &:focus-within {\r\n      border-top-color: transparent;\r\n    }\r\n  }\r\n}\r\n\r\n.btn:focus {\r\n  box-shadow: none;\r\n}\r\n\r\n\r\n.icon-width {\r\n  width: 2rem;\r\n}\r\n\r\n.loading-image {\r\n  height: 78px;\r\n  width: 78px;\r\n}\r\n\r\n\r\n@media only screen and (max-width: 1040px) {\r\n\r\n  .user-list {\r\n    width: 100%;\r\n  }\r\n\r\n  .item {\r\n    height: 110px;\r\n  }\r\n\r\n  .features {\r\n    align-items: flex-start;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 768px) {\r\n  .item {\r\n    flex-direction: column;\r\n    height: 180px;\r\n  }\r\n\r\n  .row-item {\r\n    flex-direction: column;\r\n    height: 180px;\r\n  }\r\n\r\n  .information {\r\n    margin-bottom: 8px;\r\n    margin-right: 0;\r\n    margin-left: 1rem;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 420px) {\r\n  .item {\r\n    height: 220px;\r\n  }\r\n\r\n  .information {\r\n    margin-right: 0;\r\n  }\r\n\r\n  .user-thumbnail {\r\n    height: 70px;\r\n    width: 70px;\r\n  }\r\n\r\n}\r\n",
                    "styleUrl": "./row.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"d-flex justify-content-between align-items-centers row-item user-list\">\r\n  <div class=\"d-flex information\">\r\n\r\n    <img [hidden]=\"!imageLoader\" src=\"/assets/images/loading.gif\" class=\"loading-image\" alt=\"loading image\">\r\n    <img src=\"{{user.photoUrl}}\" #imageElement \r\n         [hidden]=\"imageLoader\" (load)=\"onLoadImage()\"\r\n         (error)=\"handleErrorImage(imageElement)\" \r\n          alt=\"{{user.firstName}} {{user.lastName}} avatar\" \r\n          class=\"user-thumbnail\">\r\n\r\n    <ng-template #noPhoto>\r\n      <div class=\"user-thumbnail\" style=\"background: #C4C4C4\"></div>\r\n    </ng-template>\r\n\r\n    <div class=\"d-flex flex-column mt-2 ml-3 ms-3\" data-cy=\"user-item\">\r\n      <h3 class=\"fs-5 mb-0\">\r\n        <a [href]=\"user.memorialPage.url !== '' ? user.memorialPage.url : ''\" class=\"text-decoration-none\"\r\n          [attr.aria-label]=\"user.firstName + ' ' +  user.lastName + ' (' + user.birthdate + ' - ' + user.deathdate + ')'\">\r\n          {{ user.firstName }} {{ user.lastName }}\r\n        </a>\r\n      </h3>\r\n      <p class=\"mb-0\">\r\n        <span data-cy=\"user-birthdate\">{{ user.birthdate | date:\"YYYY\" }}</span>\r\n        - <span data-cy=\"user-death-date\">{{ user.deathdate | date:\"dd.MM.YYYY\"}}</span>\r\n      </p>\r\n    </div>\r\n  </div>\r\n\r\n  <ul class=\"user-list-item-features\">\r\n    <li class=\"mx-2\">\r\n      <storybook-icon [icon]=\"iconSource.deathNoticeIcon\" \r\n        [label]=\"'Death Notice'\"\r\n        [isDisabled]=\"!user.deathNotice.visible\">\r\n      </storybook-icon>\r\n    </li>\r\n\r\n    <li class=\"mx-2\">\r\n      <storybook-icon [icon]=\"iconSource.candleFilterIcon\" \r\n        [label]=\"'Memorialpage'\"\r\n        [isDisabled]=\"!user.memorialPage.visible\">\r\n      </storybook-icon>\r\n    </li>\r\n\r\n    <li class=\"mx-2\">\r\n      <storybook-icon [icon]=\"iconSource.donationFilterIcon\" \r\n        [label]=\"'Donation'\" \r\n        [isDisabled]=\"!user.donation.visible\">\r\n      </storybook-icon>\r\n    </li>\r\n\r\n    <li class=\"mx-2\">\r\n      <storybook-icon [icon]=\"iconSource.flowerFilterIcon\" \r\n        [label]=\"'Flower'\" \r\n        [isDisabled]=\"!user.flowerShop.visible\">\r\n      </storybook-icon>\r\n    </li>\r\n\r\n  </ul>\r\n</div>\r\n"
        },
        {
            "name": "SaveDiscardChangeComponent",
            "id": "component-SaveDiscardChangeComponent-2fe58af631a8f643c7f79304b6785f6d",
            "file": "src/stories/save-discard-change/save-discard-change.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-save-discard-change",
            "styleUrls": [
                "./save-discard-change.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./save-discard-change.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'#c43eff'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "isDiscarding",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "isSaving",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "discardChanges",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter"
                },
                {
                    "name": "saveSettings",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "color",
                    "defaultValue": "'#c43eff'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "discardChanges",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "isDiscarding",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "isSaving",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "saveSettings",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onDiscardChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSaveSettings",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'adstate-save-discard-change',\r\n  templateUrl: './save-discard-change.component.html',\r\n  styleUrls: ['./save-discard-change.component.scss']\r\n})\r\nexport class SaveDiscardChangeComponent {\r\n\r\n  @Output() discardChanges = new EventEmitter();\r\n  @Output() saveSettings = new EventEmitter();\r\n\r\n  @Input() color: string = '#c43eff';\r\n  @Input() isSaving: boolean = false;\r\n  @Input() isDiscarding: boolean = false;\r\n\r\n  constructor() { }\r\n\r\n  onDiscardChanges(): void {\r\n    this.isDiscarding = true;\r\n    setTimeout(() => { this.isDiscarding = false }, 2000);\r\n    this.discardChanges.emit(true);\r\n  }\r\n\r\n  onSaveSettings(): void {\r\n    this.isSaving = true;\r\n    setTimeout(() => { this.isSaving = false }, 2000);\r\n    this.saveSettings.emit(true);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-adstate {\r\n  display: flex;\r\n  align-items: center;\r\n  width: 180px;\r\n  color: var(--color-white);\r\n  background: var(--adstate-primary-gradient);\r\n\r\n  &:hover {\r\n    box-shadow: var(--adstate-card-shadow);\r\n  }\r\n\r\n  &:focus {\r\n    box-shadow: none;\r\n  }\r\n}\r\n\r\n.btn-adstate-light {\r\n  font-weight: bold;\r\n  color: var(--color-purple-800);\r\n  background: var(--adstate-primary-100);\r\n  border: 1px solid var(--adstate-primary-100);\r\n  border: 1px solid var(--adstate-primary-100);\r\n\r\n  &:hover {\r\n    color: #3d3c3c;\r\n    background: #edebed;\r\n    border: 1px solid #c2c5d5;\r\n    box-shadow: var(--adstate-card-shadow);\r\n  }\r\n\r\n  &:focus {\r\n    box-shadow: none;\r\n  }\r\n}\r\n\r\n.save-settings {\r\n  position: fixed;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  right: 1.5rem;\r\n  bottom: 2rem;\r\n  width: 100%;\r\n  background-color: rgba(255, 255, 255, 0.3);\r\n  backdrop-filter: blur(1rem);\r\n}\r\n",
                    "styleUrl": "./save-discard-change.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "templateData": "<div class=\"save-settings\">\r\n  <button class=\"btn btn-adstate-light me-3\" \r\n          (click)=\"onDiscardChanges()\"\r\n          [disabled]=\"isDiscarding\">\r\n    <img *ngIf=\"isDiscarding\" src=\"spinner.svg\" alt=\"Is discarding changes\">\r\n    Discard changes\r\n  </button>\r\n\r\n  <button class=\"btn btn-adstate text-uppercase\" \r\n          [style.background]=\"color\"\r\n          (click)=\"onSaveSettings()\"\r\n          [disabled]=\"isSaving\"\r\n          >\r\n    <img *ngIf=\"isSaving\" src=\"spinner-white.svg\" class=\"me-2\" alt=\"Is saving changes\">\r\n    <img *ngIf=\"!isSaving\" src=\"save.svg\" class=\"me-2\" alt=\"save settings icon\">\r\n    Save settings \r\n  </button>\r\n</div>\r\n"
        },
        {
            "name": "SaveSettingsComponent",
            "id": "component-SaveSettingsComponent-282b014a166f54d6efcb9768cc7bf4ce",
            "file": "src/app/customization-admin/containers/save-settings/save-settings.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-save-settings",
            "styleUrls": [
                "./save-settings.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./save-settings.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "discardChanges",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                },
                {
                    "name": "saveSettings",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "discardChanges",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "saveSettings",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDiscardChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSaveSettings",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-save-settings',\r\n  templateUrl: './save-settings.component.html',\r\n  styleUrls: ['./save-settings.component.scss'],\r\n  \r\n})\r\nexport class SaveSettingsComponent implements OnInit {\r\n\r\n  @Output() discardChanges = new EventEmitter();\r\n  @Output() saveSettings = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onDiscardChanges(): void {\r\n    this.discardChanges.emit(true);\r\n  }\r\n\r\n  onSaveSettings(): void {\r\n    this.saveSettings.emit(true);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-adstate {\r\n  background: var(--adstate-primary-gradient);\r\n  color: #ffffff;\r\n}\r\n\r\n.btn-adstate-light {\r\n  background: var(--adstate-primary-100);\r\n  color: var(--color-purple-800);\r\n}",
                    "styleUrl": "./save-settings.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\r\n  <button class=\"btn btn-adstate-light me-3\" (click)=\"onDiscardChanges()\">Discard changes</button>\r\n  <button class=\"btn btn-adstate text-uppercase\"\r\n  (click)=\"onSaveSettings()\">\r\n    <i class=\"bi bi-save\"></i> Save settings\r\n  </button>\r\n</div>"
        },
        {
            "name": "SearchAutocompleteComponent",
            "id": "component-SearchAutocompleteComponent-59560f724d8597cc72c51326550c0de1",
            "file": "src/stories/select/search-autocomplete/search-autocomplete.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-select-search-autocomplete",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./search-autocomplete.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hasIconForLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "hasIconForOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "icon",
                    "defaultValue": "'han'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "iconPlace",
                    "defaultValue": "Direction.Left",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "any"
                },
                {
                    "name": "selectedPerson",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "direction",
                    "defaultValue": "Direction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "hasIconForLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "hasIconForOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "icon",
                    "defaultValue": "'han'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "iconPlace",
                    "defaultValue": "Direction.Left",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "mockData",
                    "defaultValue": "from(import('../../assets/mockdata.json'))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "selectedPerson",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { from } from 'rxjs';\r\nimport { Direction } from 'src/stories/directions';\r\n\r\n@Component({\r\n  selector: 'adstate-select-search-autocomplete',\r\n  templateUrl: './search-autocomplete.html',\r\n})\r\nexport default class SearchAutocompleteComponent {\r\n \r\n  @Input() hasIconForLabel: boolean;\r\n  @Input() hasIconForOption: boolean;\r\n  @Input() iconPlace = Direction.Left;\r\n  @Input() icon: string = 'han';\r\n  @Input() selectedPerson: any;\r\n  \r\n  mockData = from(import('../../assets/mockdata.json'));\r\n  // demoData = \r\n\r\n  direction = Direction;\r\n\r\n  constructor() {  }\r\n  \r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "templateData": "<ng-select  [searchable]=\"true\" \r\n            [clearable]=\"false\"\r\n            bindLabel=\"name\"\r\n            [(ngModel)]=\"selectedPerson\"\r\n            [items]=\"(mockData | async).data\">\r\n\r\n    <ng-template ng-label-tmp let-item=\"item\">\r\n          <i *ngIf=\"hasIconForLabel && iconPlace === direction.Left\" class=\"me-2 bi bi-{{ icon }}\"></i>\r\n    \r\n          <span> {{ item.name }} </span>\r\n    \r\n          <i *ngIf=\"hasIconForLabel && iconPlace === direction.Right\" class=\"ms-2 bi bi-{{ icon }}\"></i>\r\n        </ng-template>\r\n    \r\n    \r\n        <ng-template ng-option-tmp let-item=\"item\" let-index=\"index\" let-search=\"searchTerm\">\r\n          <i *ngIf=\"hasIconForOption && iconPlace === direction.Left\" class=\"me-2 bi bi-{{ icon }}\"></i>\r\n    \r\n          <span> {{ item.name }} </span>\r\n    \r\n          <i *ngIf=\"hasIconForOption && iconPlace === direction.Right\" class=\"ms-2 bi bi-{{ icon }}\"></i>\r\n    </ng-template>\r\n      \r\n</ng-select>\r\n"
        },
        {
            "name": "SearchBoxComponent",
            "id": "component-SearchBoxComponent-bc3bd07b22c9afcc7a801b899370f919",
            "file": "src/stories/search/search.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-search-box",
            "styleUrls": [
                "./search.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isCustomSearch",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "isLocalSearch",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'Enter a name, year or place'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "searchLabel",
                    "defaultValue": "'Search'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isCustomSearch",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "isLocal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "isLocalSearch",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "isLocationExpanded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "isNational",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "mockdata",
                    "defaultValue": "from(import('../assets/mockdata.json'))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'Enter a name, year or place'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "searchLabel",
                    "defaultValue": "'Search'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "onExpandLocalSelect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onHideLocalSelect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSearchBox",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, ViewEncapsulation} from '@angular/core';\r\nimport { from } from 'rxjs';\r\n@Component({\r\n  selector: 'adstate-search-box',\r\n  templateUrl: './search.html',\r\n  styleUrls: ['./search.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SearchBoxComponent {\r\n\r\n  @Input() searchLabel: string = 'Search';\r\n  @Input() placeholder: string = 'Enter a name, year or place';\r\n  @Input() isLocalSearch: boolean;\r\n  @Input() isCustomSearch: boolean;\r\n  \r\n  mockdata = from(import('../assets/mockdata.json'));\r\n\r\n  isLocal: boolean;\r\n  isNational: boolean;\r\n\r\n  selected: string;\r\n\r\n  isLocationExpanded = false;\r\n\r\n  constructor( ) {}\r\n\r\n  onSearchBox(value: string): void { }\r\n\r\n  onExpandLocalSelect(): void {\r\n    this.isLocationExpanded = true;\r\n  }\r\n\r\n  onHideLocalSelect(): void {\r\n    this.isLocationExpanded = false;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".search-banner__image {\r\n  border-radius: 1rem;\r\n}\r\n\r\n.search-box {\r\n\r\n  height: 136px;\r\n  padding: 2rem 4rem;\r\n  position: relative;\r\n  background: var(--color-white);\r\n  width: 75%;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n  border-radius: 0.5rem;\r\n  box-shadow: var(--adstate-card-shadow);\r\n  display: flex;\r\n  justify-self: space-between;\r\n\r\n\r\n  padding-bottom: 0;\r\n\r\n  .search-label {\r\n    &::after {\r\n      content: '';\r\n      border-bottom: 9px solid var(--adstate-primary-200);\r\n      width: 100%;\r\n      display: block;\r\n      margin-top: -16px;\r\n    }\r\n  }\r\n\r\n  .search-label-text {\r\n    padding: 0 0.25rem;\r\n    font-weight: bold;\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  .search-box__input {\r\n    border-top: 0;\r\n    border-left: 0;\r\n    border-right: 0;\r\n    width: 95%;\r\n    height: 38px;\r\n    outline: none;\r\n    border-bottom-color: var(--color-grey);\r\n    background: var(--color-white);\r\n  }\r\n\r\n  .search-icon {\r\n    font-size: 2.5rem;\r\n  }\r\n\r\n  .search-button {\r\n    height: 80px;\r\n    width: 80px;\r\n    border-radius: 1rem;\r\n  }\r\n}\r\n\r\n.btn {\r\n  border-radius: 0.5rem;\r\n}\r\n\r\n.local-container {\r\n  display: flex;\r\n  align-items: stretch;\r\n}\r\n\r\n.local-value {\r\n\r\n  flex-grow: 2;\r\n  position: relative;\r\n  padding-left: 0.75rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    background: var(--color-black);\r\n    bottom: -7px;\r\n    left: 2.25rem;\r\n    width: 75%;\r\n    border: 1px solid var(--color-grey);\r\n  }\r\n}\r\n\r\n.location {\r\n  width: 217px;\r\n  margin-left: 1rem;\r\n  margin-right: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  &:hover {\r\n    filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\r\n  }\r\n}\r\n\r\n.location-expanded {\r\n  border-radius: 10px;\r\n  background: var(--color-white);\r\n  margin: 0 1rem;\r\n  padding: 1rem 0.75rem;\r\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\r\n  transform: translateX(0px) translateY(-16px);\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  width: 217px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .local {\r\n    width: 100%;\r\n    height: 38px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    span {\r\n      position: relative;\r\n      width: 100%;\r\n\r\n      &::after {\r\n        content: \"\";\r\n        position: absolute;\r\n        height: 2px;\r\n        background: var(--color-grey);\r\n        bottom: -7px;\r\n        left: 0;\r\n        width: 97%;\r\n      }\r\n    }\r\n  }\r\n\r\n  .national {\r\n    padding-left: 1.5rem;\r\n    padding-top: 0.25rem;\r\n\r\n    &:hover {\r\n      font-weight: bold;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n.custom-search {\r\n  width: 95%;\r\n}\r\n",
                    "styleUrl": "./search.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 24
            },
            "templateData": "<ng-template #customItemTemplate let-model=\"item\" let-index=\"index\">\r\n  <p>{{model.name }}</p>\r\n</ng-template>\r\n\r\n\r\n\r\n<div class=\"search-box mb-4\">\r\n  <div class=\"w-100\">\r\n    <label class=\"form-label search-label\">\r\n      <span class=\"search-label-text\">{{ searchLabel }}</span>\r\n    </label>\r\n    <div class=\"d-flex \">\r\n\r\n      <input *ngIf=\"!isCustomSearch\" type=\"text\" class=\"search-box__input\" placeholder=\"{{ placeholder }}\"\r\n        [(ngModel)]=\"selected\">\r\n\r\n      <div *ngIf=\"isCustomSearch\" class=\"custom-search\">\r\n        <adstate-custom-search-input></adstate-custom-search-input>\r\n      </div>\r\n\r\n      <div class=\"local-container\">\r\n\r\n        <div *ngIf=\"isLocalSearch && !isLocationExpanded\" class=\"location\" (click)=\"onExpandLocalSelect()\">\r\n          <div class=\"local-value\">\r\n\r\n            <div>\r\n              <i class=\"bi bi-geo-alt me-1\"></i>\r\n              <span *ngIf=\"isLocal\"> Local </span>\r\n              <span *ngIf=\"!isLocal\"> National </span>\r\n            </div>\r\n\r\n            <i class=\"bi bi-chevron-down\"></i>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"location-expanded\" [ngClass]=\"isLocationExpanded ? 'd-flex' : 'd-none'\"\r\n          (click)=\"onHideLocalSelect()\">\r\n          <div class=\"local\">\r\n            <i class=\"bi bi-geo-alt me-2\"></i>\r\n            <span class=\"fw-bold\" *ngIf=\"isLocal\"> Local </span>\r\n            <span class=\"fw-bold\" *ngIf=\"!isLocal\"> National </span>\r\n          </div>\r\n          <div class=\"national\" *ngIf=\"isLocal\" (click)=\"isLocal = false\"> National </div>\r\n          <div class=\"national\" *ngIf=\"!isLocal\" (click)=\"isLocal = true\"> Local </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <button class=\"btn btn-primary search-button\" (click)=\"onSearchBox('abc')\">\r\n    <i class=\"bi bi-search search-icon\"></i>\r\n  </button>\r\n</div>\r\n"
        },
        {
            "name": "SearchComponent",
            "id": "component-SearchComponent-c223bce819eb9179b17a9f1b9e649f07",
            "file": "src/app/customization-admin/containers/search/search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search",
            "styleUrls": [
                "./search.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "types",
                    "defaultValue": "[\r\n    {\r\n      name: 'Funeral home',\r\n      isAvailable: false,\r\n      isDefault: false\r\n    },\r\n    {\r\n      name: 'National search',\r\n      isAvailable: true,\r\n      isDefault: true\r\n    },\r\n    {\r\n      name: 'Global search',\r\n      isAvailable: true,\r\n      isDefault: false\r\n    }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AdminSearchTypeModel[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\r\nimport {AdminSearchTypeModel} from '../../models/admin-search-type.model';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n\r\n  types: AdminSearchTypeModel[] = [\r\n    {\r\n      name: 'Funeral home',\r\n      isAvailable: false,\r\n      isDefault: false\r\n    },\r\n    {\r\n      name: 'National search',\r\n      isAvailable: true,\r\n      isDefault: true\r\n    },\r\n    {\r\n      name: 'Global search',\r\n      isAvailable: true,\r\n      isDefault: false\r\n    }\r\n  ];\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".float-right {\r\n  float: right;\r\n}\r\n\r\n.table-row {\r\n  height: 50px;\r\n}\r\n",
                    "styleUrl": "./search.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 27
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-card>\r\n  <div cardTitle> Search</div>\r\n  <div cardSubtitle>\r\n    Change the lorem ipsum dolor sit amet. Setting are available lorem.\r\n  </div>\r\n  <div cardBody>\r\n    <table class=\"table table-borderless\">\r\n      <thead>\r\n      <tr>\r\n        <th class=\"ps-0\">Type</th>\r\n        <th>Available</th>\r\n        <th class=\"text-center\">Default</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr *ngFor=\"let type of types\" class=\"table-row\">\r\n        <td class=\"ps-0\">{{ type.name }}</td>\r\n        <td class=\"pt-0\">\r\n          <app-toggle [checked]=\"type.isAvailable\"></app-toggle>\r\n        </td>\r\n        <td class=\"float-right pt-0\">\r\n          <app-checkbox [checked]=\"type.isDefault\"></app-checkbox>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</app-card>\r\n"
        },
        {
            "name": "SearchComponent",
            "id": "component-SearchComponent-ef891257ec256cf07c8a87f2cd7d77f9-1",
            "file": "src/app/memorial/containers/search/search.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search",
            "styleUrls": [
                "./search.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "searchBackground",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cities",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "citiesAndRegions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Array<any>>",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "decorators": [
                        {
                            "name": "Select",
                            "stringifiedArguments": "MemorialSelectors.citiesAndRegions"
                        }
                    ]
                },
                {
                    "name": "currentLanguage",
                    "defaultValue": "'en'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "isCollapsed",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "isLoadingRegion",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "isLoadingRegion$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "decorators": [
                        {
                            "name": "Select",
                            "stringifiedArguments": "MemorialSelectors.isLoadingRegion"
                        }
                    ]
                },
                {
                    "name": "localSearchForm",
                    "defaultValue": "this.formBuilder.group({\r\n    firstName: [''],\r\n    lastName: [''],\r\n    born: [''],\r\n    death: [''],\r\n    region: [ {id: 0, name: 'All countries'} ],\r\n    city: [ { id: 0, name: 'All countries', cities: [] } ],\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "ngSelectComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgSelectComponent",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'citySelect'"
                        }
                    ]
                },
                {
                    "name": "regions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "searchBackground",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "compareSelectedValue",
                    "args": [
                        {
                            "name": "item",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "selected",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "selected",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSearchBox",
                    "args": [
                        {
                            "name": "searchString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "searchString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSelectCity",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSelectRegion",
                    "args": [
                        {
                            "name": "region",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "region",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleAdvancedSearch",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\r\nimport {FormBuilder} from '@angular/forms';\r\n\r\nimport {Observable} from 'rxjs';\r\nimport {Select, Store} from '@ngxs/store';\r\nimport {debounceTime} from 'rxjs/operators';\r\n\r\nimport {MemorialActions} from '../../store/memorial.actions';\r\nimport {MemorialSelectors} from '../../store/memorial.selectors';\r\nimport {NgSelectComponent} from '@ng-select/ng-select';\r\nimport {SearchParam} from '../../models/search-param.model';\r\nimport {DateHelperService} from '../../services/date-helper';\r\nimport {TranslocoService} from '@ngneat/transloco';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SearchComponent implements OnInit {\r\n\r\n  localSearchForm = this.formBuilder.group({\r\n    firstName: [''],\r\n    lastName: [''],\r\n    born: [''],\r\n    death: [''],\r\n    region: [ {id: 0, name: 'All countries'} ],\r\n    city: [ { id: 0, name: 'All countries', cities: [] } ],\r\n  });\r\n\r\n  isCollapsed = false;\r\n\r\n  isLoadingRegion = false;\r\n  currentLanguage = 'en';\r\n  regions = [];\r\n  cities = [];\r\n\r\n  @Select(MemorialSelectors.citiesAndRegions) citiesAndRegions$: Observable<Array<any>>;\r\n  @Select(MemorialSelectors.isLoadingRegion) isLoadingRegion$: Observable<boolean>;\r\n\r\n  @Input() searchBackground: string;\r\n  @ViewChild('citySelect') ngSelectComponent: NgSelectComponent;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private store: Store,\r\n    private dateHelper: DateHelperService,\r\n    private translationService: TranslocoService\r\n  ) {\r\n    this.store.dispatch(new MemorialActions.GetCityAndRegion());\r\n\r\n    this.citiesAndRegions$.subscribe(value => {\r\n      if (value) {\r\n        this.regions = value;\r\n      }\r\n    });\r\n\r\n    this.currentLanguage = this.translationService.getActiveLang();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.localSearchForm.get('born').valueChanges\r\n      .pipe(debounceTime(500))\r\n      .subscribe();\r\n\r\n    this.localSearchForm.get('death').valueChanges\r\n      .pipe(debounceTime(500))\r\n      .subscribe();\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const formValue = this.localSearchForm.value;\r\n    const birthdateFromTo = this.dateHelper.getDateRangeFromString(formValue.born);\r\n    const deathDateFromTo = this.dateHelper.getDateRangeFromString(formValue.death);\r\n\r\n    const searchParam: SearchParam = {\r\n      firstname: formValue.firstName,\r\n      lastname: formValue.lastName,\r\n      'birthDate.dateFrom': birthdateFromTo ? birthdateFromTo[0] : undefined,\r\n      'birthDate.dateTo': birthdateFromTo ? birthdateFromTo[1] : undefined,\r\n      'deathDate.dateFrom': deathDateFromTo ? deathDateFromTo[0] : undefined,\r\n      'deathDate.dateTo': deathDateFromTo ? deathDateFromTo[1] : undefined,\r\n      regionId: formValue.region?.id !== 0 ? formValue.region?.id : undefined,\r\n      cityId: formValue.city !== 0 ? formValue?.city?.id : undefined,\r\n    };\r\n\r\n    this.store.dispatch(new MemorialActions.SearchLocally(searchParam)).subscribe();\r\n  }\r\n\r\n  onSelectRegion(region): void {\r\n    const citiesByRegion = this.regions.find(reg => reg.id === region.id);\r\n    this.ngSelectComponent.handleClearClick();\r\n\r\n    this.cities = [\r\n      {id: 0, name: 'All cities'},\r\n      ...citiesByRegion.cities\r\n    ];\r\n\r\n    this.localSearchForm.patchValue({\r\n      region: region.id === 0 ? {id: 0, name: 'All countries'} : {...region},\r\n      city: {id: 0, name: 'All cities'},\r\n    });\r\n  }\r\n\r\n  compareSelectedValue(item, selected): boolean {\r\n    return item.id === selected.id;\r\n  }\r\n\r\n  onSelectCity(event): void {\r\n    this.localSearchForm.patchValue({\r\n      city: event\r\n    });\r\n  }\r\n\r\n  toggleAdvancedSearch(): void {\r\n    this.isCollapsed = !this.isCollapsed;\r\n  }\r\n\r\n  onSearchBox(searchString: string): void {\r\n    this.store.dispatch(new MemorialActions.SearchBox(searchString)).subscribe();\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "$adstate-main-color: var(--bs-primary);\r\n$portal-radius: 1rem;\r\n\r\n.search-banner__image {\r\n  border-radius: $portal-radius;\r\n}\r\n\r\n.search-box {\r\n  padding: 2rem 4rem;\r\n  position: relative;\r\n  top: -6rem;\r\n  background: white;\r\n  width: 75%;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n  border-radius: 0.5rem;\r\n  box-shadow: var(--adstate-card-shadow);\r\n  display: flex;\r\n  justify-self: space-between;\r\n\r\n  .search-label {\r\n    &::after {\r\n      content: '';\r\n      border-bottom: 9px solid #EAD9F2;\r\n      width: 100%;\r\n      display: block;\r\n      margin-top: -16px;\r\n    }\r\n  }\r\n\r\n  .search-label-text {\r\n    padding: 0 0.25rem;\r\n    font-weight: bold;\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  .search-box__input {\r\n    border-top: 0;\r\n    border-left: 0;\r\n    border-right: 0;\r\n    width: 90%;\r\n    outline: none;\r\n    border-bottom-color: #828282;\r\n  }\r\n\r\n  .search-icon {\r\n    font-size: 2.5rem;\r\n  }\r\n\r\n  .search-button {\r\n    height: 80px;\r\n    width: 80px;\r\n    border-radius: $portal-radius;\r\n  }\r\n}\r\n\r\n.advanced-search {\r\n  position: relative;\r\n  top: -6rem;\r\n  width: 75%;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n}\r\n\r\n.btn {\r\n  border-radius: 0.5rem;\r\n}\r\n\r\n.btn-advanced-search {\r\n  border-radius: 0.5rem;\r\n  border: 1px solid #592673;\r\n  padding: 0rem 0.5rem;\r\n  color: #592673;\r\n}\r\n\r\n\r\n.btn-advanced-search:hover {\r\n  background: rgb(244 236 249);\r\n  border: 1px solid #59267308;\r\n  color: #592673;\r\n  box-shadow: none;\r\n  filter: drop-shadow(-2px 4px 2px rgb(244 236 249));\r\n}\r\n\r\n.btn-advanced-search:focus {\r\n  background: #9540BF;\r\n  border: 1px solid #59267308;\r\n  color: #ffffff;\r\n  box-shadow: none;\r\n  filter: drop-shadow(-2px 4px 2px #f4ecf9);\r\n}\r\n\r\n\r\n.ng-select.ng-select-single .ng-select-container {\r\n  height: 63px;\r\n\r\n  .ng-input input {\r\n    height: 63px;\r\n  }\r\n}\r\n\r\n.name-input {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  flex-direction: column;\r\n}\r\n\r\n.search-bar {\r\n  &:focus {\r\n    box-shadow: none;\r\n    border-color: #d8dde2;\r\n  }\r\n}\r\n\r\n.input-group-search {\r\n  border-top-left-radius: 20px;\r\n  border-bottom-left-radius: 20px;\r\n}\r\n\r\n.input-group-micro {\r\n  border-top-right-radius: 20px;\r\n  border-bottom-right-radius: 20px;\r\n}\r\n\r\n.born-input {\r\n  max-width: 0;\r\n  padding: 0.1px;\r\n  border: none;\r\n}\r\n\r\n.adstate-common {\r\n  background: $adstate-main-color;\r\n  color: white;\r\n}\r\n\r\n.theme-adstate {\r\n\r\n  .bs-datepicker-head {\r\n    background-color: $adstate-main-color;\r\n  }\r\n\r\n  .bs-datepicker-body table {\r\n\r\n    th {\r\n      color: $adstate-main-color;\r\n    }\r\n\r\n    td {\r\n      color: $adstate-main-color;\r\n    }\r\n\r\n    td.week span {\r\n      color: $adstate-main-color;\r\n    }\r\n\r\n    td span.selected {\r\n      background-color: $adstate-main-color;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n.lds-ellipsis {\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 32px;\r\n  height: 32px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.lds-ellipsis div {\r\n  position: absolute;\r\n  top: 14px;\r\n  width: 8px;\r\n  height: 8px;\r\n  border-radius: 50%;\r\n  background: #c2c2c2;\r\n  animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n}\r\n\r\n.lds-ellipsis div:nth-child(1) {\r\n  left: -9px;\r\n  animation: lds-ellipsis1 0.6s infinite;\r\n}\r\n\r\n.lds-ellipsis div:nth-child(2) {\r\n  left: -10px;\r\n  animation: lds-ellipsis2 0.6s infinite;\r\n}\r\n\r\n.lds-ellipsis div:nth-child(3) {\r\n  left: 2px;\r\n  animation: lds-ellipsis2 0.6s infinite;\r\n}\r\n\r\n.lds-ellipsis div:nth-child(4) {\r\n  left: 24px;\r\n  animation: lds-ellipsis3 0.6s infinite;\r\n}\r\n\r\n\r\n@media only screen and (max-width: 766px) {\r\n  .container {\r\n    //max-width: 100%;\r\n  }\r\n}\r\n\r\n\r\n@media only screen and (max-width: 766px) {\r\n  .sort-filter-container {\r\n    flex-direction: column;\r\n  }\r\n}\r\n\r\n\r\n\r\n@keyframes lds-ellipsis1 {\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n}\r\n\r\n@keyframes lds-ellipsis3 {\r\n  0% {\r\n    transform: scale(1);\r\n  }\r\n\r\n  100% {\r\n    transform: scale(0);\r\n  }\r\n}\r\n\r\n@keyframes lds-ellipsis2 {\r\n  0% {\r\n    transform: translate(0, 0);\r\n  }\r\n\r\n  100% {\r\n    transform: translate(19px, 0);\r\n  }\r\n}\r\n",
                    "styleUrl": "./search.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dateHelper",
                        "type": "DateHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translationService",
                        "type": "TranslocoService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 43,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dateHelper",
                        "type": "DateHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translationService",
                        "type": "TranslocoService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "SearchComponent-1",
            "templateData": "<form [formGroup]=\"localSearchForm\" class=\"container search\" (ngSubmit)=\"onSubmit()\">\r\n\r\n  <div>\r\n\r\n    <div class=\"search-banner\">\r\n      <img src=\"assets/images/banner4.png\" class=\"search-banner__image w-100\" alt=\"\">\r\n    </div>\r\n\r\n\r\n    <div class=\"search-box mb-4\">\r\n      <div class=\"w-100\">\r\n        <label class=\"form-label search-label\">\r\n          <span class=\"search-label-text\">Search</span>\r\n        </label>\r\n        <div class=\"d-flex justify-content-between\">\r\n          <input type=\"text\" class='search-box__input' placeholder=\"Enter a name, year or place\">\r\n        </div>\r\n      </div>\r\n\r\n      <button class=\"btn btn-primary search-button\" (click)=\"onSearchBox('abc')\">\r\n        <i class=\"bi bi-search search-icon\"></i>\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"advanced-search\">\r\n\r\n      <div class=\"d-flex justify-content-end mb-3\">\r\n        <button type=\"button\" id=\"button-advanced-search\" \r\n          class=\"btn btn-advanced-search mx-3\"\r\n          (click)=\"toggleAdvancedSearch();\" [attr.aria-expanded]=\"!isCollapsed\" aria-controls=\"collapseBasic\"\r\n          data-cy=\"advance-search\">\r\n          {{ 'portalPage.button.advancedSearch' | transloco }}\r\n          <i class=\"bi bi-plus\" *ngIf=\"isCollapsed\"></i>\r\n          <i class=\"bi bi-dash\" *ngIf=\"!isCollapsed\"></i>\r\n        </button>\r\n\r\n        <app-filter></app-filter>\r\n        <app-sort class=\"ms-3\"></app-sort>\r\n      </div>\r\n\r\n      <section class=\"container-fluid p-0\" id=\"collapseBasic\" [collapse]=\"isCollapsed\" [isAnimated]=\"true\"\r\n        aria-labelledby=\"button-advanced-search\">\r\n\r\n        <div>\r\n          <div class=\"row mb-3\">\r\n            <div class=\"col-sm-12 col-md-3 mb-2\">\r\n              <input type=\"text\" id=\"firstName\" placeholder=\"First name\" class=\"form-control adstate-input shadow-none\"\r\n                data-cy=\"first-name-input\" formControlName=\"firstName\">\r\n            </div>\r\n\r\n            <div class=\"col-sm-12 col-md-3 mb-2\">\r\n              <input type=\"text\" id=\"lastname\" placeholder=\"Last name\" class=\"form-control adstate-input shadow-none\"\r\n                data-cy=\"last-name-input\" formControlName=\"lastName\">\r\n            </div>\r\n\r\n            <div class=\"col-sm-12 col-md-3 mb-2\">\r\n              <app-date-range labelForId=\"portalPage-inputField-birthdateRange\" [locale]=\"currentLanguage\"\r\n                [placeholder]=\"'Born Date'\" data-cy=\"birthdate-range-select\" formControlName=\"born\"></app-date-range>\r\n            </div>\r\n\r\n            <div class=\"col-sm-12 col-md-3 mb-2\">\r\n              <app-date-range labelForId=\"portalPage-inputField-deathDateRange\" [locale]=\"currentLanguage\"\r\n                [placeholder]=\"'Death Date'\" data-cy=\"death-date-range-select\" formControlName=\"death\"></app-date-range>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"d-flex\">\r\n          <div class=\"mb-3 w-100 pe-3\">\r\n            <ng-select class=\"adstate-input\" (change)=\"onSelectRegion($event)\" [items]=\"citiesAndRegions$ | async\"\r\n              [loading]=\"isLoadingRegion$ | async\" [editableSearchTerm]=\"true\" [compareWith]=\"compareSelectedValue\"\r\n              loadingText=\"Loading data ...\" bindLabel=\"name\" bindValue=\"id\" formControlName=\"region\">\r\n              <ng-template ng-loadingspinner-tmp>\r\n                <div class=\"lds-ellipsis\">\r\n                  <div></div>\r\n                  <div></div>\r\n                  <div></div>\r\n                  <div></div>\r\n                </div>\r\n              </ng-template>\r\n            </ng-select>\r\n\r\n          </div>\r\n\r\n          <div class=\"mb-3 w-100\">\r\n            <ng-select class=\"adstate-input\" labelForId=\"portalPage-inputField-city\" [items]=\"cities\"\r\n              [editableSearchTerm]=\"true\" [compareWith]=\"compareSelectedValue\" (change)=\"onSelectCity($event)\"\r\n              loadingText=\"Loading data ...\" formControlName=\"city\" #citySelect bindLabel=\"name\" bindValue=\"id\">\r\n            </ng-select>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"d-flex justify-content-end\">\r\n          <button type=\"submit\" class=\"btn btn-primary\" [attr.aria-label]=\"'portalPage.button.search' | transloco\"\r\n            data-cy=\"search-button\">\r\n            <i class=\"bi bi-search\"></i>\r\n          </button>\r\n\r\n          <button type=\"button\" class=\"btn btn-outline-primary mx-3\">\r\n            Clear\r\n          </button>\r\n\r\n          <div class=\"btn btn-primary\">\r\n            1 202 502 results\r\n          </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n      </section>\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n</form>\r\n"
        },
        {
            "name": "SearchResultComponent",
            "id": "component-SearchResultComponent-3d3f48b1523eea0a412df45518170cb3",
            "file": "src/stories/search-result/search-result.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-search-result",
            "styleUrls": [
                "./search-result.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search-result.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "background",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number"
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "isDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "isOneRow",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "unit",
                    "defaultValue": "'rem'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "background",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "iconSource",
                    "defaultValue": "iconSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "imageLoader",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "isDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "isOneRow",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "unit",
                    "defaultValue": "'rem'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "users",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getStyles",
                    "args": [],
                    "optional": false,
                    "returnType": "{ width: string; height: string; backgroundColor: string; }",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleErrorImage",
                    "args": [
                        {
                            "name": "element",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onLoadImage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Renderer2 } from '@angular/core';\r\nimport { from } from 'rxjs';\r\nimport { iconSource } from '../icon/icon';\r\n\r\n@Component({\r\n  selector: 'storybook-search-result',\r\n  templateUrl: './search-result.html',\r\n  styleUrls: ['./search-result.scss'],\r\n})\r\nexport default class SearchResultComponent {\r\n  @Input() icon: string;\r\n  @Input() isDisabled: boolean;\r\n  @Input() label: string;\r\n  @Input() background: string;\r\n  @Input() height: number;\r\n  @Input() width: number;\r\n  @Input() unit: string = 'rem';\r\n  @Input() isOneRow: boolean = true;\r\n\r\n  users = [];\r\n  iconSource = iconSource;\r\n  imageLoader = true;\r\n  \r\n  constructor(private renderer: Renderer2) {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    from(import('../assets/data.json')).subscribe(data => {\r\n      this.users = data.content;\r\n    })\r\n  }\r\n\r\n  getStyles() {\r\n    return {\r\n      width: `${this.width}${this.unit}`,\r\n      height: `${this.height}${this.unit}`,\r\n      backgroundColor: this.background,\r\n    }\r\n  }\r\n\r\n  handleErrorImage(element): void {\r\n    const imagePlaceHolder = '/default_profile_picture.jpg';\r\n    this.renderer.setAttribute(element, 'src', imagePlaceHolder);\r\n  }\r\n\r\n  onLoadImage(): void {\r\n    this.imageLoader = false;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".information {\r\n  margin-right: 3rem;\r\n}\r\n\r\n.user-list {\r\n  width: 1000px;\r\n}\r\n\r\n.standard-container {\r\n  background: rgba(255, 255, 255, 0.25);\r\n  border-radius: 18px;\r\n}\r\n\r\n.link-disabled {\r\n  cursor: default;\r\n  background-color: var(--color-light-grey);\r\n}\r\n\r\n.link-active {\r\n  background: var(--bs-primary);\r\n}\r\n\r\n.features {\r\n  align-items: center;\r\n}\r\n\r\n.user-thumbnail {\r\n  width: 78px;\r\n  height: 78px;\r\n  border-radius: 50%;\r\n }\r\n\r\n.btn-circle {\r\n  width: 54px;\r\n  height: 54px;\r\n  padding: 10px 16px;\r\n  font-size: 18px;\r\n  line-height: 1.33;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.user-list-item-features {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-start;\r\n  justify-content: space-around;\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  gap: 1em;\r\n\r\n  .user-list-item-feature {\r\n    a {\r\n      display: flex;\r\n      flex-direction: column;\r\n      text-decoration: none;\r\n      justify-content: center;\r\n      align-items: center;\r\n    }\r\n\r\n    span {\r\n      margin-top: 0.4rem;\r\n      font-size: 0.8em;\r\n      line-height: 1;\r\n      text-align: center;\r\n    }\r\n\r\n    img {\r\n      padding: 0.8em;\r\n      width: 3.2em;\r\n      background-color: var(--bs-primary);\r\n      border-radius: 100%;\r\n    }\r\n  }\r\n\r\n  .user-list-item-feature:hover,\r\n  .user-list-item-feature:focus-within {\r\n    opacity: 0.9;\r\n  }\r\n\r\n  .user-list-item-feature a[disabled] {\r\n    cursor: default;\r\n    color: inherit;\r\n    pointer-events: none;\r\n\r\n    img {\r\n      background-color: var(--color-light-grey);\r\n    }\r\n  }\r\n\r\n  .user-list-item-feature-disabled {\r\n    a {\r\n      cursor: default;\r\n      color: inherit;\r\n      pointer-events: none;\r\n    }\r\n\r\n    img {\r\n      background-color: var(--color-light-grey);\r\n    }\r\n  }\r\n}\r\n\r\n.feature-container {\r\n  justify-content: space-evenly;\r\n}\r\n\r\n.feature-name {\r\n  font-size: 0.75rem;\r\n  padding-top: 5px;\r\n  text-align: center;\r\n}\r\n\r\n.row-item {\r\n  cursor: pointer;\r\n  padding: 1em;\r\n  margin-bottom: 0.25rem;\r\n  background-color: var(--color-white);\r\n  box-shadow: 0 0 0 0 rgba(20, 0, 40, 0);\r\n\r\n  &:hover,\r\n  &:focus-within {\r\n    z-index: 1;\r\n    box-shadow: 0 0 1em -0.4em rgba(20, 0, 40, 0.3);\r\n    border-radius: 10px;\r\n\r\n    + .row-item {\r\n      border-top-color: transparent;\r\n    }\r\n  }\r\n\r\n  + .row-item {\r\n    border-top: 1px #eee solid;\r\n\r\n    &:hover,\r\n    &:focus-within {\r\n      border-top-color: transparent;\r\n    }\r\n  }\r\n}\r\n\r\n.btn:focus {\r\n  box-shadow: none;\r\n}\r\n\r\n\r\n.icon-width {\r\n  width: 2rem;\r\n}\r\n\r\n.loading-image {\r\n  height: 78px;\r\n  width: 78px;\r\n}\r\n\r\n\r\n@media only screen and (max-width: 1040px) {\r\n\r\n  .user-list {\r\n    width: 100%;\r\n  }\r\n\r\n  .item {\r\n    height: 110px;\r\n  }\r\n\r\n  .features {\r\n    align-items: flex-start;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 768px) {\r\n  .item {\r\n    flex-direction: column;\r\n    height: 180px;\r\n  }\r\n\r\n  .information {\r\n    margin-bottom: 8px;\r\n    margin-right: 0;\r\n    margin-left: 1rem;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 420px) {\r\n  .item {\r\n    height: 220px;\r\n  }\r\n\r\n  .information {\r\n    margin-right: 0;\r\n  }\r\n\r\n  .user-thumbnail {\r\n    height: 70px;\r\n    width: 70px;\r\n  }\r\n\r\n}\r\n",
                    "styleUrl": "./search-result.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"container d-flex justify-content-center\"\r\n     *ngIf=\"users && users.length > 0\">\r\n\r\n  <div class=\"p-0 w-100\">\r\n    <storybook-search-result-row \r\n      *ngFor=\"let user of users | slice : 0 : end; \r\n              let i = index; \r\n              let index=index;\r\n              trackBy: trackByMethod;\"\r\n      [user]=\"user\">\r\n    </storybook-search-result-row>\r\n  </div>\r\n\r\n</div>\r\n\r\n"
        },
        {
            "name": "SearchSettingsComponent",
            "id": "component-SearchSettingsComponent-7a3154851534a7ca972d2df90453248f",
            "file": "src/stories/search-settings/search-settings.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-search-settings-card",
            "styleUrls": [
                "./search-settings.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search-settings.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "types",
                    "defaultValue": "[\r\n    {\r\n      name: 'Funeral home',\r\n      isAvailable: true,\r\n      isDefault: true\r\n    },\r\n    {\r\n      name: 'National search',\r\n      isAvailable: true,\r\n      isDefault: true\r\n    },\r\n    {\r\n      name: 'Global search',\r\n      isAvailable: true,\r\n      isDefault: true\r\n    }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "{}"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "types",
                    "defaultValue": "[\r\n    {\r\n      name: 'Funeral home',\r\n      isAvailable: true,\r\n      isDefault: true\r\n    },\r\n    {\r\n      name: 'National search',\r\n      isAvailable: true,\r\n      isDefault: true\r\n    },\r\n    {\r\n      name: 'Global search',\r\n      isAvailable: true,\r\n      isDefault: true\r\n    }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'adstate-search-settings-card',\r\n  templateUrl: './search-settings.html',\r\n  styleUrls: ['./search-settings.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport default class SearchSettingsComponent {\r\n\r\n  @Input() types = [\r\n    {\r\n      name: 'Funeral home',\r\n      isAvailable: true,\r\n      isDefault: true\r\n    },\r\n    {\r\n      name: 'National search',\r\n      isAvailable: true,\r\n      isDefault: true\r\n    },\r\n    {\r\n      name: 'Global search',\r\n      isAvailable: true,\r\n      isDefault: true\r\n    }\r\n  ];\r\n\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".admin-card {\r\n  background: var(--color-white);\r\n  box-shadow: var(--adstate-card-shadow);\r\n  border-radius: 1rem;\r\n  padding: 1rem 2rem;\r\n}\r\n\r\n.title {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.subtitle {\r\n  font-size: 1.25rem;\r\n}\r\n\r\n.float-right {\r\n  float: right;\r\n}\r\n\r\n.table-row {\r\n  height: 50px;\r\n}\r\n",
                    "styleUrl": "./search-settings.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"admin-card\">\r\n  <div class=\"title\">\r\n    Search\r\n  </div>\r\n\r\n  <div class=\"subtitle\">\r\n    Change the lorem ipsum dolor sit amet. Setting are available lorem.\r\n  </div>\r\n\r\n  <div class=\"mt-3\">\r\n    <table class=\"table table-borderless\">\r\n      <thead>\r\n      <tr>\r\n        <th class=\"ps-0\">Type</th>\r\n        <th>Available</th>\r\n        <th class=\"text-end\">Default</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr *ngFor=\"let type of types\" class=\"table-row\">\r\n        <td class=\"ps-0\">{{ type.name }}</td>\r\n        <td class=\"pt-0\">\r\n          <adstate-toggle [checked]=\"type.isAvailable\"></adstate-toggle>\r\n        </td>\r\n        <td class=\"float-right pt-0\">\r\n          <adstate-radio-select \r\n            [checked]=\"type.isDefault\">\r\n          </adstate-radio-select>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SettingsComponent",
            "id": "component-SettingsComponent-ebef4560932a4b4810b9efe2bebb85a7",
            "file": "src/app/admin/settings/settings.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-settings",
            "styleUrls": [
                "./settings.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./settings.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "bannerURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "currentTheme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "currentThemeName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "demoBannerURL",
                    "defaultValue": "[\r\n    'https://davekochphoto.com/wp-content/uploads/2018/05/8103540-Edit.jpg',\r\n    'https://i.pinimg.com/originals/30/fb/21/30fb21d49cf3982df233ce432a7c0a44.jpg',\r\n    'https://i.pinimg.com/originals/ff/fc/b1/fffcb1f5b8a707aebec19f0a57cefb01.jpg',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "dummyText",
                    "defaultValue": "`Lorem ipsum dolor sit amet, consectetur adipiscing elit. Habitasse potenti vestibulum, elementum, sed. Feugiat\r\n          vestibulum non quis sapien nisl netus eget egestas quam. Mauris vel sit suspendisse turpis. Commodo, elementum\r\n          pulvinar diam non eu et neque neque nibh. Risus proin adipiscing convallis sit mi, lorem. Id ac nisl sit\r\n          ultrices nec velit. Vel fringilla consectetur.`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "funeralHomeSetting$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "decorators": [
                        {
                            "name": "Select",
                            "stringifiedArguments": "AdminState.funeralHomeSetting"
                        }
                    ]
                },
                {
                    "name": "logoUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "mainColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "previewBannerPicture",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "themeArray",
                    "defaultValue": "[\r\n    'newGeneration',\r\n    'netNotice'\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "themeNameMap",
                    "defaultValue": "new Map([\r\n    ['0', 'Standard Theme'],\r\n    ['1', 'New Generation Theme'],\r\n    ['2', 'Net Notice'],\r\n    ['3', 'Customer Specific 1'],\r\n  ])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "userId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "copyLink",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCurrentThemeName",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleBannerPicture",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "nextTheme",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "noBanner",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "previousTheme",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\r\nimport {Select, Store} from '@ngxs/store';\r\nimport {AdminState} from '../store/admin.state';\r\nimport {Observable} from 'rxjs';\r\nimport {AdminActions} from '../store/admin.action';\r\nimport {AuthStorageService} from '@app/core/services';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n\r\n  currentTheme: number;\r\n  mainColor: string;\r\n  bannerURL: string;\r\n  logoUrl: string;\r\n  previewBannerPicture: any;\r\n  userId: number;\r\n\r\n  themeArray = [\r\n    'newGeneration',\r\n    'netNotice'\r\n  ];\r\n\r\n  demoBannerURL = [\r\n    'https://davekochphoto.com/wp-content/uploads/2018/05/8103540-Edit.jpg',\r\n    'https://i.pinimg.com/originals/30/fb/21/30fb21d49cf3982df233ce432a7c0a44.jpg',\r\n    'https://i.pinimg.com/originals/ff/fc/b1/fffcb1f5b8a707aebec19f0a57cefb01.jpg',\r\n  ];\r\n\r\n  themeNameMap = new Map([\r\n    ['0', 'Standard Theme'],\r\n    ['1', 'New Generation Theme'],\r\n    ['2', 'Net Notice'],\r\n    ['3', 'Customer Specific 1'],\r\n  ]);\r\n\r\n  currentThemeName: string;\r\n\r\n  dummyText = `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Habitasse potenti vestibulum, elementum, sed. Feugiat\r\n          vestibulum non quis sapien nisl netus eget egestas quam. Mauris vel sit suspendisse turpis. Commodo, elementum\r\n          pulvinar diam non eu et neque neque nibh. Risus proin adipiscing convallis sit mi, lorem. Id ac nisl sit\r\n          ultrices nec velit. Vel fringilla consectetur.`;\r\n\r\n  @Select(AdminState.funeralHomeSetting) funeralHomeSetting$: Observable<any>;\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private authService: AuthStorageService\r\n  ) {\r\n    this.authService.getLoggedInUser().subscribe(value => {\r\n      if (value) {\r\n        this.userId = value.username === 'metalgear' ? 2 : 1;\r\n        this.store.dispatch(new AdminActions.GetFuneralHomeSettings(this.userId));\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.funeralHomeSetting$.subscribe(data => {\r\n      if (data) {\r\n        this.currentTheme = data.themeId;\r\n        this.getCurrentThemeName();\r\n        this.mainColor = data.mainColor;\r\n        this.bannerURL = data.bannerURL;\r\n        this.logoUrl = data.logoUrl;\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  getCurrentThemeName(): void {\r\n    this.currentThemeName = this.themeNameMap.get(this.currentTheme.toString());\r\n  }\r\n\r\n  previousTheme(): void {\r\n    if (this.currentTheme === 0) {\r\n      return;\r\n    }\r\n\r\n    this.currentTheme -= 1;\r\n    this.getCurrentThemeName();\r\n  }\r\n\r\n  nextTheme(): void {\r\n    if (this.currentTheme === 3) {\r\n      return;\r\n    }\r\n\r\n    this.currentTheme += 1;\r\n    this.getCurrentThemeName();\r\n  }\r\n\r\n  onSave(): void {\r\n    this.store.dispatch(new AdminActions.SaveConfig({\r\n      userId: this.userId,\r\n      themeId: this.currentTheme,\r\n      mainColor: this.mainColor,\r\n      bannerURL: this.bannerURL\r\n    }));\r\n  }\r\n\r\n  copyLink(url: string): void {\r\n    this.bannerURL = url;\r\n  }\r\n\r\n  noBanner(): void {\r\n    this.bannerURL = '';\r\n  }\r\n\r\n  handleBannerPicture(event): void {\r\n\r\n    if (event.target.files && event.target.files[0]) {\r\n      const file = event.target.files[0];\r\n\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = (e) => {\r\n        this.previewBannerPicture = reader.result;\r\n        this.copyLink(this.previewBannerPicture);\r\n      };\r\n    }\r\n\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-bg {\r\n  background-image: url(\"~src/assets/images/bg_picture.png\");\r\n}\r\n\r\n.toast-custom {\r\n  position: absolute;\r\n  right: 1rem;\r\n  top: 1rem;\r\n}\r\n\r\n.logo {\r\n  //height: 100px;\r\n  //width: 300px;\r\n  //position: relative;\r\n  //left: 30%;\r\n  //top: 0rem;\r\n  //border-radius: 8px\r\n\r\n  height: 100px;\r\n  position: relative;\r\n  top: 0rem;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.container {\r\n  width: 800px;\r\n}\r\n\r\n.card {\r\n  background: #FFFFFF;\r\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);\r\n  border-radius: 8px;\r\n}\r\n\r\n.main-color-container {\r\n  height: 320px;\r\n  position: relative;\r\n\r\n  .user-main-color {\r\n    width: 57px;\r\n    height: 57px;\r\n    border-radius: 50%;\r\n    background: #17313B;\r\n    position: absolute;\r\n    bottom: 70px;\r\n    left: 45%;\r\n    padding: 0;\r\n\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n\r\n    &::-webkit-color-swatch-wrapper {\r\n      padding: 0;\r\n    }\r\n\r\n    &::-webkit-color-swatch {\r\n      border-radius: 40px;\r\n    }\r\n  }\r\n\r\n  .user-blur-color {\r\n    height: 58px;\r\n    width: 58px;\r\n    background: #17313B;\r\n    opacity: 0.5;\r\n    filter: blur(15px);\r\n    position: absolute;\r\n    bottom: 68px;\r\n    left: 45%;\r\n  }\r\n\r\n  .logo-image {\r\n    position: absolute;\r\n    //top: 41px;\r\n    //left: 28%;\r\n    top: 8px;\r\n  }\r\n\r\n  .color-value {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 43%;\r\n    margin-bottom: 1rem;\r\n  }\r\n}\r\n\r\n.banner-picture-container {\r\n  //height: 188px;\r\n\r\n  .preview-image {\r\n    height: 118px;\r\n    position: absolute;\r\n    top: 3rem;\r\n    width: 96%;\r\n    border-radius: 10px;\r\n  }\r\n\r\n  .inputfile {\r\n    width: 0.1px;\r\n    height: 0.1px;\r\n    opacity: 0;\r\n    overflow: hidden;\r\n    position: absolute;\r\n    z-index: -1;\r\n  }\r\n\r\n  .inputfile + label {\r\n    font-size: 1.25em;\r\n    font-weight: 700;\r\n    color: white;\r\n    display: inline-block;\r\n    height: 118px;\r\n  }\r\n\r\n  .input-image-label {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border: 1px black dashed;\r\n    border-radius: 8px;\r\n    z-index: 2;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n  }\r\n\r\n  .inputfile:focus + label,\r\n  .inputfile + label:hover {\r\n  }\r\n\r\n  .inputfile + label {\r\n    cursor: pointer; /* \"hand\" cursor */\r\n  }\r\n\r\n  .inputfile + label * {\r\n    pointer-events: none;\r\n  }\r\n\r\n}\r\n\r\n.search-container {\r\n  height: 400px;\r\n  padding: 35px 45px;\r\n\r\n\r\n  .table {\r\n    font-size: 1.25rem;\r\n\r\n    th, td {\r\n      height: 75px;\r\n      vertical-align: middle;\r\n      border-top: 0;\r\n      padding: 0;\r\n    }\r\n\r\n    .checkbox {\r\n      height: 40px;\r\n      width: 40px;\r\n\r\n      &.cube {\r\n        background: #0D80F2;\r\n        margin-left: 1.5rem;\r\n      }\r\n\r\n      &.circle {\r\n        border-radius: 50%;\r\n        background: #0D80F2;\r\n        margin-left: 1rem;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.snippet-link-container {\r\n  height: 174px;\r\n  padding: 2rem;\r\n\r\n  .link-container {\r\n    height: 40px;\r\n    margin-top: 1.5rem;\r\n\r\n    .link-snippet {\r\n      width: 528px;\r\n      font-size: 18px;\r\n      background: #EEEEEE;\r\n      padding: 0.5rem;\r\n    }\r\n  }\r\n}\r\n\r\n.themes-container {\r\n  height: 540px;\r\n\r\n  .themes {\r\n    margin-top: 80px;\r\n  }\r\n\r\n  .standard-layout {\r\n    width: 370px;\r\n    height: 320px;\r\n    background: #C4C4C4;\r\n    border-radius: 12px;\r\n    padding: 48px 24px;\r\n\r\n    .layout-header {\r\n      height: 14px;\r\n      border-radius: 12px;\r\n      background: #666666;\r\n      margin: auto;\r\n    }\r\n  }\r\n\r\n  .theme-title {\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    margin-bottom: 2rem;\r\n  }\r\n\r\n  .dummy-text {\r\n    margin-bottom: 2rem;\r\n    color: #9F9F9F;\r\n  }\r\n\r\n  .theme-action {\r\n    width: 113px;\r\n    height: 28px;\r\n    background: #C4C4C4;\r\n    border-radius: 19px;\r\n    float: right;\r\n  }\r\n\r\n  .theme-selection {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-top: 18px;\r\n\r\n    .theme {\r\n      height: 25px;\r\n      width: 25px;\r\n      border-radius: 50%;\r\n      background: #C4C4C4;\r\n      margin: 0 4px;\r\n\r\n      &.active {\r\n        background: #666666\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.skeleton:empty {\r\n  //animation: loading 1.1s infinite linear;\r\n  //background: #dedfe1;\r\n  //background-image: -webkit-linear-gradient(to right, #dedfe1 0%, #f2f3f5 20%, #dedfe1 40%, #dedfe1 100%);\r\n  //background-image: linear-gradient(to right, #dedfe1 0%, #f2f3f5 20%, #dedfe1 40%, #dedfe1 100%);\r\n  //background-repeat: no-repeat;\r\n\r\n  animation: 2s ease-in-out infinite progress;\r\n  opacity: .7;\r\n  box-sizing: border-box;\r\n  overflow: hidden;\r\n  position: relative;\r\n  background: no-repeat #eff1f6;\r\n  border-radius: 4px;\r\n  display: inline-block;\r\n  margin-bottom: 10px;\r\n  will-change: transform;\r\n}\r\n\r\n@keyframes loading {\r\n  0% {\r\n    background-position: -100px;\r\n  }\r\n  100% {\r\n    background-position: 200px;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
                    "styleUrl": "./settings.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthStorageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 47,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthStorageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"full-bg\">\r\n\r\n  <div class=\"d-flex container pt-3\">\r\n    <button class=\"btn btn-primary mr-3 me-3\" (click)=\"onSave()\">Save</button>\r\n    <button class=\"btn btn-secondary\" routerLink=\"/memorial\">Back to memorial</button>\r\n  </div>\r\n\r\n  <div class=\"container py-3\">\r\n    <div class=\"card main-color-container\">\r\n\r\n      <div class=\"logo skeleton\">\r\n        <img class=\"logo-image\" *ngIf=\"logoUrl\" src=\"{{ logoUrl }}\" alt=\"\">\r\n      </div>\r\n\r\n      <div class=\"color-select\">\r\n\r\n        <div class=\"user-blur-color\"></div>\r\n        <input class=\"user-main-color\" type=\"color\"\r\n               [(ngModel)]=\"mainColor\" value=\"{{ mainColor }}\">\r\n        <h4 class=\"color-value\">{{ mainColor }}</h4>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"card themes-container mt-4 p-4\">\r\n      <h5 class=\"font-weight-bold\">Themes</h5>\r\n\r\n      <div class=\"d-flex themes\">\r\n        <div class=\"standard-layout\">\r\n          <div class=\"layout-header\"></div>\r\n\r\n          <ng-container [ngSwitch]=\"true\">\r\n            <ng-container *ngSwitchDefault>\r\n              <ng-container *ngTemplateOutlet=\"standard\"></ng-container>\r\n            </ng-container>\r\n            <ng-container *ngSwitchCase=\" currentTheme === 1\">\r\n              <ng-container *ngTemplateOutlet=\"newGeneration\"></ng-container>\r\n            </ng-container>\r\n            <ng-container *ngSwitchCase=\" currentTheme === 2\">\r\n              <ng-container *ngTemplateOutlet=\"netNotice\"></ng-container>\r\n            </ng-container>\r\n            <ng-container *ngSwitchCase=\" currentTheme === 3\">\r\n              <ng-container *ngTemplateOutlet=\"customSpecific\"></ng-container>\r\n            </ng-container>\r\n          </ng-container>\r\n\r\n        </div>\r\n\r\n        <div class=\"ml-3 ms-3 w-100\">\r\n          <div class=\"theme-title\"> {{ currentThemeName }}</div>\r\n          <p class=\"dummy-text\">\r\n            {{ dummyText }}\r\n          </p>\r\n          <div class=\"theme-action mr-3\"></div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"theme-selection\">\r\n        <i class=\"bi bi-chevron-left cursor-pointer\" (click)=\"previousTheme()\"></i>\r\n        <div class=\"d-flex\" *ngFor=\"let theme of [0,1,2,3]; let i = index\">\r\n          <div class=\"theme\"\r\n               [ngClass]=\"{'active': currentTheme === i}\"\r\n               (click)=\"currentTheme = i; getCurrentThemeName()\">\r\n          </div>\r\n        </div>\r\n        <i class=\"bi bi-chevron-right cursor-pointer\" (click)=\"nextTheme()\"></i>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"card banner-picture-container mt-4 p-3\">\r\n      <label class=\"form-label\">Banner Picture</label>\r\n\r\n      <input type=\"file\" name=\"file\" id=\"file\" (change)=\"handleBannerPicture($event)\" class=\"inputfile\"/>\r\n      <label class=\"input-image-label\" for=\"file\">\r\n        <i class=\"bi bi-image\" style=\"font-size: 2rem\"></i>\r\n      </label>\r\n\r\n      <div class=\"preview-image\"\r\n           [ngStyle]=\"{ 'background-image': 'url(' + previewBannerPicture + ')' }\"\r\n      ></div>\r\n\r\n      <!--    <img [src]=\"previewBannerPicture\" *ngIf=\"previewBannerPicture\" class=\"preview-image\" alt=\"\">-->\r\n\r\n    </div>\r\n\r\n    <div class=\"card banner-picture-container mt-4 p-3\">\r\n      <label class=\"form-label\">Banner URL</label>\r\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"bannerURL\">\r\n\r\n      <div class=\"mt-4\">\r\n        <p>Demo link</p>\r\n\r\n        <button class=\"btn btn-primary\" (click)=\"noBanner()\">No banner</button>\r\n\r\n        <ul>\r\n          <li *ngFor=\"let url of demoBannerURL\" class=\"mt-3\">\r\n\r\n            {{ url }}\r\n\r\n            <img src=\"{{ url }}\" style=\"height: 30px\" alt=\"\">\r\n\r\n            <button (click)=\"copyLink(url)\" class=\"btn btn-outline-primary btn-sm float-right\">\r\n              <i class=\"bi bi-files text-primary\"></i>\r\n            </button>\r\n\r\n          </li>\r\n        </ul>\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"card search-container mt-4\">\r\n      <table class=\"table\">\r\n        <thead>\r\n        <tr>\r\n          <th scope=\"col\">Search Areas</th>\r\n          <th scope=\"col\">Available</th>\r\n          <th scope=\"col\">Default</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr>\r\n          <th>Funeral Home</th>\r\n          <td>\r\n            <div class=\"checkbox cube\"></div>\r\n          </td>\r\n          <td>\r\n            <div class=\"checkbox circle\"></div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th>National Search</th>\r\n          <td>\r\n            <div class=\"checkbox cube\"></div>\r\n          </td>\r\n          <td>\r\n            <div class=\"checkbox circle\"></div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th>Global Search</th>\r\n          <td>\r\n            <div class=\"checkbox cube\"></div>\r\n          </td>\r\n          <td>\r\n            <div class=\"checkbox circle\"></div>\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <div class=\"card snippet-link-container mt-4\">\r\n      <h5 class=\"font-weight-bold\">Snippet Link</h5>\r\n\r\n      <div class=\"link-container d-flex align-items-center\">\r\n        <strong class=\"link-snippet\">\r\n          &lt;script src=\"https:/adstate/assets/js/sdk.js\"&gt;&lt;/script&gt;\r\n        </strong>\r\n\r\n        <i class=\"bi bi-files ml-3\" style=\"font-size: 28px\"></i>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</div>\r\n\r\n<ng-template #standard>\r\n  <app-standard-template></app-standard-template>\r\n</ng-template>\r\n\r\n<ng-template #newGeneration>\r\n  <app-new-generation-template></app-new-generation-template>\r\n</ng-template>\r\n\r\n<ng-template #netNotice>\r\n  <app-net-notice-template></app-net-notice-template>\r\n</ng-template>\r\n\r\n<ng-template #customSpecific>\r\n  <app-custom-specific></app-custom-specific>\r\n</ng-template>\r\n\r\n"
        },
        {
            "name": "SnippetLinkComponent",
            "id": "component-SnippetLinkComponent-1f2e0afafac14319f0650197865041ef",
            "file": "src/stories/snippet-link/snippet-link.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-snippet-link-card",
            "styleUrls": [
                "./snippet-link.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./snippet-link.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "includeLanguageSelect",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean"
                },
                {
                    "name": "includeMenuSelect",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "link",
                    "defaultValue": "'https:/adstate/assets/js/sdk.js'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "includeLanguageSelect",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "includeMenuSelect",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "link",
                    "defaultValue": "'https:/adstate/assets/js/sdk.js'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "pop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TooltipDirective",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'pop'"
                        }
                    ]
                },
                {
                    "name": "snippetLink",
                    "defaultValue": "`<script src=\"${this.link}\"></script>`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onCopySnippet",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, SimpleChanges, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { TooltipDirective } from 'ngx-bootstrap/tooltip';\r\n\r\n@Component({\r\n  selector: 'adstate-snippet-link-card',\r\n  templateUrl: './snippet-link.html',\r\n  styleUrls: ['./snippet-link.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport default class SnippetLinkComponent {\r\n  \r\n  @ViewChild('pop') pop: TooltipDirective;\r\n\r\n  @Input() link: string = 'https:/adstate/assets/js/sdk.js';\r\n  @Input() includeMenuSelect: boolean = false;\r\n  @Input() includeLanguageSelect: boolean = false;\r\n\r\n  snippetLink = `<script src=\"${this.link}\"></script>`;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if(changes) {\r\n      this.snippetLink = `<script src=\"${this.link}\"></script>`;\r\n    }\r\n  }\r\n\r\n  onCopySnippet(): void {\r\n    this.pop.show();\r\n    setTimeout(() => this.pop.hide(), 1000);\r\n  }\r\n\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".admin-card {\r\n  background: var(--color-white);\r\n  box-shadow: var(--adstate-card-shadow);\r\n  border-radius: 1rem;\r\n  padding: 1rem 2rem;\r\n}\r\n\r\n.title {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.subtitle {\r\n  font-size: 1.25rem;\r\n}\r\n\r\n\r\n.input-group-text {\r\n  cursor: pointer;\r\n  background: var(--adstate-primary-gradient);\r\n}\r\n\r\n.snippetlink-input:focus {\r\n  box-shadow: none;\r\n}\r\n",
                    "styleUrl": "./snippet-link.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 18
            },
            "templateData": "<div class=\"admin-card\">\r\n  <div class=\"title\">\r\n    Snippet Link\r\n  </div>\r\n\r\n  <div class=\"subtitle\">\r\n    Lorem ipsum dolor sit amet. Description for the snippet link can be here. Keep it breif\r\n  </div>\r\n\r\n  <div class=\"mt-3\">\r\n    <div class=\"row\">\r\n      <span class=\"col-4\">Include Menu</span>\r\n      <div class=\"col-8\">\r\n        <adstate-toggle [checked]=\"includeMenuSelect\"></adstate-toggle>\r\n        <!-- <adstate-radio-select [checked]=\"includeMenuSelect\"></adstate-radio-select> -->\r\n      </div>\r\n    </div>\r\n    <div class=\"row mt-3\">\r\n      <span class=\"col-4\">Include Language Switch</span>\r\n      <div class=\"col-8\">\r\n        <adstate-toggle [checked]=\"includeLanguageSelect\"></adstate-toggle>\r\n        <!-- <adstate-radio-select [checked]=\"includeLanguageSelect\"></adstate-radio-select> -->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"input-group mt-3\">\r\n      <input type=\"text\" class=\"form-control snippetlink-input\"\r\n             placeholder=\"Recipient's username\"\r\n             value=\"{{snippetLink}}\"\r\n             aria-label=\"Recipient's username\"\r\n             aria-describedby=\"basic-addon2\">\r\n      <span class=\"input-group-text\" id=\"basic-addon2\"\r\n            (click)=\"onCopySnippet();\"\r\n            tooltip=\"Copied!\"\r\n            triggers=\"\" #pop=\"bs-tooltip\">\r\n        <i class=\"bi bi-files text-white\"></i>\r\n      </span>\r\n\r\n    </div>\r\n    \r\n\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SnippetLinkComponent",
            "id": "component-SnippetLinkComponent-59b36caae9d17af452a3717dbf5a798b-1",
            "file": "src/app/customization-admin/containers/snippet-link/snippet-link.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-snippet-link",
            "styleUrls": [
                "./snippet-link.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./snippet-link.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "pop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TooltipDirective",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'pop'"
                        }
                    ]
                },
                {
                    "name": "snippetLink",
                    "defaultValue": "`<script src=\"https:/adstate/assets/js/sdk.js\"></script>`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCopySnippet",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {TooltipDirective} from 'ngx-bootstrap/tooltip';\r\n\r\n@Component({\r\n  selector: 'app-snippet-link',\r\n  templateUrl: './snippet-link.component.html',\r\n  styleUrls: ['./snippet-link.component.scss']\r\n})\r\nexport class SnippetLinkComponent implements OnInit {\r\n\r\n  @ViewChild('pop') pop: TooltipDirective;\r\n\r\n  snippetLink = `<script src=\"https:/adstate/assets/js/sdk.js\"></script>`;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onCopySnippet(): void {\r\n    this.pop.show();\r\n    setTimeout(() => this.pop.hide(), 1000);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".input-group-text {\r\n  cursor: pointer;\r\n  background: var(--adstate-primary-gradient);\r\n}\r\n",
                    "styleUrl": "./snippet-link.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "SnippetLinkComponent-1",
            "templateData": "<app-card>\r\n  <div cardTitle> Snippet Link</div>\r\n  <div cardSubtitle>\r\n    Lorem ipsum dolor sit amet. Description for the snippet link can be here. Keep it breif\r\n  </div>\r\n  <div cardBody>\r\n    <div class=\"row\">\r\n      <span class=\"col-4\">Include Menu</span>\r\n      <div class=\"col-8\">\r\n        <app-checkbox [checked]=\"true\"></app-checkbox>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mt-3\">\r\n      <span class=\"col-4\">Include Language Switch</span>\r\n      <div class=\"col-8\">\r\n        <app-checkbox [checked]=\"false\"></app-checkbox>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"input-group mt-3\">\r\n      <input type=\"text\" class=\"form-control\"\r\n             placeholder=\"Recipient's username\"\r\n             value=\"{{snippetLink}}\"\r\n             aria-label=\"Recipient's username\"\r\n             aria-describedby=\"basic-addon2\">\r\n      <span class=\"input-group-text\" id=\"basic-addon2\"\r\n            (click)=\"onCopySnippet();\"\r\n            tooltip=\"Copied!\"\r\n            triggers=\"\" #pop=\"bs-tooltip\">\r\n        <i class=\"bi bi-files text-white\"></i>\r\n      </span>\r\n\r\n    </div>\r\n  </div>\r\n</app-card>\r\n"
        },
        {
            "name": "SortComponent",
            "id": "component-SortComponent-37cce5201209999c84c90b1b4afbd413",
            "file": "src/stories/sort/sort.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-sort",
            "styleUrls": [
                "./sort.css"
            ],
            "styles": [],
            "template": "<div class=\"position-relative\" dropdown placement=\"bottom right\">\n\n  <button id=\"button-filter\" dropdownToggle\n          type=\"button\"\n          class=\"btn btn-filter\"\n          aria-controls=\"dropdown-filter\">\n    {{ label }}  <i class=\"bi bi-arrow-down-up\"></i>\n  </button>\n\n  <ul id=\"dropdown-filter\" *dropdownMenu\n      class=\"dropdown-menu dropdown-menu-right\"\n      role=\"menu\"\n      aria-labelledby=\"button-filter\">\n    <li role=\"menuitem\" *ngFor=\"let item of items\">\n      <div class=\"dropdown-item\">\n        <span class=\"mx-2\"> {{ item }} </span>\n      </div>\n    </li>\n  </ul>\n\n  </div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'Sort'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "items",
                    "defaultValue": "[\r\n    'Most relevant',\r\n    'Alphabetically sorted by first name (A - Å)',\r\n    'Alphabetically sorted by last name (A - Å)',\r\n    'Year of birth (high to low)',\r\n    'Year of birth (low to high)',\r\n    'Year of death (high to low)',\r\n    'Year of death (low to high)',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "label",
                    "defaultValue": "'Sort'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'adstate-sort',\r\n  template: `    \r\n    <div class=\"position-relative\" dropdown placement=\"bottom right\">\r\n\r\n      <button id=\"button-filter\" dropdownToggle \r\n              type=\"button\" \r\n              class=\"btn btn-filter\"\r\n              aria-controls=\"dropdown-filter\">\r\n        {{ label }}  <i class=\"bi bi-arrow-down-up\"></i>\r\n      </button>\r\n\r\n      <ul id=\"dropdown-filter\" *dropdownMenu \r\n          class=\"dropdown-menu dropdown-menu-right\"\r\n          role=\"menu\" \r\n          aria-labelledby=\"button-filter\">\r\n        <li role=\"menuitem\" *ngFor=\"let item of items\">\r\n          <div class=\"dropdown-item\">\r\n            <span class=\"mx-2\"> {{ item }} </span>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n\r\n      </div>\r\n    `,\r\n  styleUrls: ['./sort.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport default class SortComponent {\r\n\r\n  @Input() label: string = 'Sort';\r\n\r\n  items = [\r\n    'Most relevant',\r\n    'Alphabetically sorted by first name (A - Å)',\r\n    'Alphabetically sorted by last name (A - Å)',\r\n    'Year of birth (high to low)',\r\n    'Year of birth (low to high)',\r\n    'Year of death (high to low)',\r\n    'Year of death (low to high)',\r\n  ]\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn {\r\n  border-top-right-radius: 0.5rem;\r\n  border-bottom-right-radius: 0.5rem;\r\n}\r\n\r\n.btn-filter {\r\n  border-radius: 0.5rem;\r\n  border: 1px solid var(--adstate-primary-800);\r\n  padding: 0rem 0.5rem;\r\n  color: var(--adstate-primary-800);\r\n}\r\n\r\n.btn-filter:hover {\r\n  background: rgb(244 236 249);\r\n  border: 1px solid var(--adstate-primary-800);\r\n  color: var(--adstate-primary-800);\r\n  box-shadow: none;\r\n  filter: drop-shadow(-2px 4px 2px rgb(244 236 249));\r\n}\r\n\r\n.btn-filter:focus {\r\n  background: var(--adstate-primary-800);\r\n  border: 1px solid var(--adstate-primary-800);\r\n  color: var(--color-white);\r\n  box-shadow: none;\r\n  filter: var(--adstate-drop-shadow)\r\n}\r\n\r\n.dropdown-item {\r\n  color: var(--color-black);\r\n}\r\n\r\n.dropdown-item:hover {\r\n  cursor: pointer;\r\n  background: rgb(244 236 249);\r\n}\r\n\r\n.dropdown-menu {\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n  border-radius: 14px;\r\n}\r\n",
                    "styleUrl": "./sort.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "SortComponent",
            "id": "component-SortComponent-2c79d368fa00533fdcf92b54554fa4b4-1",
            "file": "src/app/memorial/components/sort/sort.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sort",
            "styleUrls": [
                "./sort.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sort.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "items",
                    "defaultValue": "[\r\n    'Most relevant',\r\n    'Alphabetically sorted by first name (A - Å)',\r\n    'Alphabetically sorted by last name (A - Å)',\r\n    'Year of birth (high to low)',\r\n    'Year of birth (low to high)',\r\n    'Year of death (high to low)',\r\n    'Year of death (low to high)',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "label",
                    "defaultValue": "'Sort'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sort',\r\n  templateUrl: './sort.component.html',\r\n  styleUrls: ['./sort.component.scss']\r\n})\r\nexport class SortComponent implements OnInit {\r\n\r\n  label = 'Sort';\r\n\r\n  items = [\r\n    'Most relevant',\r\n    'Alphabetically sorted by first name (A - Å)',\r\n    'Alphabetically sorted by last name (A - Å)',\r\n    'Year of birth (high to low)',\r\n    'Year of birth (low to high)',\r\n    'Year of death (high to low)',\r\n    'Year of death (low to high)',\r\n  ]\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn {\r\n  border-top-right-radius: 0.5rem;\r\n  border-bottom-right-radius: 0.5rem;\r\n}\r\n\r\n.btn-filter {\r\n  border-radius: 0.5rem;\r\n  border: 1px solid #592673;\r\n  padding: 0rem 0.5rem;\r\n  color: #592673;\r\n}\r\n\r\n.btn-filter:hover {\r\n  background: rgb(244 236 249);\r\n  border: 1px solid #59267308;\r\n  color: #592673;\r\n  box-shadow: none;\r\n  filter: drop-shadow(-2px 4px 2px rgb(244 236 249));\r\n}\r\n\r\n.btn-filter:focus {\r\n  background: #9540BF;\r\n  border: 1px solid #59267308;\r\n  color: #ffffff;\r\n  box-shadow: none;\r\n  filter: drop-shadow(-2px 4px 2px #f4ecf9);\r\n}\r\n\r\n.dropdown-item {\r\n  color: #000;\r\n}\r\n\r\n.dropdown-item:hover {\r\n  cursor: pointer;\r\n  background: rgb(244 236 249);\r\n}\r\n\r\n.dropdown-menu {\r\n  top: 2rem !important;\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n  border-radius: 14px;\r\n}\r\n",
                    "styleUrl": "./sort.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "SortComponent-1",
            "templateData": "<div class=\"position-relative\" dropdown  placement=\"bottom right\">\r\n\r\n  <button id=\"button-filter\" dropdownToggle \r\n          type=\"button\" \r\n          class=\"btn btn-filter\"\r\n          aria-controls=\"dropdown-filter\">\r\n    {{ label }}  <i class=\"bi bi-arrow-down-up\"></i>\r\n  </button>\r\n\r\n  <ul id=\"dropdown-filter\" *dropdownMenu \r\n      class=\"dropdown-menu dropdown-menu-right\"\r\n      role=\"menu\" \r\n      aria-labelledby=\"button-filter\">\r\n    <li role=\"menuitem\" *ngFor=\"let item of items; let i = index\">\r\n      <div class=\"dropdown-item\">\r\n        {{ item }}\r\n      </div>\r\n    </li>\r\n  </ul>\r\n\r\n  </div>"
        },
        {
            "name": "StandardComponent",
            "id": "component-StandardComponent-2c28c89fd4dfbacf626a8c8983287d72",
            "file": "src/stories/layout-template/standard/standard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-standard-template",
            "styleUrls": [
                "./standard.scss"
            ],
            "styles": [],
            "template": " <div class=\"items first-item\">\n   <div class=\"item\"></div>\n </div>\n\n <div class=\"items\">\n   <div class=\"item\"></div>\n </div>\n\n <div class=\"items\">\n   <div class=\"item\"></div>\n </div>\n\n <div class=\"items\">\n   <div class=\"item\"></div>\n </div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'adstate-standard-template',\r\n  template: `    \r\n   <div class=\"items first-item\">\r\n      <div class=\"item\"></div>\r\n    </div>\r\n\r\n    <div class=\"items\">\r\n      <div class=\"item\"></div>\r\n    </div>\r\n\r\n    <div class=\"items\">\r\n      <div class=\"item\"></div>\r\n    </div>\r\n\r\n    <div class=\"items\">\r\n      <div class=\"item\"></div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./standard.scss'],\r\n})\r\nexport default class StandardComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".items {\r\n  padding: 3px 0;\r\n  border-bottom: 1px solid var(--adstate-shade-dark-grey);\r\n\r\n  &.first-item {\r\n    border-top: 1px solid var(--adstate-shade-dark-grey);\r\n    margin-top: 38px;\r\n  }\r\n}\r\n\r\n.item {\r\n  height: 25px;\r\n  width: 25px;\r\n  border-radius: 50%;\r\n  background: var(--adstate-shade-dark-grey);\r\n}\r\n",
                    "styleUrl": "./standard.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "StandardTemplateComponent",
            "id": "component-StandardTemplateComponent-9e7631327545ebd7835857351f9d849a",
            "file": "src/app/admin/standard-template/standard-template.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-standard-template",
            "styleUrls": [
                "./standard-template.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./standard-template.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-standard-template',\n  templateUrl: './standard-template.component.html',\n  styleUrls: ['./standard-template.component.scss']\n})\nexport class StandardTemplateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".items {\r\n  padding: 3px 0;\r\n  border-bottom: 1px solid #666666;\r\n\r\n  &.first-item {\r\n    border-top: 1px solid #666666;\r\n    margin-top: 38px;\r\n  }\r\n}\r\n\r\n.item {\r\n  height: 25px;\r\n  width: 25px;\r\n  border-radius: 50%;\r\n  background: #666666;\r\n}\r\n",
                    "styleUrl": "./standard-template.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"items first-item\">\n  <div class=\"item\"></div>\n</div>\n\n<div class=\"items\">\n  <div class=\"item\"></div>\n</div>\n\n<div class=\"items\">\n  <div class=\"item\"></div>\n</div>\n\n<div class=\"items\">\n  <div class=\"item\"></div>\n</div>\n"
        },
        {
            "name": "StandardTemplateComponent",
            "id": "component-StandardTemplateComponent-df0195ee14d2107e2c4114f30ab7266c-1",
            "file": "src/app/customization-admin/components/standard-template/standard-template.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-standard-template",
            "styleUrls": [
                "./standard-template.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./standard-template.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-standard-template',\r\n  templateUrl: './standard-template.component.html',\r\n  styleUrls: ['./standard-template.component.scss']\r\n})\r\nexport class StandardTemplateComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".items {\r\n  padding: 3px 0;\r\n  border-bottom: 1px solid #666666;\r\n\r\n  &.first-item {\r\n    border-top: 1px solid #666666;\r\n    margin-top: 38px;\r\n  }\r\n}\r\n\r\n.item {\r\n  height: 25px;\r\n  width: 25px;\r\n  border-radius: 50%;\r\n  background: #666666;\r\n}\r\n",
                    "styleUrl": "./standard-template.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "StandardTemplateComponent-1",
            "templateData": "<div class=\"items first-item\">\r\n  <div class=\"item\"></div>\r\n</div>\r\n\r\n<div class=\"items\">\r\n  <div class=\"item\"></div>\r\n</div>\r\n\r\n<div class=\"items\">\r\n  <div class=\"item\"></div>\r\n</div>\r\n\r\n<div class=\"items\">\r\n  <div class=\"item\"></div>\r\n</div>\r\n"
        },
        {
            "name": "StandardViewComponent",
            "id": "component-StandardViewComponent-c41cc7d6241d8ea7fbb056ba79b7456f",
            "file": "src/app/memorial/components/standard-view/standard-view.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-standard-view",
            "styleUrls": [
                "./standard-view.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./standard-view.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "displayNumberListView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number"
                },
                {
                    "name": "end",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number"
                },
                {
                    "name": "gettingImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean"
                },
                {
                    "name": "userId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "users",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Array<User>"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "candleFilterIcon",
                    "defaultValue": "'https://video-demo-e2a84.web.app/assets/images/candel_filter_icon.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "deathNoticeIcon",
                    "defaultValue": "'https://video-demo-e2a84.web.app/assets/images/death_notice_icon.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "displayNumber",
                    "defaultValue": "7",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "displayNumberListView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "donationFilterIcon",
                    "defaultValue": "'https://video-demo-e2a84.web.app/assets/images/donation_filter_icon.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "end",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "flowerFilterIcon",
                    "defaultValue": "'https://video-demo-e2a84.web.app/assets/images/flower_filter_icon.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "gettingImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "imageLoader",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "userId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "users",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<User>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handleErrorImage",
                    "args": [
                        {
                            "name": "element",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadMore",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onLoadImage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onUrlClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "link",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "link",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "trackByMethod",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit, OnChanges, SimpleChanges, Renderer2} from '@angular/core';\r\nimport {User} from '../../models/user.model';\r\nimport {FuneralHomeSetting} from \"../../models/funeralhome.model\";\r\n\r\n@Component({\r\n  selector: 'app-standard-view',\r\n  templateUrl: './standard-view.component.html',\r\n  styleUrls: ['./standard-view.component.scss']\r\n})\r\nexport class StandardViewComponent implements OnInit, OnChanges {\r\n\r\n  @Input() users: Array<User>;\r\n  @Input() end: number;\r\n  @Input() userId: string;\r\n  @Input() displayNumberListView: number;\r\n  @Input() gettingImage: boolean;\r\n\r\n  displayNumber = 7;\r\n\r\n  imageLoader = true;\r\n\r\n  deathNoticeIcon = 'https://video-demo-e2a84.web.app/assets/images/death_notice_icon.svg';\r\n  candleFilterIcon = 'https://video-demo-e2a84.web.app/assets/images/candel_filter_icon.svg';\r\n  donationFilterIcon = 'https://video-demo-e2a84.web.app/assets/images/donation_filter_icon.svg';\r\n  flowerFilterIcon = 'https://video-demo-e2a84.web.app/assets/images/flower_filter_icon.svg';\r\n\r\n  constructor(private renderer: Renderer2) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes && changes.displayNumberListView) {\r\n      this.loadMore();\r\n    }\r\n  }\r\n\r\n  loadMore(): number {\r\n    return this.displayNumber = this.displayNumber + 2;\r\n  }\r\n\r\n  onUrlClick(event: any, link: string): void {\r\n    if (link.length === 0) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  trackByMethod(index: number, element: any): number {\r\n    this.imageLoader = true;\r\n    return element.id;\r\n  }\r\n\r\n  onLoadImage(): void {\r\n    this.imageLoader = false;\r\n  }\r\n\r\n  handleErrorImage(element): void {\r\n    const imagePlaceHolder = '/assets/images/avatarplaceholder.png';\r\n    this.renderer.setAttribute(element, 'src', imagePlaceHolder);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".information {\r\n  margin-right: 3rem;\r\n}\r\n\r\n.user-list {\r\n  width: 1000px;\r\n}\r\n\r\n.standard-container {\r\n  background: rgba(255, 255, 255, 0.25);\r\n  border-radius: 18px;\r\n}\r\n\r\n.link-disabled {\r\n  cursor: default;\r\n  background-color: #cccccc;\r\n}\r\n\r\n.link-active {\r\n  background: var(--bs-primary);\r\n}\r\n\r\n.features {\r\n  align-items: center;\r\n}\r\n\r\n.user-thumbnail {\r\n  width: 78px;\r\n  height: 78px;\r\n  border-radius: 50%;\r\n }\r\n\r\n.btn-circle {\r\n  width: 54px;\r\n  height: 54px;\r\n  padding: 10px 16px;\r\n  font-size: 18px;\r\n  line-height: 1.33;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.user-list-item-features {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-start;\r\n  justify-content: space-around;\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  gap: 1em;\r\n\r\n  // @media only screen and (min-width: 768px) {\r\n  // }\r\n\r\n  .user-list-item-feature {\r\n    a {\r\n      display: flex;\r\n      flex-direction: column;\r\n      text-decoration: none;\r\n      justify-content: center;\r\n      align-items: center;\r\n    }\r\n\r\n    span {\r\n      margin-top: 0.4rem;\r\n      font-size: 0.8em;\r\n      line-height: 1;\r\n      text-align: center;\r\n    }\r\n\r\n    img {\r\n      padding: 0.8em;\r\n      width: 3.2em;\r\n      background-color: var(--bs-primary);\r\n      border-radius: 100%;\r\n    }\r\n  }\r\n\r\n  .user-list-item-feature:hover,\r\n  .user-list-item-feature:focus-within {\r\n    opacity: 0.9;\r\n  }\r\n\r\n  .user-list-item-feature a[disabled] {\r\n    cursor: default;\r\n    color: inherit;\r\n    pointer-events: none;\r\n\r\n    img {\r\n      background-color: #ccc;\r\n    }\r\n  }\r\n\r\n  .user-list-item-feature-disabled {\r\n    a {\r\n      cursor: default;\r\n      color: inherit;\r\n      pointer-events: none;\r\n    }\r\n\r\n    img {\r\n      background-color: #ccc;\r\n    }\r\n  }\r\n}\r\n\r\n.feature-container {\r\n  justify-content: space-evenly;\r\n}\r\n\r\n.feature-name {\r\n  font-size: 0.75rem;\r\n  padding-top: 5px;\r\n  text-align: center;\r\n}\r\n\r\n.item {\r\n  cursor: pointer;\r\n  position: relative;\r\n  padding: 1em;\r\n  background-color: #fff;\r\n  box-shadow: 0 0 0 0 rgba(20, 0, 40, 0);\r\n\r\n  &:hover,\r\n  &:focus-within {\r\n    z-index: 1;\r\n    box-shadow: 0 0 1em -0.4em rgba(20, 0, 40, 0.3);\r\n    border-radius: 10px;\r\n\r\n    + .item {\r\n      border-top-color: transparent;\r\n    }\r\n  }\r\n\r\n  + .item {\r\n    border-top: 1px #eee solid;\r\n\r\n    &:hover,\r\n    &:focus-within {\r\n      border-top-color: transparent;\r\n    }\r\n  }\r\n}\r\n\r\n.btn:focus {\r\n  box-shadow: none;\r\n}\r\n\r\n\r\n.icon-width {\r\n  width: 2rem;\r\n}\r\n\r\n\r\n@media only screen and (max-width: 1040px) {\r\n\r\n  .user-list {\r\n    width: 100%;\r\n  }\r\n\r\n  .item {\r\n    height: 110px;\r\n  }\r\n\r\n  .features {\r\n    align-items: flex-start;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 768px) {\r\n  .item {\r\n    flex-direction: column;\r\n    height: 180px;\r\n  }\r\n\r\n  .information {\r\n    margin-bottom: 8px;\r\n    margin-right: 0;\r\n    margin-left: 1rem;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 420px) {\r\n  .item {\r\n    height: 220px;\r\n  }\r\n\r\n  .information {\r\n    margin-right: 0;\r\n  }\r\n\r\n  .user-thumbnail {\r\n    height: 70px;\r\n    width: 70px;\r\n  }\r\n\r\n}\r\n",
                    "styleUrl": "./standard-view.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<div class=\"standard-container\" *ngIf=\"users && users.length > 0\">\r\n  <ul class=\"p-0 user-list\" data-cy=\"user-list\">\r\n    <li *ngFor=\"let user of users | slice:0: end; let i = index; trackBy: trackByMethod; let index=index;\"\r\n        class=\"d-flex justify-content-between align-items-centers item\">\r\n      <div class=\"d-flex information\">\r\n\r\n        <img [hidden]=\"!imageLoader\" src=\"/assets/images/loading.gif\" alt=\"\">\r\n        <img src=\"{{user.photoUrl}}\" #imageElement\r\n             [hidden]=\"imageLoader\"\r\n             (load)=\"onLoadImage()\"\r\n             (error)=\"handleErrorImage(imageElement)\"\r\n             alt=\"\"\r\n             class=\"user-thumbnail\">\r\n\r\n        <ng-template #noPhoto>\r\n          <div class=\"user-thumbnail\" style=\"background: #C4C4C4\"></div>\r\n        </ng-template>\r\n\r\n        <div class=\"d-flex flex-column mt-2 ml-3 ms-3\" data-cy=\"user-item\">\r\n          <h3 class=\"fs-5 mb-0\">\r\n            <a [href]=\"user.memorialPage.url !== '' ? user.memorialPage.url : ''\"\r\n               class=\"text-decoration-none\"\r\n               [attr.aria-label]=\"user.firstName + ' ' +  user.lastName + ' (' + user.birthdate + ' - ' + user.deathdate + ')'\">\r\n              {{ user.firstName }} {{ user.lastName }}\r\n            </a>\r\n          </h3>\r\n          <p class=\"mb-0\">\r\n            <span data-cy=\"user-birthdate\">{{ user.birthdate | date:\"YYYY\" }}</span>\r\n            - <span data-cy=\"user-death-date\">{{ user.deathdate | date:\"dd.MM.YYYY\"}}</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <ul class=\"user-list-item-features\">\r\n        <li class=\"user-list-item-feature\">\r\n          <a data-cy=\"death-notice-link\"\r\n             [href]=\"user.deathNotice.url\"\r\n             [attr.disabled]=\"user.deathNotice.url === '' ? true : null\"\r\n             [attr.aria-label]=\"('portalPage.userList.deathNoticeForUser' | transloco:{ name: user.firstName })\">\r\n            <img [src]=\"deathNoticeIcon\" alt=\"\">\r\n            <span>{{ 'portalPage.userList.deathNotice' | transloco }}</span>\r\n          </a>\r\n        </li>\r\n        <li class=\"user-list-item-feature\">\r\n          <a [href]=\"user.memorialPage.url\"\r\n             [attr.disabled]=\"user.memorialPage.url === '' ? true : null\"\r\n             [attr.aria-label]=\"('portalPage.userList.memorialPageForUser' | transloco:{ name: user.firstName })\"\r\n             data-cy=\"memorial-page-link\">\r\n            <img [src]=\"candleFilterIcon\" alt=\"\" data-cy=\"memorial-page-icon\">\r\n            <span>{{ 'portalPage.userList.memorialPage' | transloco }}</span>\r\n          </a>\r\n        </li>\r\n        <li class=\"user-list-item-feature\">\r\n          <a [href]=\"user.donation.url\"\r\n             [attr.disabled]=\"user.donation.url === '' ? true : null\"\r\n             [attr.aria-label]=\"('portalPage.userList.donateForUser' | transloco:{ name: user.firstName })\"\r\n             data-cy=\"donation-link\">\r\n            <img [src]=\"donationFilterIcon\" alt=\"\" data-cy=\"donation-icon\">\r\n            <span>{{ 'portalPage.userList.donate' | transloco }}</span>\r\n          </a>\r\n        </li>\r\n        <li class=\"user-list-item-feature\">\r\n          <a [href]=\"user.flowerShop.url\"\r\n             [attr.disabled]=\"user.flowerShop.url === '' ? true : null\"\r\n             [attr.aria-label]=\"('portalPage.userList.flowerShopForUser' | transloco:{ name: user.firstName })\"\r\n             data-cy=\"flower-shop-link\">\r\n            <img [src]=\"flowerFilterIcon\" alt=\"\">\r\n            <span>{{ 'portalPage.userList.flowerShop' | transloco }}</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </li>\r\n  </ul>\r\n</div>\r\n"
        },
        {
            "name": "ToggleComponent",
            "id": "component-ToggleComponent-5114a027292f6dad8472c76219c06a93",
            "file": "src/stories/toggle/toggle.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "adstate-toggle",
            "styleUrls": [
                "./toggle.scss"
            ],
            "styles": [],
            "template": "<div class=\"toggle-container\" [ngClass]=\"{'checked': checked}\">\n    <div class=\"check text-center\" (click)=\"checked = true;\">\n      <i class=\"check-icon\"></i>\n    </div>\n    <div class=\"uncheck text-center\" (click)=\"checked = false;\">\n      <i class=\"bi bi-x-lg uncheck-icon\"></i>\n    </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "checked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'adstate-toggle',\r\n  template: `    \r\n    <div class=\"toggle-container\" [ngClass]=\"{'checked': checked}\">\r\n        <div class=\"check text-center\" (click)=\"checked = true;\">\r\n          <i class=\"check-icon\"></i>\r\n        </div>\r\n        <div class=\"uncheck text-center\" (click)=\"checked = false;\">\r\n          <i class=\"bi bi-x-lg uncheck-icon\"></i>\r\n        </div>\r\n    </div>\r\n    `,\r\n  styleUrls: ['./toggle.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport default class ToggleComponent {\r\n  @Input() checked: boolean\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".check-icon:after {\r\n  content: \"\";\r\n  position: absolute;\r\n  left: 10px;\r\n  top: 2px;\r\n  width: 6px;\r\n  height: 17px;\r\n  border: solid #4F4F4F;\r\n  border-width: 0 2px 2px 0;\r\n  transform: rotate(45deg);\r\n  -webkit-transform: rotate(45deg);\r\n}\r\n\r\n.toggle-container {\r\n  height: 32px;\r\n  width: 64px;\r\n  background: #F2F2F2;\r\n  border: 1px solid #E0E0E0;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n\r\n  .check {\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 24px;\r\n    width: 24px;\r\n    border-radius: 4px;\r\n    position: relative;\r\n  }\r\n\r\n  .uncheck {\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 24px;\r\n    width: 24px;\r\n    border-radius: 4px;\r\n    background: #4F4F4F;\r\n    color: var(--color-white);\r\n  }\r\n\r\n  &.checked {\r\n    background: var(--adstate-primary-100);\r\n    border: 1px solid var(--adstate-primary-200);\r\n\r\n    .check {\r\n      background: var(--adstate-primary-gradient);\r\n      color: var(--color-white);\r\n    }\r\n\r\n    .check-icon:after {\r\n      border: solid var(--adstate-primary-100);\r\n      border-width: 0 2px 2px 0;\r\n    }\r\n\r\n    .uncheck {\r\n      background: transparent;\r\n      color: var(--adstate-primary-800);\r\n    }\r\n  }\r\n}\r\n\r\n.uncheck-icon:before {\r\n  position: relative;\r\n  top: 1px;\r\n}\r\n\r\n",
                    "styleUrl": "./toggle.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "ToggleComponent",
            "id": "component-ToggleComponent-ad77c30368fd41319da2b382990205a2-1",
            "file": "src/app/shared/toggle/toggle/toggle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toggle",
            "styleUrls": [
                "./toggle.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./toggle.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "checked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-toggle',\r\n  templateUrl: './toggle.component.html',\r\n  styleUrls: ['./toggle.component.scss']\r\n})\r\nexport class ToggleComponent implements OnInit {\r\n\r\n  @Input() checked: boolean;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".check-icon:after {\r\n  content: \"\";\r\n  position: absolute;\r\n  left: 10px;\r\n  top: 2px;\r\n  width: 6px;\r\n  height: 17px;\r\n  border: solid #4F4F4F;\r\n  border-width: 0 2px 2px 0;\r\n  transform: rotate(45deg);\r\n  -webkit-transform: rotate(45deg);\r\n}\r\n\r\n.toggle-container {\r\n  height: 32px;\r\n  width: 64px;\r\n  background: #F2F2F2;\r\n  border: 1px solid #E0E0E0;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n\r\n  .check {\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 24px;\r\n    width: 24px;\r\n    border-radius: 4px;\r\n    position: relative;\r\n  }\r\n\r\n  .uncheck {\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 24px;\r\n    width: 24px;\r\n    border-radius: 4px;\r\n    background: #4F4F4F;\r\n    color: #FFFFFF;\r\n  }\r\n\r\n  &.checked {\r\n    background: #F4ECF9;\r\n    border: 1px solid #EAD9F2;\r\n\r\n    .check {\r\n      background: var(--adstate-primary-gradient);\r\n      color: #FFFFFF;\r\n    }\r\n\r\n    .check-icon:after {\r\n      border: solid var(--adstate-primary-100);\r\n      border-width: 0 2px 2px 0;\r\n    }\r\n\r\n    .uncheck {\r\n      background: transparent;\r\n      color: var(--adstate-primary-800);\r\n    }\r\n  }\r\n}\r\n\r\n.uncheck-icon:before {\r\n  position: relative;\r\n  top: 1px;\r\n}\r\n\r\n",
                    "styleUrl": "./toggle.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ToggleComponent-1",
            "templateData": "<div class=\"toggle-container\"\r\n    [ngClass]=\"{'checked': checked}\">\r\n  <div class=\"check text-center\" (click)=\"checked = true;\">\r\n    <i class=\"check-icon\"></i>\r\n  </div>\r\n  <div class=\"uncheck text-center\" (click)=\"checked = false;\">\r\n    <i class=\"bi bi-x-lg uncheck-icon\"></i>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "UmbraDumbraViewComponent",
            "id": "component-UmbraDumbraViewComponent-348356db7dce7bc643042110be0947a8",
            "file": "src/app/memorial/components/umbra-dumbra-view/umbra-dumbra-view.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-umbra-dumbra-view",
            "styleUrls": [
                "./umbra-dumbra-view.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./umbra-dumbra-view.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "displayNumberShadowView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number"
                },
                {
                    "name": "users",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Array<User>"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "displayNumber",
                    "defaultValue": "4",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "displayNumberShadowView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "url",
                    "defaultValue": "'https://image.freepik.com/free-vector/lion-cool-retro-eyeglasses_68946-257.jpg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "users",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<User>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "loadMore",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit, OnChanges, SimpleChanges} from '@angular/core';\n\nimport {User} from '../../models/user.model';\n\n@Component({\n  selector: 'app-umbra-dumbra-view',\n  templateUrl: './umbra-dumbra-view.component.html',\n  styleUrls: ['./umbra-dumbra-view.component.scss']\n})\nexport class UmbraDumbraViewComponent implements OnInit, OnChanges {\n\n  @Input() users: Array<User>;\n  @Input() displayNumberShadowView: number;\n\n  displayNumber = 4;\n\n  url = 'https://image.freepik.com/free-vector/lion-cool-retro-eyeglasses_68946-257.jpg';\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes && changes.displayNumberShadowView) {\n      this.loadMore();\n    }\n  }\n\n  loadMore(): number {\n    return this.displayNumber = this.displayNumber + 2;\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import url('https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@1,500&display=swap');\r\n\r\n.user-information {\r\n  background-color: black;\r\n  background-color: rgba(0, 0, 0, 0.0);\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 2;\r\n  width: 100%;\r\n  padding: 20px;\r\n  text-align: center;\r\n  height: 100px;\r\n  border-radius: 18px;\r\n\r\n  &:hover {\r\n    border: 1px solid #bfbdbd;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .user-information-name {\r\n    font-size: 1.5rem;\r\n    color: #000000;\r\n    font-family: 'Playfair Display', serif;\r\n  }\r\n\r\n  .user-information-place {\r\n    color: #666666;\r\n  }\r\n}\r\n\r\n.user-image {\r\n  height: 100px;\r\n  width: 100%;\r\n  background-position: center left;\r\n  background-repeat: no-repeat;\r\n  position: relative;\r\n  background-size: 50%;\r\n  clip-path: ellipse(30% 110% at 20% 90%);\r\n  opacity: 0.4;\r\n  border-radius: 18px;\r\n}\r\n\r\n.card-container {\r\n  background: #FFFFFF;\r\n  width: 587px;\r\n  position: relative;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);\r\n  border-radius: 18px;\r\n}\r\n",
                    "styleUrl": "./umbra-dumbra-view.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<ng-container *ngIf=\"users && users.length > 0\">\r\n\r\n  <div class=\"card-container mb-3\" *ngFor=\"let user of users | slice: 0 : displayNumber\">\r\n    <div class=\"user-information\">\r\n      <p class=\"mb-0 user-information-name\">\r\n        {{ user.firstName }} {{ user.lastName }}\r\n      </p>\r\n      <p class=\"user-information-place\">\r\n        {{ user.birthdate | date:\"YYYY\" }}\r\n        {{ user.deathdate | date:\"dd.mm.YYYY\" }}\r\n        | {{ user.deathCity }}\r\n      </p>\r\n    </div>\r\n    <div class=\"user-image\"\r\n         [ngStyle]=\"{'background-image': 'url(' + user.photoUrl + ')'}\">\r\n    </div>\r\n  </div>\r\n\r\n</ng-container>\r\n"
        },
        {
            "name": "UserListComponent",
            "id": "component-UserListComponent-055b74bded8f72828aeafa17f6ff2c42",
            "file": "src/app/memorial/containers/user-list/user-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user-list",
            "styleUrls": [
                "./user-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./user-list.component.html"
            ],
            "viewProviders": [],
            "propertiesClass": [
                {
                    "name": "_userId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "adstateMainColor",
                    "defaultValue": "'#692d87'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "bannerURL",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "currentLanguage$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "currentView",
                    "defaultValue": "this.listViewText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "displayNumberListView",
                    "defaultValue": "20",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "displayNumberShadowView",
                    "defaultValue": "4",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "errorCode$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "decorators": [
                        {
                            "name": "Select",
                            "stringifiedArguments": "MemorialSelectors.errorCode"
                        }
                    ]
                },
                {
                    "name": "errorMessage$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "decorators": [
                        {
                            "name": "Select",
                            "stringifiedArguments": "MemorialSelectors.errorMessage"
                        }
                    ]
                },
                {
                    "name": "filterItems",
                    "defaultValue": "filterItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "filterSelect",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgSelectComponent",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'filterSelect'"
                        }
                    ]
                },
                {
                    "name": "funeralHomeSetting$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<FuneralHomeSetting>",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "decorators": [
                        {
                            "name": "Select",
                            "stringifiedArguments": "MemorialSelectors.funeralHomeSetting"
                        }
                    ]
                },
                {
                    "name": "gridViewText",
                    "defaultValue": "'grid'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "isLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "decorators": [
                        {
                            "name": "Select",
                            "stringifiedArguments": "MemorialSelectors.isLoading"
                        }
                    ]
                },
                {
                    "name": "isOpenAdvancedSearch",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "listViewText",
                    "defaultValue": "'list'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "mainColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "page",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "searchBackground",
                    "defaultValue": "'#692d87'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "selectedFilterOption",
                    "defaultValue": "this.filterItems[0]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "selectedSortOption",
                    "defaultValue": "this.sortItems[0]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "sortItems",
                    "defaultValue": "sortItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "sortSelect",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgSelectComponent",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'sortSelect'"
                        }
                    ]
                },
                {
                    "name": "translationService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslocoService",
                    "optional": false,
                    "description": "",
                    "line": 76,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "users",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "users$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Array<User>>",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "decorators": [
                        {
                            "name": "Select",
                            "stringifiedArguments": "MemorialSelectors.users"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeView",
                    "args": [
                        {
                            "name": "viewType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 152,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "viewType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadMore",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 160,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onOpenAdvancedSearch",
                    "args": [
                        {
                            "name": "isOpenAdvancedSearch",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isOpenAdvancedSearch",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSelectFilter",
                    "args": [
                        {
                            "name": "filterOption",
                            "type": "Filter",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 143,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "filterOption",
                            "type": "Filter",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSelectSort",
                    "args": [
                        {
                            "name": "sortOption",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 134,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "sortOption",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setupFuneralHomeSettings",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 176,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setupMainColor",
                    "args": [
                        {
                            "name": "color",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 187,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "color",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setupSearchThumbnailBackground",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 197,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component, Input,\r\n  OnInit, AfterViewInit, ViewChild\r\n} from '@angular/core';\r\n\r\nimport {Select, Store} from '@ngxs/store';\r\n\r\nimport {Observable} from 'rxjs';\r\n\r\nimport {TranslocoService} from '@ngneat/transloco';\r\nimport {NgSelectComponent} from '@ng-select/ng-select';\r\n\r\nimport {Destroyable} from '@app/core/destroyable';\r\n\r\nimport {User} from '../../models/user.model';\r\nimport {AuthStorageService} from '@app/core/services';\r\nimport {MemorialActions} from '../../store/memorial.actions';\r\nimport {MemorialSelectors} from '../../store/memorial.selectors';\r\nimport {FuneralHomeSetting} from '../../models/funeralhome.model';\r\nimport {Sort, Filter, sortItems, filterItems} from '../../models/sort.model';\r\n\r\n@Destroyable()\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.scss']\r\n})\r\nexport class UserListComponent implements OnInit, AfterViewInit {\r\n\r\n  currentLanguage$: Observable<string>;\r\n\r\n  gridViewText = 'grid';\r\n  listViewText = 'list';\r\n  page = 0;\r\n  displayNumberListView = 20;\r\n  displayNumberShadowView = 4;\r\n  adstateMainColor = '#692d87';\r\n\r\n  users = [];\r\n  bannerURL = '';\r\n  mainColor: string;\r\n  searchBackground = '#692d87';\r\n  currentView = this.listViewText;\r\n  isOpenAdvancedSearch = false;\r\n\r\n  sortItems = sortItems;\r\n  filterItems = filterItems;\r\n\r\n  selectedSortOption = this.sortItems[0];\r\n  selectedFilterOption = this.filterItems[0];\r\n\r\n  @Select(MemorialSelectors.users) users$: Observable<Array<User>>;\r\n  @Select(MemorialSelectors.errorCode) errorCode$: Observable<string>;\r\n  @Select(MemorialSelectors.isLoading) isLoading$: Observable<boolean>;\r\n  @Select(MemorialSelectors.errorMessage) errorMessage$: Observable<string>;\r\n  @Select(MemorialSelectors.funeralHomeSetting) funeralHomeSetting$: Observable<FuneralHomeSetting>;\r\n\r\n  @Input()\r\n  get userId() {\r\n    return this._userId;\r\n  }\r\n\r\n  set userId(id: string) {\r\n    const funeralHomeId = parseInt(id, 0);\r\n    this.store.dispatch(new MemorialActions.GetFuneralHomeSettings(funeralHomeId)).subscribe();\r\n  }\r\n\r\n  private _userId: string;\r\n\r\n  @ViewChild('sortSelect') sortSelect: NgSelectComponent;\r\n  @ViewChild('filterSelect') filterSelect: NgSelectComponent;\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private authService: AuthStorageService,\r\n    public translationService: TranslocoService\r\n  ) {\r\n\r\n    this.setupMainColor(this.adstateMainColor);\r\n\r\n    this.store.dispatch(new MemorialActions.GetUsers(\r\n      this.displayNumberListView, this.page\r\n    )).subscribe();\r\n\r\n    this.setupFuneralHomeSettings();\r\n    // this.funeralHomeSetting$\r\n    //   .pipe(takeUntilDestroyed(this))\r\n    //   .subscribe((setting) => {\r\n    //     if (setting) {\r\n    //\r\n    //       this.setupMainColor(setting.mainColor);\r\n    //       this.bannerURL = setting.bannerURL;\r\n    //\r\n    //       if (!setting.themeId) {\r\n    //         this.currentView = this.listViewText;\r\n    //       } else {\r\n    //         this.currentView = setting.themeId === 0 ? this.listViewText : this.gridViewText;\r\n    //       }\r\n    //\r\n    //       setTimeout(this.setupSearchThumbnailBackground, 500);\r\n    //     }\r\n    //   });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.selectedSortOption = this.sortItems[0];\r\n    this.selectedFilterOption = this.filterItems[0];\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.currentLanguage$ = this.translationService.langChanges$;\r\n    this.currentLanguage$.subscribe(() => {\r\n      const sortOption = this.selectedSortOption;\r\n      const filterOption = {...this.selectedFilterOption};\r\n\r\n      if (this.selectedSortOption.value) {\r\n        this.sortSelect.handleClearClick();\r\n        setTimeout(() => {\r\n          this.selectedSortOption = sortOption;\r\n          this.sortSelect.blur();\r\n        }, 0);\r\n      }\r\n\r\n      if (this.selectedFilterOption.value) {\r\n        this.filterSelect.handleClearClick();\r\n        setTimeout(() => {\r\n          this.selectedFilterOption = filterOption;\r\n          this.filterSelect.blur();\r\n        }, 0);\r\n      }\r\n    });\r\n  }\r\n\r\n  onSelectSort(sortOption: Sort): void {\r\n    if (!sortOption?.value) {\r\n      return;\r\n    }\r\n\r\n    this.selectedSortOption = sortOption;\r\n    this.store.dispatch(new MemorialActions.SortMemorialPage(sortOption)).subscribe();\r\n  }\r\n\r\n  onSelectFilter(filterOption: Filter): void {\r\n    if (!filterOption?.value) {\r\n      return;\r\n    }\r\n\r\n    this.selectedFilterOption = filterOption;\r\n    this.store.dispatch(new MemorialActions.FilterMemorialPage(filterOption)).subscribe();\r\n  }\r\n\r\n  changeView(viewType: string): void {\r\n    this.currentView = viewType;\r\n  }\r\n\r\n  onOpenAdvancedSearch(isOpenAdvancedSearch: boolean): void {\r\n    this.isOpenAdvancedSearch = isOpenAdvancedSearch;\r\n  }\r\n\r\n  loadMore(): void {\r\n    let viewNumber = 0;\r\n\r\n    if (this.currentView === this.listViewText) {\r\n      this.displayNumberListView = this.displayNumberListView + 7;\r\n      viewNumber = this.displayNumberListView;\r\n    }\r\n\r\n    if (this.currentView === this.gridViewText) {\r\n      this.displayNumberShadowView = this.displayNumberShadowView + 4;\r\n      viewNumber = this.displayNumberShadowView;\r\n    }\r\n\r\n    this.store.dispatch(new MemorialActions.GetUsers(viewNumber, this.page)).subscribe();\r\n  }\r\n\r\n  setupFuneralHomeSettings(): void {\r\n    this.authService.isAuthenticatedPromise().then((isLoggedIn: boolean) => {\r\n      if (isLoggedIn) {\r\n        this.authService.getLoggedInUserPromise().then(loggedInUser => {\r\n          const id = loggedInUser.username === 'metalgear' ? 2 : 1;\r\n          // this.store.dispatch(new MemorialActions.GetFuneralHomeSettings(id)).subscribe();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  setupMainColor(color): void {\r\n    const root = document.documentElement;\r\n    this.mainColor = color;\r\n    if (!color) {\r\n      color = '#692d87';\r\n    }\r\n\r\n    root.style.setProperty('--bs-primary', '#692d87');\r\n  }\r\n\r\n  setupSearchThumbnailBackground(): string {\r\n    if (!this.bannerURL) {\r\n      this.searchBackground = this.adstateMainColor;\r\n    }\r\n\r\n    return this.searchBackground;\r\n  }\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "$adstate-main-color: var(--bs-primary);\r\n$adstate-main-color-rgba: rgba(105, 45, 135, 0.2);\r\n$white: #FFFFFF;\r\n\r\n.user-list {\r\n  margin-top: -6rem;\r\n}\r\n\r\n.search-bar {\r\n  max-width: 700px;\r\n}\r\n\r\n.list-container .list-container-thumbnail {\r\n  background-size: cover;\r\n  background-repeat: round;\r\n  opacity: 0.4;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.form-select {\r\n  height: 30px;\r\n  font-size: 14px;\r\n  padding: 0 10px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.btn-custom {\r\n  height: 39px;\r\n  background: $adstate-main-color;\r\n  color: #C0B59E;\r\n  box-shadow: 0 4px 4px rgba($adstate-main-color, 0.25);\r\n  border-radius: 8px;\r\n  z-index: 2;\r\n}\r\n\r\n.view-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  .view-container-thumbnail {\r\n    height: 100%;\r\n    width: 100%;\r\n    top: 0;\r\n    right: 0;\r\n    opacity: 0.5;\r\n    background-size: cover;\r\n  }\r\n\r\n  .view {\r\n    z-index: 2;\r\n  }\r\n}\r\n\r\n.actions {\r\n  left: 1rem;\r\n  font-size: 1.25rem;\r\n}\r\n\r\n\r\n.btn-primary.dropdown-toggle {\r\n  background-color: $adstate-main-color;\r\n  border-color: $adstate-main-color;\r\n\r\n  &:hover {\r\n    background-color: $adstate-main-color;\r\n    border-color: $adstate-main-color;\r\n  }\r\n}\r\n\r\n.sort-filter-container {\r\n  display: flex;\r\n}\r\n\r\n.sort,\r\n.filter {\r\n  min-width: 200px;\r\n  width: 200px;\r\n\r\n  ::ng-deep {\r\n    .ng-dropdown-panel .ng-dropdown-panel-items .ng-option.ng-option-selected {\r\n      background-color: $adstate-main-color-rgba;\r\n    }\r\n\r\n    .ng-dropdown-panel .ng-dropdown-panel-items .ng-option.ng-option-marked {\r\n      background-color: $adstate-main-color-rgba;\r\n    }\r\n\r\n    .ng-select-container.ng-has-value {\r\n      border-color: $adstate-main-color;\r\n      box-shadow: none;\r\n    }\r\n  }\r\n}\r\n\r\n.load-more-btn {\r\n  width: 25%;\r\n}\r\n\r\n.container.sort-filter {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.sort-container {\r\n  margin-left: 1rem;\r\n}\r\n\r\n@media only screen and (max-width: 1000px) {\r\n  .load-more-btn {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n\r\n@media only screen and (max-width: 765px) {\r\n  .sort-container {\r\n    margin-left: 0;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 698px) {\r\n  .container.sort-filter {\r\n    flex-direction: column-reverse;\r\n    align-items: flex-start;\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  .sort-filter-container {\r\n    width: 100%;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .sort-container,\r\n  .filter-container,\r\n  .filter,\r\n  .sort {\r\n    width: 100%;\r\n  }\r\n\r\n  .sort-container {\r\n    margin: 1rem 0;\r\n  }\r\n}\r\n",
                    "styleUrl": "./user-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthStorageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translationService",
                        "type": "TranslocoService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 71,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthStorageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translationService",
                        "type": "TranslocoService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "accessors": {
                "userId": {
                    "name": "userId",
                    "setSignature": {
                        "name": "userId",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "id",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 63,
                        "jsdoctags": [
                            {
                                "name": "id",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "userId",
                        "type": "",
                        "returnType": "",
                        "line": 59
                    }
                }
            },
            "templateData": "<main class=\"list-container\" [ngClass]=\"{'h-100': ((users$ | async) && (users$ | async).length < 5)\r\n                          || (!(users$ | async) && !(isLoading$ | async))}\">\r\n\r\n  <section class=\"mt-4\">\r\n    <app-search [searchBackground]=\"searchBackground\"></app-search>\r\n  </section>\r\n\r\n  <div class=\"user-list\">\r\n\r\n    <!-- <div class=\"container sort-filter\">\r\n\r\n      <h2 class=\"fs-5\">{{ 'portalPage.text.searchResultNational' | transloco }}</h2>\r\n\r\n      <div class=\"sort-filter-container\">\r\n        <div class=\"filter-container\">\r\n          <label for=\"portalPage-filter-filter\">\r\n            {{ 'portalPage.filter.filter' | transloco }}\r\n          </label> <br>\r\n          <ng-select labelForId=\"portalPage-filter-filter\" #filterSelect [items]=\"filterItems\"\r\n            [(ngModel)]=\"selectedFilterOption\" [clearable]=\"false\" [editableSearchTerm]=\"false\"\r\n            (change)=\"onSelectFilter($event)\" data-cy=\"filter-selection\" class=\"filter\">\r\n            <ng-option *ngFor=\"let item of filterItems\" [value]=\"item\">\r\n              {{ 'portalPage.filter.' + item.key | translate | async}}\r\n            </ng-option>\r\n          </ng-select>\r\n\r\n        </div>\r\n        <div class=\"sort-container\">\r\n          <label for=\"portalPage-sort-sort\">{{ 'portalPage.sort.sort' | transloco }}</label> <br>\r\n          <ng-select labelForId=\"portalPage-sort-sort\" [items]=\"sortItems\" #sortSelect [(ngModel)]=\"selectedSortOption\"\r\n            [clearable]=\"false\" [editableSearchTerm]=\"false\" (change)=\"onSelectSort($event)\" data-cy=\"sort-selection\"\r\n            class=\"sort\">\r\n            <ng-option *ngFor=\"let item of sortItems\" [value]=\"item\" data-cy=\"sort-option-{{item.key}}\">\r\n              {{'portalPage.sort.' + item.key | translate | async}}\r\n            </ng-option>\r\n          </ng-select>\r\n        </div>\r\n      </div>\r\n\r\n    </div> -->\r\n\r\n    <div class=\"container-fluid view-container\">\r\n\r\n      <div class=\"view-container-thumbnail\"></div>\r\n\r\n      <app-notify [mainColor]=\"mainColor\"></app-notify>\r\n\r\n      <ng-container *ngIf=\"(users$ | async)\r\n                      && (users$ | async).length > 0; let value\">\r\n\r\n        <section *ngIf=\"currentView === listViewText; else gridView\" class=\"view\">\r\n          <app-standard-view [users]=\"(users$ | async)\" [end]=\"displayNumberListView\"\r\n            [displayNumberListView]=\"displayNumberListView\"></app-standard-view>\r\n        </section>\r\n\r\n        <ng-template #gridView>\r\n          <app-umbra-dumbra-view [users]=\"(users$ | async)\" [displayNumberShadowView]=\"displayNumberShadowView\">\r\n          </app-umbra-dumbra-view>\r\n        </ng-template>\r\n\r\n      </ng-container>\r\n\r\n      <div *ngIf=\"(users$ | async) === undefined && (isLoading$ | async)\" class=\"m-5 d-flex justify-content-center\"\r\n        [ngStyle]=\"{'color': mainColor}\">\r\n        <div class=\"spinner-border\" role=\"status\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"container-fluid text-center\">\r\n      <button *ngIf=\"(users$ | async)\" class=\"btn btn-primary mb-5 mt-4 position-relative load-more-btn\"\r\n        (click)=\"loadMore()\">\r\n\r\n        <ng-container *ngIf=\"((users$ | async) && (isLoading$ | async)); else loadMoreResult\">\r\n          {{ 'portalPage.button.loadingMore' | transloco }}\r\n          <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n        </ng-container>\r\n\r\n        <ng-template #loadMoreResult>\r\n          <span>{{ 'portalPage.button.loadMore' | transloco }}</span>\r\n        </ng-template>\r\n      </button>\r\n    </div>\r\n\r\n  </div>\r\n\r\n\r\n</main>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AdminModule",
            "id": "module-AdminModule-7c977ddc23981e6578c7dfc796912b21",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/admin/admin.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\r\n\r\n\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { StandardTemplateComponent } from './standard-template/standard-template.component';\r\nimport { NewGenerationTemplateComponent } from './new-generation-template/new-generation-template.component';\r\nimport { NetNoticeTemplateComponent } from './net-notice-template/net-notice-template.component';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {CustomSpecificComponent} from './custom-specific/custom-specific.component';\r\nimport {ToastrModule} from \"ngx-toastr\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SettingsComponent,\r\n    StandardTemplateComponent,\r\n    NewGenerationTemplateComponent,\r\n    NetNoticeTemplateComponent,\r\n    CustomSpecificComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AdminRoutingModule,\r\n    FormsModule,\r\n    CarouselModule.forRoot(),\r\n  ]\r\n})\r\nexport class AdminModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CustomSpecificComponent"
                        },
                        {
                            "name": "NetNoticeTemplateComponent"
                        },
                        {
                            "name": "NewGenerationTemplateComponent"
                        },
                        {
                            "name": "SettingsComponent"
                        },
                        {
                            "name": "StandardTemplateComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AdminRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AdminRoutingModule",
            "id": "module-AdminRoutingModule-f114721c34644aaa6f9496370f8cb5d7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/admin/admin-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {SettingsComponent} from './settings/settings.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-acc6de5cc1a4b135668768507bc4c7ef",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [
                {
                    "name": "exportElement",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngDoBootstrap",
                    "args": [
                        {
                            "name": "_appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "_appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "sourceCode": "import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule, APP_INITIALIZER, ApplicationRef, Injector} from '@angular/core';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {createCustomElement} from '@angular/elements';\r\n\r\nimport {KeycloakAngularModule, KeycloakService} from 'keycloak-angular';\r\n\r\nimport {\r\n  BsDatepickerContainerComponent,\r\n  BsDatepickerModule,\r\n  BsDaterangepickerContainerComponent\r\n} from 'ngx-bootstrap/datepicker';\r\nimport {NgxMaskModule} from 'ngx-mask';\r\nimport {NgSelectModule} from '@ng-select/ng-select';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {CoreModule} from './core/core.module';\r\nimport {LayoutModule} from './layout/layout.module';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {initializeKeycloak} from './keycloackhelper';\r\nimport {TranslocoRootModule} from './transloco/transloco-root.module';\r\nimport {SearchComponent} from './memorial/containers/search/search.component';\r\nimport {UserListComponent} from './memorial/containers/user-list/user-list.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n\r\n    CoreModule,\r\n    LayoutModule,\r\n    BsDatepickerModule.forRoot(),\r\n    NgxMaskModule.forRoot(),\r\n    NgSelectModule,\r\n    FormsModule,\r\n    KeycloakAngularModule,\r\n    TranslocoRootModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: initializeKeycloak,\r\n      multi: true,\r\n      deps: [KeycloakService],\r\n    }\r\n  ],\r\n  entryComponents: [\r\n    UserListComponent, SearchComponent,\r\n    BsDatepickerContainerComponent,\r\n    BsDaterangepickerContainerComponent\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule {\r\n  constructor(private injector: Injector, private router: Router) {\r\n\r\n    this.exportElement();\r\n\r\n    // if (environment.production) {\r\n    //   this.router.navigateByUrl('', {skipLocationChange: true});\r\n    // }\r\n  }\r\n\r\n  exportElement(): void {\r\n    const userList = createCustomElement(UserListComponent, {injector: this.injector});\r\n    customElements.define('ng-user-list', userList);\r\n  }\r\n\r\n  ngDoBootstrap(_appRef: ApplicationRef): void {}\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "CoreModule"
                        },
                        {
                            "name": "LayoutModule"
                        },
                        {
                            "name": "TranslocoRootModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-a8c39c6dd74b833770a26cfca3aeacba",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\n\r\nimport {AuthGuard} from './auth/auth.guard';\r\nimport {DefaultLayoutComponent} from './layout/default-layout/default-layout.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DefaultLayoutComponent,\r\n    loadChildren: () => \"import('./memorial/memorial.module').then(m => m.MemorialModule)\"\r\n  },\r\n  {\r\n    path: 'admin',\r\n    component: DefaultLayoutComponent,\r\n    loadChildren: () => \"import('./admin/admin.module').then(m => m.AdminModule)\",\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'custom-admin',\r\n    component: DefaultLayoutComponent,\r\n    loadChildren: () => \"import('./customization-admin/customization-admin.module').then(m => m.CustomizationAdminModule)\",\r\n    // canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'auth',\r\n    loadChildren: () => \"import('./auth/auth.module').then(m => m.AuthModule)\",\r\n  },\r\n  // {\r\n  //   path: '',\r\n  //   pathMatch: 'full',\r\n  //   redirectTo: ''\r\n  // }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {relativeLinkResolution: 'legacy'})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthModule",
            "id": "module-AuthModule-455e90b16e823e23c823a3422c56fa56",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/auth/auth.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {BsDropdownModule} from 'ngx-bootstrap/dropdown';\n\n\nimport {AuthRoutingModule} from './auth-routing.module';\nimport {LoginComponent} from './login/login.component';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n\n  ],\n})\nexport class AuthModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LoginComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AuthRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthRoutingModule",
            "id": "module-AuthRoutingModule-9ca862317984ff57a8f789f03203a307",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/auth/auth-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {LoginComponent} from './login/login.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: LoginComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CheckboxModule",
            "id": "module-CheckboxModule-398888c117e4ad915f85ff751189144b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/checkbox/checkbox.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CheckboxComponent\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    CheckboxComponent\r\n  ]\r\n})\r\nexport class CheckboxModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CoreModule",
            "id": "module-CoreModule-4b15d629ce5ea1bc4b662ff442218504",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core/core.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule, Optional, SkipSelf} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\n\r\nimport {ApiPrefixInterceptor, ErrorHandlerInterceptor} from './interceptors';\r\nimport {SERVICES} from './services';\r\nimport {NgxsModule} from '@ngxs/store';\r\nimport {environment} from '@app/env';\r\nimport {NgxsReduxDevtoolsPluginModule} from '@ngxs/devtools-plugin';\r\nimport {NgxsLoggerPluginModule} from '@ngxs/logger-plugin';\r\nimport {AdminState} from '../admin/store/admin.state';\r\nimport {MemorialState} from '../memorial/store/memorial.state';\r\nimport {ToastrModule} from 'ngx-toastr';\r\nimport {NgxsRouterPluginModule} from '@ngxs/router-plugin';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n\r\n    NgxsModule.forRoot([AdminState, MemorialState], {\r\n      developmentMode: !environment.production\r\n    }),\r\n    NgxsLoggerPluginModule.forRoot(),\r\n    NgxsRouterPluginModule.forRoot(),\r\n    NgxsReduxDevtoolsPluginModule.forRoot(),\r\n    ToastrModule.forRoot(),\r\n  ],\r\n  providers: [\r\n    {provide: HTTP_INTERCEPTORS, useClass: ApiPrefixInterceptor, multi: true},\r\n    // {provide: HTTP_INTERCEPTORS, useClass: HttpTokenInterceptor, multi: true},\r\n    {provide: HTTP_INTERCEPTORS, useClass: ErrorHandlerInterceptor, multi: true},\r\n    SERVICES\r\n  ]\r\n})\r\nexport class CoreModule {\r\n  constructor(\r\n    @Optional() @SkipSelf() parentModule: CoreModule\r\n  ) {\r\n    if (parentModule) {\r\n      throw new Error('CoreModule is already loaded. Import only in AppModule!');\r\n    }\r\n  }\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "ApiPrefixInterceptor"
                        },
                        {
                            "name": "AuthStorageService"
                        },
                        {
                            "name": "ErrorHandlerInterceptor"
                        },
                        {
                            "name": "JwtService"
                        },
                        {
                            "name": "LocalStorageService"
                        },
                        {
                            "name": "SessionStorageService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CustomizationAdminModule",
            "id": "module-CustomizationAdminModule-3be6ce369e1b5550f1697652b0e18e9e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/customization-admin/customization-admin.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {TooltipModule} from 'ngx-bootstrap/tooltip';\r\nimport {ImageCropperModule} from 'ngx-image-cropper';\r\n\r\nimport {containers} from './containers';\r\nimport {components} from './components';\r\n\r\nimport {ToggleModule} from '@app/shared/toggle/toggle.module';\r\nimport {CheckboxModule} from '@app/shared/checkbox/checkbox.module';\r\nimport {CustomizationAdminRoutingModule} from './customization-admin-routing.module';\r\n\r\nimport { AngularPinturaModule } from 'angular-pintura';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    containers,\r\n    components\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    CustomizationAdminRoutingModule,\r\n    CheckboxModule,\r\n    ToggleModule,\r\n    TooltipModule.forRoot(),\r\n    ImageCropperModule,\r\n    AngularPinturaModule\r\n  ]\r\n})\r\nexport class CustomizationAdminModule {\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BannerImageComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "ColorsComponent"
                        },
                        {
                            "name": "CustomAdminPanelComponent"
                        },
                        {
                            "name": "ImageUploadComponent"
                        },
                        {
                            "name": "LayoutsComponent"
                        },
                        {
                            "name": "LogotypeComponent"
                        },
                        {
                            "name": "SaveSettingsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CheckboxModule"
                        },
                        {
                            "name": "CustomizationAdminRoutingModule"
                        },
                        {
                            "name": "ToggleModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CustomizationAdminRoutingModule",
            "id": "module-CustomizationAdminRoutingModule-6b1a7c4e837c26ca893feb77edc3534b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/customization-admin/customization-admin-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport {CustomAdminPanelComponent} from './containers/custom-admin-panel/custom-admin-panel.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CustomAdminPanelComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CustomizationAdminRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LayoutModule",
            "id": "module-LayoutModule-750f9967fae24e604603c54965eaf767",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/layout/layout.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {RouterModule} from '@angular/router';\r\nimport {BsDropdownModule} from 'ngx-bootstrap/dropdown';\r\n\r\nimport {HeaderComponent} from './header/header.component';\r\nimport {DefaultLayoutComponent} from './default-layout/default-layout.component';\r\nimport {NgSelectModule} from \"@ng-select/ng-select\";\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {TranslocoRootModule} from '../transloco/transloco-root.module';\r\nimport { LanguageSelectComponent } from './language-select/language-select.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HeaderComponent,\r\n    DefaultLayoutComponent,\r\n    LanguageSelectComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    NgSelectModule,\r\n    FormsModule,\r\n\r\n    BsDropdownModule.forRoot(),\r\n    TranslocoRootModule\r\n  ]\r\n})\r\nexport class LayoutModule {\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DefaultLayoutComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "LanguageSelectComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "TranslocoRootModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MemorialModule",
            "id": "module-MemorialModule-3ce72c26ae4e52c8734d58ee6d8f52b8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/memorial/memorial.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\nimport {NgxMaskModule} from 'ngx-mask';\r\nimport {ButtonsModule} from 'ngx-bootstrap/buttons';\r\nimport {BsDropdownModule} from 'ngx-bootstrap/dropdown';\r\nimport {CollapseModule} from 'ngx-bootstrap/collapse';\r\nimport {\r\n  BsDatepickerModule,\r\n  BsDatepickerContainerComponent,\r\n  BsDaterangepickerContainerComponent\r\n} from 'ngx-bootstrap/datepicker';\r\nimport {NgSelectModule} from '@ng-select/ng-select';\r\n\r\nimport {CONTAINERS} from './containers';\r\nimport {COMPONENTS} from './components';\r\n\r\nimport {DateHelperService} from './services/date-helper';\r\nimport {MemorialRoutingModule} from './memorial-routing.module';\r\n\r\nimport {SearchComponent} from './containers/search/search.component';\r\nimport {UserListComponent} from './containers/user-list/user-list.component';\r\nimport {TranslocoRootModule} from '../transloco/transloco-root.module';\r\nimport { TranslatePipe } from './pipe/translate.pipe';\r\nimport { FilterComponent } from './components/filter/filter.component';\r\nimport { SortComponent } from './components/sort/sort.component';\r\nimport { DateRangeComponent } from './components/date-range/date-range.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CONTAINERS,\r\n    COMPONENTS,\r\n    TranslatePipe,\r\n    FilterComponent,\r\n    SortComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MemorialRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n\r\n    ButtonsModule.forRoot(),\r\n    CollapseModule.forRoot(),\r\n    BsDropdownModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    NgxMaskModule.forRoot(),\r\n    NgSelectModule,\r\n    TranslocoRootModule\r\n  ],\r\n  providers: [DateHelperService],\r\n  exports: [\r\n    UserListComponent,\r\n    SearchComponent,\r\n    DateRangeComponent,\r\n    BsDatepickerContainerComponent,\r\n    BsDaterangepickerContainerComponent\r\n  ],\r\n})\r\nexport class MemorialModule {\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "DateHelperService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DateRangeComponent"
                        },
                        {
                            "name": "FilterComponent"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "NetNoticeViewComponent"
                        },
                        {
                            "name": "NotifyComponent"
                        },
                        {
                            "name": "StandardViewComponent"
                        },
                        {
                            "name": "TranslatePipe"
                        },
                        {
                            "name": "UmbraDumbraViewComponent"
                        },
                        {
                            "name": "UserListComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MemorialRoutingModule"
                        },
                        {
                            "name": "TranslocoRootModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DateRangeComponent"
                        },
                        {
                            "name": "UserListComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MemorialRoutingModule",
            "id": "module-MemorialRoutingModule-bcfcbd0760a487bb59c6dd1995d6ac89",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/memorial/memorial-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {UserListComponent} from './containers/user-list/user-list.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserListComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MemorialRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ToggleModule",
            "id": "module-ToggleModule-a12c3ca73ad4c07140a24224f2892220",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/toggle/toggle.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ToggleComponent } from './toggle/toggle.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ToggleComponent\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    ToggleComponent\r\n  ]\r\n})\r\nexport class ToggleModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ToggleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TranslocoRootModule",
            "id": "module-TranslocoRootModule-a21fb0e15f0beff477d8d68f0f9329e0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/transloco/transloco-root.module.ts",
            "methods": [],
            "sourceCode": "import {TRANSLOCO_CONFIG, TranslocoConfig, TranslocoModule} from '@ngneat/transloco';\r\nimport {NgModule} from '@angular/core';\r\nimport {translocoLoader} from './transloco.loader';\r\nimport {environment} from '@app/env';\r\nimport {customMissingHandler} from './transloco.missing-handler';\r\n\r\nconst translocoConfig: TranslocoConfig = {\r\n  availableLangs: ['cs', 'da', 'de', 'en', 'es', 'nb', 'nl', 'sk', 'sv'],\r\n  defaultLang: 'en',\r\n  reRenderOnLangChange: true,\r\n  prodMode: environment.production,\r\n};\r\n\r\nconst translocoProvider = {\r\n  provide: TRANSLOCO_CONFIG,\r\n  useValue: translocoConfig\r\n};\r\n\r\n@NgModule({\r\n  exports: [TranslocoModule],\r\n  providers: [\r\n    translocoProvider,\r\n    translocoLoader,\r\n    customMissingHandler\r\n  ]\r\n})\r\nexport class TranslocoRootModule {\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "APP_PREFIX",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/web-storage/session-storage.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'APP__'"
            },
            {
                "name": "bannerOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/banner/banner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  banner1: './banner/banner1.png',\r\n  banner2: './banner/banner2.png',\r\n  banner3: './banner/banner3.png',\r\n  banner4: './banner/banner4.png',\r\n}"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/customization-admin/components/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  NetNoticeTemplateComponent,\r\n  NewGenerationTemplateComponent,\r\n  StandardTemplateComponent,\r\n  ImageUploadComponent\r\n]"
            },
            {
                "name": "COMPONENTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/memorial/components/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  StandardViewComponent,\r\n  UmbraDumbraViewComponent,\r\n  NetNoticeViewComponent,\r\n  FooterComponent,\r\n  DateRangeComponent\r\n]"
            },
            {
                "name": "containers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/customization-admin/containers/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  CustomAdminPanelComponent,\r\n  CardComponent,\r\n  BannerImageComponent,\r\n  SearchComponent,\r\n  ColorsComponent,\r\n  RecentDeceasedComponent,\r\n  LogotypeComponent,\r\n  LayoutsComponent,\r\n  SnippetLinkComponent,\r\n  SaveSettingsComponent\r\n]"
            },
            {
                "name": "CONTAINERS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/memorial/containers/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  UserListComponent,\r\n  SearchComponent,\r\n  NotifyComponent\r\n]"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "currentLayoutOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/layout/layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  standardTheme: 0,\r\n  newGenerationTheme: 1,\r\n  netNotice: 2,\r\n  custom: 3\r\n}"
            },
            {
                "name": "customMissingHandler",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/transloco/transloco.missing-handler.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  provide: TRANSLOCO_MISSING_HANDLER,\r\n  useClass: CustomHandler\r\n}"
            },
            {
                "name": "CustomSearchBox",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/search/search.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SearchBoxComponent>",
                "defaultValue": "(args) => {\r\n  return {\r\n    props: {\r\n      searchLabel: args.searchLabel,\r\n      placeholder: args.placeholder,\r\n      isLocalSearch: args.isLocalSearch,\r\n      isCustomSearch: true\r\n    }\r\n  }\r\n}"
            },
            {
                "name": "CustomSearchControl",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CustomSearchControlComponent>",
                "defaultValue": "(args) => {\r\n  return {\r\n    component: CustomSearchControlComponent,\r\n    props: {\r\n      icon: args.icon,\r\n      iconPlace: args.iconPlace,\r\n      hasIconForLabel: args.hasIconForLabel,\r\n      hasIconForOption: args.hasIconForOption,\r\n    }\r\n  }\r\n}"
            },
            {
                "name": "DeathNotice",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/icon/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(arg) => ({\r\n  props: {\r\n    ...arg,\r\n    background: arg.background,\r\n    isDisabled: arg.isDisabled,\r\n    height: arg.height,\r\n    width: arg.width,\r\n  },\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/admin-banner/admin-banner.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/banner/banner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<BannerComponent>",
                "defaultValue": "(args) => {\r\n  return {\r\n    props: {\r\n      ...args,\r\n      height: args.height,\r\n    },\r\n  }\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/color-picker/color-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/colors/colors.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(arg) => ({\r\n  props: {\r\n    ...arg,\r\n    lightFontChecked: arg.lightFontChecked,\r\n    darkFontChecked: arg.darkFontChecked\r\n  },\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/customization-admin-page/customization-admin-page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/dropdown/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DropDownComponent>",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/filter/filter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/language/language.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(arg) => ({\r\n  props: {\r\n    ...arg,\r\n    defaultLanguage: arg.defaultLanguage\r\n  },\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/layout/layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/logo/logo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<LogoComponent>",
                "defaultValue": "(args) => ({\r\n  props: { ...args },\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/logo-type/logo-type.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(arg) => ({\r\n  props: {\r\n    ...arg,\r\n    imageSourceL: arg.imageSource,\r\n    logoAlignL: arg.logoAlign,\r\n  },\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/radio/radio.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/recent-deceased/recent-deceased.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/row/row.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(arg) => ({\r\n  props: {\r\n    ...arg\r\n  },\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/save-discard-change/save-discard-change.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/search/search.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SearchBoxComponent>",
                "defaultValue": "(args) => {\r\n  return {\r\n    props: {\r\n      searchLabel: args.searchLabel,\r\n      placeholder: args.placeholder,\r\n      isLocalSearch: args.isLocalSearch\r\n    }\r\n  }\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/search-result/search-result.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(arg) => ({\r\n  props: {\r\n    ...arg\r\n  },\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/search-settings/search-settings.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(arg) => ({\r\n  props: {\r\n    ...arg,\r\n    types: arg.types\r\n  },\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<BasicSelectComponent>",
                "defaultValue": "(args) => {\r\n  return {\r\n    component: BasicSelectComponent,\r\n    props: {\r\n      icon: args.icon,\r\n      iconPlace: args.iconPlace,\r\n      hasIconForLabel: args.hasIconForLabel,\r\n      hasIconForOption: args.hasIconForOption,\r\n    }\r\n  }\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/snippet-link/snippet-link.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/sort/sort.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/toggle/toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/layout-template/net-notice/net-notice.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/layout-template/new-generation/new-generation.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/layout-template/standard/standard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
            },
            {
                "name": "demoIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/dropdown/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  funnel: 'funnel',\r\n  arrowDownUp: 'arrow-down-up',\r\n  handThumbsUp: 'hand-thumbs-up',\r\n  infoCircle: 'info-circle',\r\n  lock: 'lock',\r\n}"
            },
            {
                "name": "demoIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  funnel: 'funnel',\r\n  arrowDownUp: 'arrow-down-up',\r\n  handThumbsUp: 'hand-thumbs-up',\r\n  infoCircle: 'info-circle',\r\n  lock: 'lock',\r\n}"
            },
            {
                "name": "DESTROY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/destroyable/take-until-destroy.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Symbol('__destroyed')"
            },
            {
                "name": "Donation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/icon/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(arg) => ({\r\n  props: {\r\n    ...arg,\r\n    background: arg.background,\r\n    icon: iconSource.donationFilterIcon,\r\n    isDisabled: arg.isDisabled\r\n  },\r\n})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.kubernetes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  staging: false,\r\n  baseUrl: 'http://10.2.0.222:8081',\r\n  fakeUrl: 'http://localhost:3000',\r\n  apiBaseURL: '/apis',\r\n  keycloakRedirectURL: '/auth',\r\n  realm: 'demo',\r\n  clientId: 'my-app',\r\n  kubernetes: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  staging: false,\r\n  baseUrl: 'http://10.2.0.222',\r\n  fakeUrl: 'http://localhost:3000',\r\n  apiBaseURL: 'http://10.2.0.222:8081',\r\n  keycloakRedirectURL: 'http://10.2.0.222:8081',\r\n  realm: 'demo',\r\n  clientId: 'my-app',\r\n  kubernetes: false\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.staging.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  staging: true,\r\n  baseUrl: 'http://10.2.0.222',\r\n  apiBaseURL: 'http://10.2.0.222:8081',\r\n  fakeUrl: 'http://localhost:3000',\r\n  keycloakRedirectURL: 'http://10.2.0.222:8080/auth',\r\n  kubenetes: '',\r\n  realm: 'demo',\r\n  clientId: 'my-app',\r\n  kubernetes: false\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  staging: false,\r\n  baseUrl: 'http://localhost:4200',\r\n  apiBaseURL: 'http://localhost:8090/apis',\r\n  keycloakRedirectURL: 'http://localhost:8080/auth',\r\n  fakeUrl: 'http://localhost:3000',\r\n  realm: 'demo',\r\n  clientId: 'my-app',\r\n  kubernetes: false\r\n}"
            },
            {
                "name": "filterItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/memorial/models/sort.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<Filter>",
                "defaultValue": "[\r\n  {label: 'Filter by', param: null, value: null, key: 'filterBy'},\r\n  {label: 'Memorial page', param: 'memorial_page', value: 'desc', key: 'memorialPage'},\r\n  {label: 'Have donations', param: 'having_donation', value: 'true', key: 'haveDonation'},\r\n  {label: 'Has death notice', param: 'having_death_notice', value: 'true', key: 'hasDeathNotice'},\r\n  {label: 'Has flower shop', param: 'having_flower_shop', value: 'Home', key: 'hasFlowerShop'},\r\n]"
            },
            {
                "name": "Flower",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/icon/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(arg) => ({\r\n  props: {\r\n    ...arg,\r\n    background: arg.background,\r\n    icon: iconSource.flowerFilterIcon,\r\n    isDisabled: arg.isDisabled\r\n  },\r\n})"
            },
            {
                "name": "iconSource",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/icon/icon.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  deathNoticeIcon: './DNG.svg',\r\n  candleFilterIcon: './heart.svg',\r\n  donationFilterIcon: './donate.svg',\r\n  flowerFilterIcon: './flower.svg',\r\n}"
            },
            {
                "name": "languageOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/language/language.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  { label: 'Česky', value: 'cs', flag: './flags/czech.png' },\r\n  { label: 'Dansk', value: 'da', flag: './flags/dansk.png' },\r\n  { label: 'Nederlands', value: 'nl', flag: './flags/netherlands.png' },\r\n  { label: 'English', value: 'en', flag: './flags/english.png' },\r\n  { label: 'Deutsch', value: 'de', flag: './flags/deutsch.png' },\r\n  { label: 'Norsk', value: 'nb', flag: './flags/norway.png' },\r\n  { label: 'Slovensky', value: 'sk', flag: './flags/slovakia.png' },\r\n  { label: 'Svenska', value: 'sv', flag: './flags/svenska.png' },\r\n]"
            },
            {
                "name": "languages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/language/language.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  cs: 'cs',\r\n  da: 'da',\r\n  nl: 'nl',\r\n  en: 'en',\r\n  de: 'de',\r\n  nb: 'nb',\r\n  sk: 'sk',\r\n  sv: 'sv',\r\n}"
            },
            {
                "name": "MemorialPage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/icon/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(arg) => ({\r\n  props: {\r\n    ...arg,\r\n    background: arg.background,\r\n    icon: iconSource.candleFilterIcon,\r\n    isDisabled: arg.isDisabled\r\n  },\r\n})"
            },
            {
                "name": "Menu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/dropdown/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DropDownComponent>",
                "defaultValue": "(args) => {\r\n  return {\r\n    component: DropDownComponent,\r\n    props: {\r\n      label: 'Menu',\r\n      icon: demoIcon.lock,\r\n      iconPlace: 'Left',\r\n      items: [\r\n        {\r\n          value: 'Hjem',\r\n          hasIcon: false\r\n        },\r\n        {\r\n          value: 'To the funeral home page',\r\n          hasIcon: false\r\n        },\r\n        {\r\n          value: 'About portal',\r\n          hasIcon: false\r\n        },\r\n        {\r\n          value: 'Terms',\r\n          hasIcon: false\r\n        },\r\n        {\r\n          value: 'Privacy policy',\r\n          hasIcon: false\r\n        },\r\n        {\r\n          value: 'Cookie policy',\r\n          hasIcon: false\r\n        },\r\n        {\r\n          value: 'Administrator login',\r\n          hasIcon: true\r\n        }\r\n      ],\r\n    },\r\n  };\r\n}"
            },
            {
                "name": "MultiSelectCheckbox",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<MultiSelectCheckboxComponent>",
                "defaultValue": "(args) => {\r\n  return {\r\n    component: MultiSelectCheckboxComponent,\r\n    props: {\r\n      icon: args.icon,\r\n      iconPlace: args.iconPlace,\r\n      hasIconForLabel: args.hasIconForLabel,\r\n      hasIconForOption: args.hasIconForOption,\r\n      selectedPeople: args.selectedPeople,\r\n    }\r\n  }\r\n}"
            },
            {
                "name": "PortalPage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/portal-page/portal-page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(arg) => ({\r\n  props: {\r\n    ...arg\r\n  },\r\n})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "SearchAutoComplete",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SearchAutocompleteComponent>",
                "defaultValue": "(args) => {\r\n  return {\r\n    component: SearchAutocompleteComponent,\r\n    props: {\r\n      icon: args.icon,\r\n      iconPlace: args.iconPlace,\r\n      hasIconForLabel: args.hasIconForLabel,\r\n      hasIconForOption: args.hasIconForOption\r\n    }\r\n  }\r\n}"
            },
            {
                "name": "SERVICES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/services/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  AuthStorageService,\r\n  SessionStorageService,\r\n  LocalStorageService,\r\n  JwtService\r\n]"
            },
            {
                "name": "sortItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/memorial/models/sort.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<Sort>",
                "defaultValue": "[\r\n  {label: 'Sort by', param: null, value: null, key: 'sortBy'},\r\n  {label: 'Date of birth', param: 'birth_date', value: 'desc', key: 'dateOfBirth'},\r\n  {label: 'Date of death', param: 'death_date', value: 'desc', key: 'dateOfDeath'},\r\n]"
            },
            {
                "name": "translocoConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/transloco/transloco-root.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "TranslocoConfig",
                "defaultValue": "{\r\n  availableLangs: ['cs', 'da', 'de', 'en', 'es', 'nb', 'nl', 'sk', 'sv'],\r\n  defaultLang: 'en',\r\n  reRenderOnLangChange: true,\r\n  prodMode: environment.production,\r\n}"
            },
            {
                "name": "translocoLoader",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/transloco/transloco.loader.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  provide: TRANSLOCO_LOADER,\r\n  useClass: TranslocoHttpLoader\r\n}"
            },
            {
                "name": "translocoProvider",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/transloco/transloco-root.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  provide: TRANSLOCO_CONFIG,\r\n  useValue: translocoConfig\r\n}"
            },
            {
                "name": "types",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/search-settings/search-settings.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    name: 'Funeral home',\r\n    isAvailable: false,\r\n    isDefault: false\r\n  },\r\n  {\r\n    name: 'National search',\r\n    isAvailable: true,\r\n    isDefault: true\r\n  },\r\n  {\r\n    name: 'Global search',\r\n    isAvailable: true,\r\n    isDefault: false\r\n  }\r\n]"
            },
            {
                "name": "units",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/icon/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  cm: 'cm',\r\n  rem: 'rem',\r\n  mm: 'mm',\r\n  in: 'in',\r\n  px: 'px',\r\n  pt: 'pt',\r\n  pc: 'pc',\r\n}"
            },
            {
                "name": "WithPicture",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/banner/banner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<BannerComponent>",
                "defaultValue": "(args) => {\r\n  return {\r\n    component: BannerComponent,\r\n    props: {\r\n      imageSource: args.imageSource.length !== 0\r\n        ? args.imageSource\r\n        : '/banner/banner1.png',\r\n      height: args.height,\r\n      imageOptions: args.imageOptions\r\n    },\r\n  };\r\n}"
            }
        ],
        "functions": [
            {
                "name": "Destroyable",
                "file": "src/app/core/destroyable/take-until-destroy.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "ClassDecorator"
            },
            {
                "name": "initializeKeycloak",
                "file": "src/app/keycloackhelper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "keycloak",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "any",
                "jsdoctags": [
                    {
                        "name": "keycloak",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "takeUntilDestroyed",
                "file": "src/app/core/destroyable/take-until-destroy.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "component",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "MonoTypeOperatorFunction<T>",
                "jsdoctags": [
                    {
                        "name": "component",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "tagName": {
                            "pos": 602,
                            "end": 609,
                            "flags": 0,
                            "escapedText": "example"
                        },
                        "comment": "<p>this.pending$.pipe(\n    takeUntilDestroyed(this)\n).subscribe(() =&gt; {\n    Do somethings\n});</p>\n"
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [
            {
                "name": "ControlType",
                "childs": [
                    {
                        "name": "Boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "boolean"
                    },
                    {
                        "name": "Number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "number"
                    },
                    {
                        "name": "Range",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "range"
                    },
                    {
                        "name": "Object",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "object"
                    },
                    {
                        "name": "ArrayObject",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "object"
                    },
                    {
                        "name": "File",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "file"
                    },
                    {
                        "name": "Select",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "select"
                    },
                    {
                        "name": "MultiSelect",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "multi-select"
                    },
                    {
                        "name": "Radio",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "radio"
                    },
                    {
                        "name": "InlineRadio",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "inline-radio"
                    },
                    {
                        "name": "Checkbox",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "check"
                    },
                    {
                        "name": "InlineCheckbox",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "inline-check"
                    },
                    {
                        "name": "InputTypeText",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "text"
                    },
                    {
                        "name": "InputTypeColor",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "color"
                    },
                    {
                        "name": "InputTypeDate",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "date"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/stories/control-types.ts"
            },
            {
                "name": "Direction",
                "childs": [
                    {
                        "name": "Left",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Left"
                    },
                    {
                        "name": "Right",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Right"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/stories/directions.ts"
            }
        ],
        "groupedVariables": {
            "src/app/core/web-storage/session-storage.service.ts": [
                {
                    "name": "APP_PREFIX",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/web-storage/session-storage.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'APP__'"
                }
            ],
            "src/stories/banner/banner.stories.ts": [
                {
                    "name": "bannerOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/banner/banner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  banner1: './banner/banner1.png',\r\n  banner2: './banner/banner2.png',\r\n  banner3: './banner/banner3.png',\r\n  banner4: './banner/banner4.png',\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/banner/banner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<BannerComponent>",
                    "defaultValue": "(args) => {\r\n  return {\r\n    props: {\r\n      ...args,\r\n      height: args.height,\r\n    },\r\n  }\r\n}"
                },
                {
                    "name": "WithPicture",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/banner/banner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<BannerComponent>",
                    "defaultValue": "(args) => {\r\n  return {\r\n    component: BannerComponent,\r\n    props: {\r\n      imageSource: args.imageSource.length !== 0\r\n        ? args.imageSource\r\n        : '/banner/banner1.png',\r\n      height: args.height,\r\n      imageOptions: args.imageOptions\r\n    },\r\n  };\r\n}"
                }
            ],
            "src/app/customization-admin/components/index.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/customization-admin/components/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  NetNoticeTemplateComponent,\r\n  NewGenerationTemplateComponent,\r\n  StandardTemplateComponent,\r\n  ImageUploadComponent\r\n]"
                }
            ],
            "src/app/memorial/components/index.ts": [
                {
                    "name": "COMPONENTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/memorial/components/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  StandardViewComponent,\r\n  UmbraDumbraViewComponent,\r\n  NetNoticeViewComponent,\r\n  FooterComponent,\r\n  DateRangeComponent\r\n]"
                }
            ],
            "src/app/customization-admin/containers/index.ts": [
                {
                    "name": "containers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/customization-admin/containers/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  CustomAdminPanelComponent,\r\n  CardComponent,\r\n  BannerImageComponent,\r\n  SearchComponent,\r\n  ColorsComponent,\r\n  RecentDeceasedComponent,\r\n  LogotypeComponent,\r\n  LayoutsComponent,\r\n  SnippetLinkComponent,\r\n  SaveSettingsComponent\r\n]"
                }
            ],
            "src/app/memorial/containers/index.ts": [
                {
                    "name": "CONTAINERS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/memorial/containers/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  UserListComponent,\r\n  SearchComponent,\r\n  NotifyComponent\r\n]"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/stories/layout/layout.stories.ts": [
                {
                    "name": "currentLayoutOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/layout/layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  standardTheme: 0,\r\n  newGenerationTheme: 1,\r\n  netNotice: 2,\r\n  custom: 3\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/layout/layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
                }
            ],
            "src/app/transloco/transloco.missing-handler.ts": [
                {
                    "name": "customMissingHandler",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/transloco/transloco.missing-handler.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  provide: TRANSLOCO_MISSING_HANDLER,\r\n  useClass: CustomHandler\r\n}"
                }
            ],
            "src/stories/search/search.stories.ts": [
                {
                    "name": "CustomSearchBox",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/search/search.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SearchBoxComponent>",
                    "defaultValue": "(args) => {\r\n  return {\r\n    props: {\r\n      searchLabel: args.searchLabel,\r\n      placeholder: args.placeholder,\r\n      isLocalSearch: args.isLocalSearch,\r\n      isCustomSearch: true\r\n    }\r\n  }\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/search/search.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SearchBoxComponent>",
                    "defaultValue": "(args) => {\r\n  return {\r\n    props: {\r\n      searchLabel: args.searchLabel,\r\n      placeholder: args.placeholder,\r\n      isLocalSearch: args.isLocalSearch\r\n    }\r\n  }\r\n}"
                }
            ],
            "src/stories/select/select.stories.ts": [
                {
                    "name": "CustomSearchControl",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CustomSearchControlComponent>",
                    "defaultValue": "(args) => {\r\n  return {\r\n    component: CustomSearchControlComponent,\r\n    props: {\r\n      icon: args.icon,\r\n      iconPlace: args.iconPlace,\r\n      hasIconForLabel: args.hasIconForLabel,\r\n      hasIconForOption: args.hasIconForOption,\r\n    }\r\n  }\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<BasicSelectComponent>",
                    "defaultValue": "(args) => {\r\n  return {\r\n    component: BasicSelectComponent,\r\n    props: {\r\n      icon: args.icon,\r\n      iconPlace: args.iconPlace,\r\n      hasIconForLabel: args.hasIconForLabel,\r\n      hasIconForOption: args.hasIconForOption,\r\n    }\r\n  }\r\n}"
                },
                {
                    "name": "demoIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  funnel: 'funnel',\r\n  arrowDownUp: 'arrow-down-up',\r\n  handThumbsUp: 'hand-thumbs-up',\r\n  infoCircle: 'info-circle',\r\n  lock: 'lock',\r\n}"
                },
                {
                    "name": "MultiSelectCheckbox",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<MultiSelectCheckboxComponent>",
                    "defaultValue": "(args) => {\r\n  return {\r\n    component: MultiSelectCheckboxComponent,\r\n    props: {\r\n      icon: args.icon,\r\n      iconPlace: args.iconPlace,\r\n      hasIconForLabel: args.hasIconForLabel,\r\n      hasIconForOption: args.hasIconForOption,\r\n      selectedPeople: args.selectedPeople,\r\n    }\r\n  }\r\n}"
                },
                {
                    "name": "SearchAutoComplete",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SearchAutocompleteComponent>",
                    "defaultValue": "(args) => {\r\n  return {\r\n    component: SearchAutocompleteComponent,\r\n    props: {\r\n      icon: args.icon,\r\n      iconPlace: args.iconPlace,\r\n      hasIconForLabel: args.hasIconForLabel,\r\n      hasIconForOption: args.hasIconForOption\r\n    }\r\n  }\r\n}"
                }
            ],
            "src/stories/icon/icon.stories.ts": [
                {
                    "name": "DeathNotice",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/icon/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(arg) => ({\r\n  props: {\r\n    ...arg,\r\n    background: arg.background,\r\n    isDisabled: arg.isDisabled,\r\n    height: arg.height,\r\n    width: arg.width,\r\n  },\r\n})"
                },
                {
                    "name": "Donation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/icon/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(arg) => ({\r\n  props: {\r\n    ...arg,\r\n    background: arg.background,\r\n    icon: iconSource.donationFilterIcon,\r\n    isDisabled: arg.isDisabled\r\n  },\r\n})"
                },
                {
                    "name": "Flower",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/icon/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(arg) => ({\r\n  props: {\r\n    ...arg,\r\n    background: arg.background,\r\n    icon: iconSource.flowerFilterIcon,\r\n    isDisabled: arg.isDisabled\r\n  },\r\n})"
                },
                {
                    "name": "MemorialPage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/icon/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(arg) => ({\r\n  props: {\r\n    ...arg,\r\n    background: arg.background,\r\n    icon: iconSource.candleFilterIcon,\r\n    isDisabled: arg.isDisabled\r\n  },\r\n})"
                },
                {
                    "name": "units",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/icon/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  cm: 'cm',\r\n  rem: 'rem',\r\n  mm: 'mm',\r\n  in: 'in',\r\n  px: 'px',\r\n  pt: 'pt',\r\n  pc: 'pc',\r\n}"
                }
            ],
            "src/stories/admin-banner/admin-banner.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/admin-banner/admin-banner.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
                }
            ],
            "src/stories/color-picker/color-picker.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/color-picker/color-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
                }
            ],
            "src/stories/colors/colors.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/colors/colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(arg) => ({\r\n  props: {\r\n    ...arg,\r\n    lightFontChecked: arg.lightFontChecked,\r\n    darkFontChecked: arg.darkFontChecked\r\n  },\r\n})"
                }
            ],
            "src/stories/customization-admin-page/customization-admin-page.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/customization-admin-page/customization-admin-page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
                }
            ],
            "src/stories/dropdown/dropdown.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/dropdown/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DropDownComponent>",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "demoIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/dropdown/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  funnel: 'funnel',\r\n  arrowDownUp: 'arrow-down-up',\r\n  handThumbsUp: 'hand-thumbs-up',\r\n  infoCircle: 'info-circle',\r\n  lock: 'lock',\r\n}"
                },
                {
                    "name": "Menu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/dropdown/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DropDownComponent>",
                    "defaultValue": "(args) => {\r\n  return {\r\n    component: DropDownComponent,\r\n    props: {\r\n      label: 'Menu',\r\n      icon: demoIcon.lock,\r\n      iconPlace: 'Left',\r\n      items: [\r\n        {\r\n          value: 'Hjem',\r\n          hasIcon: false\r\n        },\r\n        {\r\n          value: 'To the funeral home page',\r\n          hasIcon: false\r\n        },\r\n        {\r\n          value: 'About portal',\r\n          hasIcon: false\r\n        },\r\n        {\r\n          value: 'Terms',\r\n          hasIcon: false\r\n        },\r\n        {\r\n          value: 'Privacy policy',\r\n          hasIcon: false\r\n        },\r\n        {\r\n          value: 'Cookie policy',\r\n          hasIcon: false\r\n        },\r\n        {\r\n          value: 'Administrator login',\r\n          hasIcon: true\r\n        }\r\n      ],\r\n    },\r\n  };\r\n}"
                }
            ],
            "src/stories/filter/filter.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/filter/filter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
                }
            ],
            "src/stories/language/language.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/language/language.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(arg) => ({\r\n  props: {\r\n    ...arg,\r\n    defaultLanguage: arg.defaultLanguage\r\n  },\r\n})"
                },
                {
                    "name": "languages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/language/language.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  cs: 'cs',\r\n  da: 'da',\r\n  nl: 'nl',\r\n  en: 'en',\r\n  de: 'de',\r\n  nb: 'nb',\r\n  sk: 'sk',\r\n  sv: 'sv',\r\n}"
                }
            ],
            "src/stories/logo/logo.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/logo/logo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<LogoComponent>",
                    "defaultValue": "(args) => ({\r\n  props: { ...args },\r\n})"
                }
            ],
            "src/stories/logo-type/logo-type.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/logo-type/logo-type.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(arg) => ({\r\n  props: {\r\n    ...arg,\r\n    imageSourceL: arg.imageSource,\r\n    logoAlignL: arg.logoAlign,\r\n  },\r\n})"
                }
            ],
            "src/stories/radio/radio.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/radio/radio.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
                }
            ],
            "src/stories/recent-deceased/recent-deceased.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/recent-deceased/recent-deceased.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
                }
            ],
            "src/stories/row/row.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/row/row.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(arg) => ({\r\n  props: {\r\n    ...arg\r\n  },\r\n})"
                }
            ],
            "src/stories/save-discard-change/save-discard-change.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/save-discard-change/save-discard-change.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
                }
            ],
            "src/stories/search-result/search-result.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/search-result/search-result.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(arg) => ({\r\n  props: {\r\n    ...arg\r\n  },\r\n})"
                }
            ],
            "src/stories/search-settings/search-settings.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/search-settings/search-settings.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(arg) => ({\r\n  props: {\r\n    ...arg,\r\n    types: arg.types\r\n  },\r\n})"
                },
                {
                    "name": "types",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/search-settings/search-settings.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    name: 'Funeral home',\r\n    isAvailable: false,\r\n    isDefault: false\r\n  },\r\n  {\r\n    name: 'National search',\r\n    isAvailable: true,\r\n    isDefault: true\r\n  },\r\n  {\r\n    name: 'Global search',\r\n    isAvailable: true,\r\n    isDefault: false\r\n  }\r\n]"
                }
            ],
            "src/stories/snippet-link/snippet-link.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/snippet-link/snippet-link.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
                }
            ],
            "src/stories/sort/sort.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/sort/sort.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
                }
            ],
            "src/stories/toggle/toggle.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/toggle/toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
                }
            ],
            "src/stories/layout-template/net-notice/net-notice.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/layout-template/net-notice/net-notice.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
                }
            ],
            "src/stories/layout-template/new-generation/new-generation.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/layout-template/new-generation/new-generation.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
                }
            ],
            "src/stories/layout-template/standard/standard.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/layout-template/standard/standard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(arg) => ({\r\n  props: arg,\r\n})"
                }
            ],
            "src/app/core/destroyable/take-until-destroy.ts": [
                {
                    "name": "DESTROY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/destroyable/take-until-destroy.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Symbol('__destroyed')"
                }
            ],
            "src/environments/environment.kubernetes.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.kubernetes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  staging: false,\r\n  baseUrl: 'http://10.2.0.222:8081',\r\n  fakeUrl: 'http://localhost:3000',\r\n  apiBaseURL: '/apis',\r\n  keycloakRedirectURL: '/auth',\r\n  realm: 'demo',\r\n  clientId: 'my-app',\r\n  kubernetes: true\r\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  staging: false,\r\n  baseUrl: 'http://10.2.0.222',\r\n  fakeUrl: 'http://localhost:3000',\r\n  apiBaseURL: 'http://10.2.0.222:8081',\r\n  keycloakRedirectURL: 'http://10.2.0.222:8081',\r\n  realm: 'demo',\r\n  clientId: 'my-app',\r\n  kubernetes: false\r\n}"
                }
            ],
            "src/environments/environment.staging.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.staging.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  staging: true,\r\n  baseUrl: 'http://10.2.0.222',\r\n  apiBaseURL: 'http://10.2.0.222:8081',\r\n  fakeUrl: 'http://localhost:3000',\r\n  keycloakRedirectURL: 'http://10.2.0.222:8080/auth',\r\n  kubenetes: '',\r\n  realm: 'demo',\r\n  clientId: 'my-app',\r\n  kubernetes: false\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  staging: false,\r\n  baseUrl: 'http://localhost:4200',\r\n  apiBaseURL: 'http://localhost:8090/apis',\r\n  keycloakRedirectURL: 'http://localhost:8080/auth',\r\n  fakeUrl: 'http://localhost:3000',\r\n  realm: 'demo',\r\n  clientId: 'my-app',\r\n  kubernetes: false\r\n}"
                }
            ],
            "src/app/memorial/models/sort.model.ts": [
                {
                    "name": "filterItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/memorial/models/sort.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<Filter>",
                    "defaultValue": "[\r\n  {label: 'Filter by', param: null, value: null, key: 'filterBy'},\r\n  {label: 'Memorial page', param: 'memorial_page', value: 'desc', key: 'memorialPage'},\r\n  {label: 'Have donations', param: 'having_donation', value: 'true', key: 'haveDonation'},\r\n  {label: 'Has death notice', param: 'having_death_notice', value: 'true', key: 'hasDeathNotice'},\r\n  {label: 'Has flower shop', param: 'having_flower_shop', value: 'Home', key: 'hasFlowerShop'},\r\n]"
                },
                {
                    "name": "sortItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/memorial/models/sort.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<Sort>",
                    "defaultValue": "[\r\n  {label: 'Sort by', param: null, value: null, key: 'sortBy'},\r\n  {label: 'Date of birth', param: 'birth_date', value: 'desc', key: 'dateOfBirth'},\r\n  {label: 'Date of death', param: 'death_date', value: 'desc', key: 'dateOfDeath'},\r\n]"
                }
            ],
            "src/stories/icon/icon.ts": [
                {
                    "name": "iconSource",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/icon/icon.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  deathNoticeIcon: './DNG.svg',\r\n  candleFilterIcon: './heart.svg',\r\n  donationFilterIcon: './donate.svg',\r\n  flowerFilterIcon: './flower.svg',\r\n}"
                }
            ],
            "src/stories/language/language.component.ts": [
                {
                    "name": "languageOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/language/language.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  { label: 'Česky', value: 'cs', flag: './flags/czech.png' },\r\n  { label: 'Dansk', value: 'da', flag: './flags/dansk.png' },\r\n  { label: 'Nederlands', value: 'nl', flag: './flags/netherlands.png' },\r\n  { label: 'English', value: 'en', flag: './flags/english.png' },\r\n  { label: 'Deutsch', value: 'de', flag: './flags/deutsch.png' },\r\n  { label: 'Norsk', value: 'nb', flag: './flags/norway.png' },\r\n  { label: 'Slovensky', value: 'sk', flag: './flags/slovakia.png' },\r\n  { label: 'Svenska', value: 'sv', flag: './flags/svenska.png' },\r\n]"
                }
            ],
            "src/stories/portal-page/portal-page.stories.ts": [
                {
                    "name": "PortalPage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/portal-page/portal-page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(arg) => ({\r\n  props: {\r\n    ...arg\r\n  },\r\n})"
                }
            ],
            "src/app/core/services/index.ts": [
                {
                    "name": "SERVICES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/services/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  AuthStorageService,\r\n  SessionStorageService,\r\n  LocalStorageService,\r\n  JwtService\r\n]"
                }
            ],
            "src/app/transloco/transloco-root.module.ts": [
                {
                    "name": "translocoConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/transloco/transloco-root.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslocoConfig",
                    "defaultValue": "{\r\n  availableLangs: ['cs', 'da', 'de', 'en', 'es', 'nb', 'nl', 'sk', 'sv'],\r\n  defaultLang: 'en',\r\n  reRenderOnLangChange: true,\r\n  prodMode: environment.production,\r\n}"
                },
                {
                    "name": "translocoProvider",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/transloco/transloco-root.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  provide: TRANSLOCO_CONFIG,\r\n  useValue: translocoConfig\r\n}"
                }
            ],
            "src/app/transloco/transloco.loader.ts": [
                {
                    "name": "translocoLoader",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/transloco/transloco.loader.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  provide: TRANSLOCO_LOADER,\r\n  useClass: TranslocoHttpLoader\r\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/core/destroyable/take-until-destroy.ts": [
                {
                    "name": "Destroyable",
                    "file": "src/app/core/destroyable/take-until-destroy.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "ClassDecorator"
                },
                {
                    "name": "takeUntilDestroyed",
                    "file": "src/app/core/destroyable/take-until-destroy.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "component",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "MonoTypeOperatorFunction<T>",
                    "jsdoctags": [
                        {
                            "name": "component",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "tagName": {
                                "pos": 602,
                                "end": 609,
                                "flags": 0,
                                "escapedText": "example"
                            },
                            "comment": "<p>this.pending$.pipe(\n    takeUntilDestroyed(this)\n).subscribe(() =&gt; {\n    Do somethings\n});</p>\n"
                        }
                    ]
                }
            ],
            "src/app/keycloackhelper.ts": [
                {
                    "name": "initializeKeycloak",
                    "file": "src/app/keycloackhelper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "keycloak",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "any",
                    "jsdoctags": [
                        {
                            "name": "keycloak",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/stories/control-types.ts": [
                {
                    "name": "ControlType",
                    "childs": [
                        {
                            "name": "Boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "boolean"
                        },
                        {
                            "name": "Number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "number"
                        },
                        {
                            "name": "Range",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "range"
                        },
                        {
                            "name": "Object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "object"
                        },
                        {
                            "name": "ArrayObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "object"
                        },
                        {
                            "name": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "file"
                        },
                        {
                            "name": "Select",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "select"
                        },
                        {
                            "name": "MultiSelect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "multi-select"
                        },
                        {
                            "name": "Radio",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "radio"
                        },
                        {
                            "name": "InlineRadio",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "inline-radio"
                        },
                        {
                            "name": "Checkbox",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "check"
                        },
                        {
                            "name": "InlineCheckbox",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "inline-check"
                        },
                        {
                            "name": "InputTypeText",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "text"
                        },
                        {
                            "name": "InputTypeColor",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "color"
                        },
                        {
                            "name": "InputTypeDate",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "date"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/stories/control-types.ts"
                }
            ],
            "src/stories/directions.ts": [
                {
                    "name": "Direction",
                    "childs": [
                        {
                            "name": "Left",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Left"
                        },
                        {
                            "name": "Right",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Right"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/stories/directions.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "DefaultLayoutComponent",
                        "loadChildren": "./memorial/memorial.module#MemorialModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/memorial/memorial-routing.module.ts",
                                        "module": "MemorialRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "UserListComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "MemorialModule"
                            }
                        ]
                    },
                    {
                        "path": "admin",
                        "component": "DefaultLayoutComponent",
                        "loadChildren": "./admin/admin.module#AdminModule",
                        "canActivate": [
                            "AuthGuard"
                        ],
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/admin/admin-routing.module.ts",
                                        "module": "AdminRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "SettingsComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "AdminModule"
                            }
                        ]
                    },
                    {
                        "path": "custom-admin",
                        "component": "DefaultLayoutComponent",
                        "loadChildren": "./customization-admin/customization-admin.module#CustomizationAdminModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/customization-admin/customization-admin-routing.module.ts",
                                        "module": "CustomizationAdminRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "CustomAdminPanelComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "CustomizationAdminModule"
                            }
                        ]
                    },
                    {
                        "path": "auth",
                        "loadChildren": "./auth/auth.module#AuthModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/auth/auth-routing.module.ts",
                                        "module": "AuthRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "LoginComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "AuthModule"
                            }
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/admin/custom-specific/custom-specific.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomSpecificComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/admin/net-notice-template/net-notice-template.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NetNoticeTemplateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/admin/new-generation-template/new-generation-template.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewGenerationTemplateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/admin/settings/settings.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SettingsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/admin/standard-template/standard-template.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StandardTemplateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/admin/store/admin.action.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GetConfig",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/admin/store/admin.action.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GetConfigFail",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/admin/store/admin.action.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GetFuneralHomeSettings",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/admin/store/admin.action.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SaveConfig",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/admin/store/admin.action.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UpdateUserRole",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/admin/store/admin.state.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AdminState",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.guard.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/destroyable/destroyable.component.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DestroyableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/destroyable/take-until-destroy.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "Destroyable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/destroyable/take-until-destroy.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "takeUntilDestroyed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/destroyable/take-until-destroy.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DESTROY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/interceptors/api-prefix.interceptor.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "ApiPrefixInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/interceptors/error-handler.interceptor.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "ErrorHandlerInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/interceptors/http-device.interceptor.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "HttpDeviceInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/interceptors/http-token.interceptor.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "HttpTokenInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/interceptors/success-handler.interceptor.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "SuccessHandlerInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/interceptors/unauthorized.interceptor.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "UnauthorizedInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/auth-storage-model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AuthStorageModel",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/http-error.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "HttpError",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/auth-storage.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthStorageService",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SERVICES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/jwt.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "JwtService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/web-storage/local-storage.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LocalStorageService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/core/web-storage/session-storage.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SessionStorageService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/web-storage/session-storage.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "APP_PREFIX",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/customization-admin/components/image-upload/image-upload.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ImageUploadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/customization-admin/components/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/customization-admin/components/net-notice-template/net-notice-template.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NetNoticeTemplateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/customization-admin/components/new-generation-template/new-generation-template.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewGenerationTemplateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/customization-admin/components/standard-template/standard-template.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StandardTemplateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/customization-admin/containers/banner-image/banner-image.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BannerImageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "src/app/customization-admin/containers/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/customization-admin/containers/colors/colors.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColorsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/customization-admin/containers/custom-admin-panel/custom-admin-panel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomAdminPanelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/customization-admin/containers/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "containers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/customization-admin/containers/layouts/layouts.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LayoutsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/customization-admin/containers/logotype/logotype.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LogotypeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/customization-admin/containers/recent-deceased/recent-deceased.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RecentDeceasedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/customization-admin/containers/save-settings/save-settings.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SaveSettingsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/customization-admin/containers/search/search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/customization-admin/containers/snippet-link/snippet-link.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SnippetLinkComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/customization-admin/models/admin-search-type.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AdminSearchTypeModel",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/keycloackhelper.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "initializeKeycloak",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/default-layout/default-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DefaultLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/language-select/language-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LanguageSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/components/date-range/date-range.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateRangeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/components/filter/filter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/components/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/components/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COMPONENTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/components/net-notice-view/net-notice-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NetNoticeViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/components/sort/sort.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SortComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/components/standard-view/standard-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StandardViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/components/umbra-dumbra-view/umbra-dumbra-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UmbraDumbraViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/containers/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CONTAINERS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/containers/notify/notify.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotifyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/containers/search/search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/containers/user-list/user-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/38",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/models/funeralhome.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FuneralHomeSetting",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/models/search-param.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SearchParam",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/models/sort.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Filter",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/models/sort.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Sort",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/models/sort.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "filterItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/models/sort.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sortItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/models/user.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/pipe/translate.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "TranslatePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/services/date-helper.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DateHelperService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/store/memorial.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FilterMemorialPage",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/store/memorial.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GetCityAndRegion",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/store/memorial.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GetFuneralHomeSettings",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/store/memorial.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GetUsers",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/store/memorial.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GetUsersFailed",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/store/memorial.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SearchBox",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/store/memorial.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SearchLocally",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/store/memorial.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SortMemorialPage",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/store/memorial.selectors.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MemorialSelectors",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/memorial/store/memorial.state.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MemorialState",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/checkbox/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/toggle/toggle/toggle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToggleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/transloco/transloco-root.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "translocoConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/transloco/transloco-root.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "translocoProvider",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/transloco/transloco.loader.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TranslocoHttpLoader",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/transloco/transloco.loader.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "translocoLoader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/transloco/transloco.missing-handler.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CustomHandler",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/transloco/transloco.missing-handler.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "customMissingHandler",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.kubernetes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.staging.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/admin-banner/admin-banner.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/admin-banner/admin-banner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AdminBannerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/stories/banner/banner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BannerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/stories/banner/banner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bannerOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/banner/banner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/banner/banner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithPicture",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/color-picker/color-picker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColorPickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/stories/color-picker/color-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/colors/colors.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColorsCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/stories/colors/colors.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/customization-admin-page/customization-admin-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomizationAdminPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/customization-admin-page/customization-admin-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/dropdown/dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropDownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/stories/dropdown/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/dropdown/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "demoIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/dropdown/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Menu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/filter/filter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AdvancedFilterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/stories/filter/filter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/stories/icon/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DeathNotice",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/icon/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Donation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/icon/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Flower",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/icon/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MemorialPage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/icon/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "units",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/icon/icon.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconSource",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/language/language.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LanguageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/language/language.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "languageOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/language/language.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/language/language.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "languages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/layout-template/net-notice/net-notice.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NetNoticeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/layout-template/net-notice/net-notice.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/layout-template/new-generation/new-generation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewGenerationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/layout-template/new-generation/new-generation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/layout-template/standard/standard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StandardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/layout-template/standard/standard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/layout/layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LayoutCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/stories/layout/layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "currentLayoutOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/layout/layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/logo-type/logo-type.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LogoTypeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/stories/logo-type/logo-type.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/logo/logo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LogoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/logo/logo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/portal-page/portal-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PortalPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/portal-page/portal-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PortalPage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/radio/radio.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/stories/radio/radio.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/recent-deceased/recent-deceased.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RecentDeceasedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/recent-deceased/recent-deceased.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/row/row.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RowComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/stories/row/row.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/save-discard-change/save-discard-change.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/save-discard-change/save-discard-change.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SaveDiscardChangeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/stories/search-result/search-result.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchResultComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/stories/search-result/search-result.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/search-settings/search-settings.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchSettingsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/search-settings/search-settings.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/search-settings/search-settings.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "types",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/search/custom-search-input/custom-search-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomSearchInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/stories/search/search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchBoxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/stories/search/search.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomSearchBox",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/search/search.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select/basic/basic.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BasicSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/stories/select/custom-search-control/custom-search-control.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomSearchControlComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/stories/select/multiselect-checkbox/multiselect-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MultiSelectCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/stories/select/search-autocomplete/search-autocomplete.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchAutocompleteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/stories/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomSearchControl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "demoIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MultiSelectCheckbox",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SearchAutoComplete",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/snippet-link/snippet-link.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SnippetLinkComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/stories/snippet-link/snippet-link.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/sort/sort.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SortComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/sort/sort.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/toggle/toggle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToggleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/toggle/toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}