{"version":3,"file":"angular-pintura.js","sources":["../../../src/angular-pintura/v9/projects/angular-pintura/src/lib/pintura-editor-abstract.component.ts","../../../src/angular-pintura/v9/projects/angular-pintura/src/lib/pintura-editor.component.ts","../../../src/angular-pintura/v9/projects/angular-pintura/src/lib/pintura-editor-modal.component.ts","../../../src/angular-pintura/v9/projects/angular-pintura/src/lib/pintura-editor-overlay.component.ts","../../../src/angular-pintura/v9/projects/angular-pintura/src/lib/angular-pintura.module.ts","../../../../src/angular-pintura/v9/projects/angular-pintura/src/public-api.ts","../../../../src/angular-pintura/v9/projects/angular-pintura/src/angular-pintura.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, Output, EventEmitter, ElementRef, NgZone, OnInit } from '@angular/core';\n\n// @ts-ignore\nimport { ImageSource, PinturaEditorOptions, PinturaEditor, dispatchEditorEvents } from 'pintura';\n\n@Component({\n    selector: 'pintura-editor',\n    template: ` <ng-content></ng-content> `,\n    styles: [],\n})\nexport class PinturaEditorAbstractComponent implements OnInit {\n    protected element: ElementRef;\n    protected editor: PinturaEditor;\n    protected zone: NgZone;\n    private unsubs: Function[] = [];\n\n    @Input() src: ImageSource = undefined;\n    @Input() options: PinturaEditorOptions = undefined;\n\n    @Output() loadstart: EventEmitter<any> = new EventEmitter();\n    @Output() loaderror: EventEmitter<any> = new EventEmitter();\n    @Output() loadprogress: EventEmitter<any> = new EventEmitter();\n    @Output() load: EventEmitter<any> = new EventEmitter();\n    @Output() processstart: EventEmitter<any> = new EventEmitter();\n    @Output() processerror: EventEmitter<any> = new EventEmitter();\n    @Output() processprogress: EventEmitter<any> = new EventEmitter();\n    @Output() process: EventEmitter<any> = new EventEmitter();\n    @Output() update: EventEmitter<any> = new EventEmitter();\n    @Output() undo: EventEmitter<any> = new EventEmitter();\n    @Output() redo: EventEmitter<any> = new EventEmitter();\n    @Output() revert: EventEmitter<any> = new EventEmitter();\n    @Output() destroy: EventEmitter<any> = new EventEmitter();\n    @Output() show: EventEmitter<any> = new EventEmitter();\n    @Output() hide: EventEmitter<any> = new EventEmitter();\n    @Output() close: EventEmitter<any> = new EventEmitter();\n    @Output() addshape: EventEmitter<any> = new EventEmitter();\n    @Output() selectshape: EventEmitter<any> = new EventEmitter();\n    @Output() updateshape: EventEmitter<any> = new EventEmitter();\n    @Output() removeshape: EventEmitter<any> = new EventEmitter();\n\n    constructor(element: ElementRef, zone: NgZone) {\n        this.element = element;\n        this.zone = zone;\n    }\n\n    private routeEvent: EventHandlerNonNull = (e: CustomEvent) => {\n        const emitter = this[e.type.split(':')[1]];\n        if (!emitter) return;\n        emitter.emit(e.detail);\n    };\n\n    protected initEditor(element: HTMLElement, props: any): PinturaEditor {\n        return undefined;\n    }\n\n    ngAfterViewInit(): void {\n        this.element.nativeElement.classList.add('PinturaRootWrapper');\n        // will block angular from listening to events inside the editor\n        this.zone.runOutsideAngular(() => {\n            this.editor = this.initEditor(\n                this.element.nativeElement,\n                Object.assign({}, this.options, { src: this.src })\n            );\n            this.unsubs = dispatchEditorEvents(this.editor, this.element.nativeElement);\n        });\n\n        // route events\n        Object.keys(this)\n            .filter((key) => this[key] instanceof EventEmitter)\n            .forEach((key) => {\n                this.element.nativeElement.addEventListener(`pintura:${key}`, this.routeEvent);\n            });\n    }\n\n    ngOnChanges() {\n        if (!this.editor) return;\n        Object.assign(this.editor, this.options, { src: this.src });\n    }\n\n    ngOnDestroy() {\n        if (!this.editor) return;\n\n        this.editor.destroy();\n\n        // unsubscribe\n        this.unsubs.forEach((unsub) => unsub());\n        this.unsubs = [];\n\n        // unroute events\n        Object.keys(this)\n            .filter((key) => this[key] instanceof EventEmitter)\n            .forEach((key) => {\n                this.element.nativeElement.removeEventListener(`pintura:${key}`, this.routeEvent);\n            });\n\n        this.editor = undefined;\n    }\n\n    ngOnInit(): void {}\n}\n","import { Component, OnInit } from '@angular/core';\n// @ts-ignore\nimport { appendEditor } from 'pintura';\nimport { PinturaEditorAbstractComponent } from './pintura-editor-abstract.component';\n\n@Component({\n    selector: 'pintura-editor',\n    template: ` <ng-content></ng-content> `,\n    styles: [],\n})\nexport class PinturaEditorComponent extends PinturaEditorAbstractComponent implements OnInit {\n    initEditor(element: HTMLElement, props: any) {\n        return appendEditor(element, props);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { openEditor, PinturaEditorModal } from 'pintura';\nimport { PinturaEditorAbstractComponent } from './pintura-editor-abstract.component';\n\n@Component({\n    selector: 'pintura-editor-modal',\n    template: ` <ng-content></ng-content> `,\n    styles: [],\n})\nexport class PinturaEditorModalComponent extends PinturaEditorAbstractComponent implements OnInit {\n    initEditor(element: HTMLElement, props: any) {\n        return openEditor(props);\n    }\n\n    showEditor() {\n        (this.editor as PinturaEditorModal).show();\n    }\n\n    hideEditor() {\n        (this.editor as PinturaEditorModal).hide();\n    }\n\n    ngOnDestroy() {\n        if (!this.editor) return;\n        this.editor = undefined;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n// @ts-ignore\nimport { overlayEditor } from 'pintura';\nimport { PinturaEditorAbstractComponent } from './pintura-editor-abstract.component';\n\n@Component({\n    selector: 'pintura-editor-overlay',\n    template: ` <ng-content></ng-content> `,\n    styles: [],\n})\nexport class PinturaEditorOverlayComponent\n    extends PinturaEditorAbstractComponent\n    implements OnInit {\n    initEditor(element: HTMLElement, props: any) {\n        return overlayEditor(element, props);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { PinturaEditorComponent } from './pintura-editor.component';\nimport { PinturaEditorModalComponent } from './pintura-editor-modal.component';\nimport { PinturaEditorOverlayComponent } from './pintura-editor-overlay.component';\n\n@NgModule({\n    declarations: [\n        PinturaEditorComponent,\n        PinturaEditorModalComponent,\n        PinturaEditorOverlayComponent,\n    ],\n    imports: [],\n    exports: [PinturaEditorComponent, PinturaEditorModalComponent, PinturaEditorOverlayComponent],\n})\nexport class AngularPinturaModule {}\n","/*\n * Public API Surface of angular-pintura\n */\n\nexport * from './lib/pintura-editor.component';\nexport * from './lib/pintura-editor-modal.component';\nexport * from './lib/pintura-editor-overlay.component';\nexport * from './lib/angular-pintura.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {PinturaEditorAbstractComponent as ɵa} from './lib/pintura-editor-abstract.component';"]}